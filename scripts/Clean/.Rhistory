top_n_values <- 5
# Test with ggpot2
custom_colors <- c("blue", "darkblue", "cyan", "green", "darkgreen", "lightgreen", "lightblue","turquoise", "lightgrey", "darkgrey")
library(cowplot)
library(patchwork)
# Get unique regions in the dataset
unique_regions <- unique(binary2015$region)
# Create a color dictionary mapping each region to a specific color
region_colors <- setNames(custom_colors[1:length(unique_regions)], unique_regions)
# Create a common legend manually
legend_data <- data.frame(region = unique_regions)
legend_plot <- ggplot(legend_data, aes(x = region, fill = region)) +
geom_bar(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = region_colors) +
labs(title="Regions")+
theme_void() +
theme(
legend.position = "none",
axis.text.y = element_text(angle = 0, hjust = 1), plot.title = element_text(size = 10)
) +
coord_flip()
plots <- list()
for (year in unique_years) {
top_countries <- binary2015[binary2015$year == year, ] %>%
arrange(desc(year), desc(diff_overallscore)) %>%
head(n = top_n_values)
plot <- ggplot(data = top_countries, mapping = aes(x = country, y = diff_overallscore, fill = region)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = region_colors) +  # Use the specified colors
labs(title = paste(year), x = NULL, y = NULL) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1), legend.position = "none", plot.title = element_text(size = 10)) +
scale_y_continuous(limits = c(0, 3))
plots[[as.character(year)]] <- plot
}
# Arrange the plots in a 4x4 grid using patchwork
wrap <- wrap_plots(plots, ncol = 5)
wrap
patchwork <- wrap + inset_element(legend_plot, left = 0.3, bottom = 1, right = 1, top = 0.5, align_to = 'full')
patchwork + plot_annotation(
title = 'Worst 5 countries in terms of SDG score improvement'
)
legend_plot
top_n_values <- 5
# Test with ggpot2
custom_colors <- c("blue", "darkblue", "cyan", "green", "darkgreen", "lightgreen", "lightblue","turquoise", "lightgrey", "darkgrey")
library(cowplot)
library(patchwork)
# Get unique regions in the dataset
unique_regions <- unique(binary2015$region)
# Create a color dictionary mapping each region to a specific color
region_colors <- setNames(custom_colors[1:length(unique_regions)], unique_regions)
# Create a common legend manually
legend_data <- data.frame(region = unique_regions)
legend_plot <- ggplot(legend_data, aes(x = region, fill = region)) +
geom_bar(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = region_colors) +
labs(title="Regions")+
theme_void() +
theme(
legend.position = "none",
axis.text.y = element_text(angle = 0, hjust = 1), plot.title = element_text(size = 10)
) +
coord_flip()
plots <- list()
for (year in unique_years) {
top_countries <- binary2015[binary2015$year == year, ] %>%
arrange(desc(year), desc(diff_overallscore)) %>%
head(n = top_n_values)
plot <- ggplot(data = top_countries, mapping = aes(x = country, y = diff_overallscore, fill = region)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = region_colors) +  # Use the specified colors
labs(title = paste(year), x = NULL, y = NULL) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1), legend.position = "none", plot.title = element_text(size = 20)) +
scale_y_continuous(limits = c(0, 3))
plots[[as.character(year)]] <- plot
}
# Arrange the plots in a 4x4 grid using patchwork
wrap <- wrap_plots(plots, ncol = 5)
wrap
patchwork <- wrap + inset_element(legend_plot, left = 0.3, bottom = 1, right = 1, top = 0.5, align_to = 'full')
patchwork + plot_annotation(
title = 'Worst 5 countries in terms of SDG score improvement'
)
legend_plot
top_n_values <- 5
# Test with ggpot2
custom_colors <- c("blue", "darkblue", "cyan", "green", "darkgreen", "lightgreen", "lightblue","turquoise", "lightgrey", "darkgrey")
library(cowplot)
library(patchwork)
# Get unique regions in the dataset
unique_regions <- unique(binary2015$region)
# Create a color dictionary mapping each region to a specific color
region_colors <- setNames(custom_colors[1:length(unique_regions)], unique_regions)
# Create a common legend manually
legend_data <- data.frame(region = unique_regions)
legend_plot <- ggplot(legend_data, aes(x = region, fill = region)) +
geom_bar(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = region_colors) +
labs(y = "Regions") +
theme_void() +
theme(
legend.position = "none",
axis.text.y = element_text(angle = 0, hjust = 1, size = 10),
plot.title = element_text(size = 12, face = "bold")
) +
coord_flip()
plots <- list()
for (year in unique_years) {
top_countries <- binary2015[binary2015$year == year, ] %>%
arrange(desc(year), desc(diff_overallscore)) %>%
head(n = top_n_values)
plot <- ggplot(data = top_countries, mapping = aes(x = country, y = diff_overallscore, fill = region)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = region_colors) +  # Use the specified colors
labs(title = paste(year), x = NULL, y = NULL) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1), legend.position = "none", plot.title = element_text(size = 20)) +
scale_y_continuous(limits = c(0, 3))
plots[[as.character(year)]] <- plot
}
# Arrange the plots in a 4x4 grid using patchwork
wrap <- wrap_plots(plots, ncol = 5)
wrap
patchwork <- wrap + inset_element(legend_plot, left = 0.3, bottom = 1, right = 1, top = 0.5, align_to = 'full')
patchwork + plot_annotation(
title = 'Worst 5 countries in terms of SDG score improvement'
)
legend_plot
top_n_values <- 5
# Test with ggpot2
custom_colors <- c("blue", "darkblue", "cyan", "green", "darkgreen", "lightgreen", "lightblue","turquoise", "lightgrey", "darkgrey")
library(cowplot)
library(patchwork)
# Get unique regions in the dataset
unique_regions <- unique(binary2015$region)
# Create a color dictionary mapping each region to a specific color
region_colors <- setNames(custom_colors[1:length(unique_regions)], unique_regions)
# Create a common legend manually
legend_data <- data.frame(region = unique_regions)
legend_plot <- ggplot(legend_data, aes(x = region, fill = region)) +
geom_bar(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = region_colors) +
labs(title = "Regions") +
theme_void() +
theme(
legend.position = "none",
axis.text.y = element_text(angle = 0, hjust = 1, size = 10),
plot.title = element_text(size = 12, face = "bold")
) +
coord_flip()
plots <- list()
for (year in unique_years) {
top_countries <- binary2015[binary2015$year == year, ] %>%
arrange(desc(year), desc(diff_overallscore)) %>%
head(n = top_n_values)
plot <- ggplot(data = top_countries, mapping = aes(x = country, y = diff_overallscore, fill = region)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = region_colors) +  # Use the specified colors
labs(title = paste(year), x = NULL, y = NULL) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1), legend.position = "none", plot.title = element_text(size = 20)) +
scale_y_continuous(limits = c(0, 3))
plots[[as.character(year)]] <- plot
}
# Arrange the plots in a 4x4 grid using patchwork
wrap <- wrap_plots(plots, ncol = 5)
wrap
patchwork <- wrap + inset_element(legend_plot, left = 0.3, bottom = 1, right = 1, top = 0.5, align_to = 'full')
patchwork + plot_annotation(
title = 'Worst 5 countries in terms of SDG score improvement'
)
legend_plot
top_n_values <- 5
# Test with ggpot2
custom_colors <- c("blue", "darkblue", "cyan", "green", "darkgreen", "lightgreen", "lightblue","turquoise", "lightgrey", "darkgrey")
library(cowplot)
library(patchwork)
# Get unique regions in the dataset
unique_regions <- unique(binary2015$region)
# Create a color dictionary mapping each region to a specific color
region_colors <- setNames(custom_colors[1:length(unique_regions)], unique_regions)
# Create a common legend manually
legend_data <- data.frame(region = unique_regions)
legend_plot <- ggplot(legend_data, aes(x = region, fill = region)) +
geom_bar(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = region_colors) +
labs(title = "Regions") +
theme_void() +
theme(
legend.position = "none",
axis.text.y = element_text(angle = 0, hjust = 1, size = 14),
plot.title = element_text(size = 16, face = "bold")
) +
coord_flip()
plots <- list()
for (year in unique_years) {
top_countries <- binary2015[binary2015$year == year, ] %>%
arrange(desc(year), desc(diff_overallscore)) %>%
head(n = top_n_values)
plot <- ggplot(data = top_countries, mapping = aes(x = country, y = diff_overallscore, fill = region)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = region_colors) +  # Use the specified colors
labs(title = paste(year), x = NULL, y = NULL) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1), legend.position = "none", plot.title = element_text(size = 20)) +
scale_y_continuous(limits = c(0, 3))
plots[[as.character(year)]] <- plot
}
# Arrange the plots in a 4x4 grid using patchwork
wrap <- wrap_plots(plots, ncol = 5)
wrap
patchwork <- wrap + inset_element(legend_plot, left = 0.3, bottom = 1, right = 1, top = 0.5, align_to = 'full')
patchwork + plot_annotation(
title = 'Worst 5 countries in terms of SDG score improvement'
)
legend_plot
top_n_values <- 20
top_countries <- binary2015 %>%
arrange(desc(diff_overallscore)) %>%
head(n = top_n_values)
library(viridis)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
text=paste(top_countries$country),
showlegend = TRUE  # Disable individual legend for each subplot
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3)),
annotations = list(
x = 0.5,
y = 0.95,
text = year,
showarrow = FALSE,
xref = "paper",
yref = "paper",
yanchor = "middle",
font = list(size = 14)
)
)
top_countries <- binary2015 %>%
arrange(desc(diff_overallscore)) %>%
mutate(year=as.factor(year))
top_countries <- binary2015 %>%
arrange(desc(diff_overallscore)) %>%
mutate(year=as.factor(year)) %>%
head(n = top_n_values)
library(viridis)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
text=paste(top_countries$country),
showlegend = TRUE  # Disable individual legend for each subplot
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3)),
annotations = list(
x = 0.5,
y = 0.95,
text = year,
showarrow = FALSE,
xref = "paper",
yref = "paper",
yanchor = "middle",
font = list(size = 14)
)
)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
showlegend = TRUE
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3)),
yaxis = list(title = "Countries")
)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
showlegend = TRUE
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3)),
xaxis = list(title = "Countries")
)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
showlegend = TRUE,
marker = list(size = 10)
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3)),
xaxis = list(title = "Countries",, categoryorder = "total ascending")
)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
showlegend = TRUE,
marker = list(size = 10)
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3)),
xaxis = list(title = "Countries",categoryorder = "total ascending")
)
top_countries <- binary2015 %>%
arrange(desc(diff_overallscore)) %>%
#mutate(year=as.factor(year)) %>%
head(n = top_n_values)
library(viridis)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
showlegend = TRUE,
marker = list(size = 10)
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3)),
xaxis = list(title = "Countries",categoryorder = "total ascending")
)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
showlegend = TRUE,
marker = list(size = 10)
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3.5)),
xaxis = list(title = "Countries",categoryorder = "total ascending")
)
View(top_countries)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
showlegend = TRUE,
marker = list(size = 10),
group = ~interaction(country, year)
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3.5)),
xaxis = list(title = "Countries",categoryorder = "total ascending")
)
top_countries <- binary2015 %>%
arrange(desc(diff_overallscore)) %>%
#mutate(year=as.factor(year)) %>%
head(n = top_n_values)
library(viridis)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
showlegend = TRUE,
marker = list(size = 10),
group = ~interaction(country, year)
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3.5)),
xaxis = list(title = "Countries",categoryorder = "total ascending")
)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
showlegend = TRUE,
marker = list(size = 10),
group = ~interaction(top_countries$country, top_countries$year)
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3.5)),
xaxis = list(title = "Countries",categoryorder = "total ascending")
)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
showlegend = TRUE,
marker = list(size = 10),
split = ~interaction(top_countries$country, top_countries$year)
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3.5)),
xaxis = list(title = "Countries",categoryorder = "total ascending")
)
top_countries <- binary2015 %>%
arrange(desc(diff_overallscore)) %>%
#mutate(year=as.factor(year)) %>%
head(n = top_n_values) %>%
group_by(year, country)
library(viridis)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
showlegend = TRUE,
marker = list(size = 10)
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3.5)),
xaxis = list(title = "Countries",categoryorder = "total ascending")
)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
showlegend = TRUE,
marker = list(size = 10)
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3.5)),
xaxis = list(title = "Countries",categoryorder = "total ascending"),
barmode = "stack"
)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
showlegend = TRUE,
marker = list(size = 10)
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3.5)),
xaxis = list(title = "Countries",categoryorder = "total ascending"),
barmode = "stack"
)
plot_ly() %>%
add_trace(
type = "bar",
x = ~top_countries$country,
y = ~top_countries$diff_overallscore,
color = ~top_countries$year,
colors = "viridis",
showlegend = TRUE,
marker = list(size = 10),
split = ~interaction(top_countries$country, top_countries$year)
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 3.5)),
xaxis = list(title = "Countries",categoryorder = "total ascending"),
barmode = "stack"
)
