args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal12"],
~improvement[after2015 == 0 & goal == "diff_goal12"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal12"],
~country[after2015 == 0 & goal == "diff_goal12"]
)
)
),
label = "Goal 12",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal13"],
~improvement[after2015 == 0 & goal == "diff_goal13"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal13"],
~country[after2015 == 0 & goal == "diff_goal13"]
)
)
),
label = "Goal 13",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal15"],
~improvement[after2015 == 0 & goal == "diff_goal15"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal15"],
~country[after2015 == 0 & goal == "diff_goal15"]
)
)
),
label = "Goal 15",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal16"],
~improvement[after2015 == 0 & goal == "diff_goal16"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal16"],
~country[after2015 == 0 & goal == "diff_goal16"]
)
)
),
label = "Goal 16",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal17"],
~improvement[after2015 == 0 & goal == "diff_goal17"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal17"],
~country[after2015 == 0 & goal == "diff_goal17"]
)
)
),
label = "Goal 17",
method = "restyle"
)
)
)
)
)
# test w/ pivot_longer
data_long <- binary2015 %>%
pivot_longer(cols = c(starts_with("diff_goal"), "diff_overallscore"),
names_to = "goal", values_to = "improvement") %>%
group_by(goal) %>%
top_n(20, wt = improvement) %>%
ungroup()
plot_ly() %>%
add_trace(
type = "bar",
data = data_long,
x = ~country[after2015 == 1 & goal == "diff_overallscore"],
y = ~improvement[after2015 == 1 & goal == "diff_overallscore"],
legendgroup = "after 2015",
name = "after 2015",
marker = list(color = "blue", size = 10),
showlegend = TRUE
) %>%
add_trace(
type = "bar",
x = ~country[after2015 == 0 & goal == "diff_overallscore"],
y = ~improvement[after2015 == 0 & goal == "diff_overallscore"],
legendgroup = "before 2015",
name = "before 2015",
marker = list(color = "red", size = 10),
showlegend = TRUE
) %>%
layout(
title = paste("Top ", top_n_values, " SDG Score evolution"),
yaxis = list(title = "Year difference SDG score", range = c(0, 50)),
xaxis = list(title = "Countries", categoryorder = "total ascending"),
barmode = "stack",
updatemenus = list(
list(
buttons = list(
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_overallscore"],
~improvement[after2015 == 0 & goal == "diff_overallscore"]
),
x = list(
~country[after2015 == 1 & goal == "diff_overallscore"],
~country[after2015 == 0 & goal == "diff_overallscore"]
)
)
),
label = "Overall score",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal1"],
~improvement[after2015 == 0 & goal == "diff_goal1"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal1"],
~country[after2015 == 0 & goal == "diff_goal1"]
)
)
),
label = "Goal 1",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal2"],
~improvement[after2015 == 0 & goal == "diff_goal2"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal2"],
~country[after2015 == 0 & goal == "diff_goal2"]
)
)
),
label = "Goal 2",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal3"],
~improvement[after2015 == 0 & goal == "diff_goal3"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal3"],
~country[after2015 == 0 & goal == "diff_goal3"]
)
)
),
label = "Goal 3",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal4"],
~improvement[after2015 == 0 & goal == "diff_goal4"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal4"],
~country[after2015 == 0 & goal == "diff_goal4"]
)
)
),
label = "Goal 4",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal5"],
~improvement[after2015 == 0 & goal == "diff_goal5"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal5"],
~country[after2015 == 0 & goal == "diff_goal5"]
)
)
),
label = "Goal 5",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal6"],
~improvement[after2015 == 0 & goal == "diff_goal6"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal6"],
~country[after2015 == 0 & goal == "diff_goal6"]
)
)
),
label = "Goal 6",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal7"],
~improvement[after2015 == 0 & goal == "diff_goal7"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal7"],
~country[after2015 == 0 & goal == "diff_goal7"]
)
)
),
label = "Goal 7",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal8"],
~improvement[after2015 == 0 & goal == "diff_goal8"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal8"],
~country[after2015 == 0 & goal == "diff_goal8"]
)
)
),
label = "Goal 8",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal9"],
~improvement[after2015 == 0 & goal == "diff_goal9"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal9"],
~country[after2015 == 0 & goal == "diff_goal9"]
)
)
),
label = "Goal 9",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal10"],
~improvement[after2015 == 0 & goal == "diff_goal10"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal10"],
~country[after2015 == 0 & goal == "diff_goal10"]
)
)
),
label = "Goal 10",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal11"],
~improvement[after2015 == 0 & goal == "diff_goal11"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal11"],
~country[after2015 == 0 & goal == "diff_goal11"]
)
)
),
label = "Goal 11",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal12"],
~improvement[after2015 == 0 & goal == "diff_goal12"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal12"],
~country[after2015 == 0 & goal == "diff_goal12"]
)
)
),
label = "Goal 12",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal13"],
~improvement[after2015 == 0 & goal == "diff_goal13"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal13"],
~country[after2015 == 0 & goal == "diff_goal13"]
)
)
),
label = "Goal 13",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal15"],
~improvement[after2015 == 0 & goal == "diff_goal15"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal15"],
~country[after2015 == 0 & goal == "diff_goal15"]
)
)
),
label = "Goal 15",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal16"],
~improvement[after2015 == 0 & goal == "diff_goal16"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal16"],
~country[after2015 == 0 & goal == "diff_goal16"]
)
)
),
label = "Goal 16",
method = "restyle"
),
list(
args = list(
list(
y = list(
~improvement[after2015 == 1 & goal == "diff_goal17"],
~improvement[after2015 == 0 & goal == "diff_goal17"]
),
x = list(
~country[after2015 == 1 & goal == "diff_goal17"],
~country[after2015 == 0 & goal == "diff_goal17"]
)
)
),
label = "Goal 17",
method = "restyle"
)
)
)
)
)
# Test with ggpot2
custom_colors <- c("blue", "darkblue", "cyan", "green", "darkgreen", "lightgreen", "lightblue","turquoise", "lightgrey", "darkgrey")
library(patchwork)
# Get unique regions in the dataset
unique_regions <- unique(binary2015$region)
# Create a color dictionary mapping each region to a specific color
region_colors <- setNames(custom_colors[1:length(unique_regions)], unique_regions)
# Create a common legend manually
legend_data <- data.frame(region = unique_regions)
legend_plot <- ggplot(legend_data, aes(x = region, fill = region)) +
geom_bar(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = region_colors) +  # Use the specified colors
theme_void() +
theme(
legend.position = "none",
axis.text.y = element_text(angle = 0, hjust = 1)  # Adjust hjust to place text on the right
) +
coord_flip()
plots <- list()
for (year in unique_years) {
top_countries <- binary2015[binary2015$year == year, ] %>%
arrange(desc(year), desc(diff_overallscore)) %>%
head(n = top_n_values)
plot <- ggplot(data = top_countries, mapping = aes(x = country, y = diff_overallscore, fill = region)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = region_colors) +  # Use the specified colors
labs(title = paste("Year", year), x = NULL, y = NULL) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1), legend.position = "none") +
scale_y_continuous(limits = c(0, 3))
plots[[as.character(year)]] <- plot
}
patchwork <- plots[[1]]+ plots[[2]]+plots[[3]]+plots[[4]]+plots[[5]]+plots[[6]]+plots[[7]]+plots[[8]]+plots[[9]]+plots[[10]]+plots[[11]]+plots[[12]]+plots[[13]]+plots[[14]]+legend_plot
patchwork + plot_annotation(
title = 'Worst 5 countries in terms of SDG score improvement'
)
# Arrange the plots in a 4x4 grid using patchwork
grid <- wrap_plots(plots, ncol = 5)
# Arrange the plots in a 4x4 grid using patchwork
wrap_plots(plots, ncol = 5)
top_n_values <- 5
# Test with ggpot2
custom_colors <- c("blue", "darkblue", "cyan", "green", "darkgreen", "lightgreen", "lightblue","turquoise", "lightgrey", "darkgrey")
library(patchwork)
# Get unique regions in the dataset
unique_regions <- unique(binary2015$region)
# Create a color dictionary mapping each region to a specific color
region_colors <- setNames(custom_colors[1:length(unique_regions)], unique_regions)
# Create a common legend manually
legend_data <- data.frame(region = unique_regions)
legend_plot <- ggplot(legend_data, aes(x = region, fill = region)) +
geom_bar(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = region_colors) +  # Use the specified colors
theme_void() +
theme(
legend.position = "none",
axis.text.y = element_text(angle = 0, hjust = 1)  # Adjust hjust to place text on the right
) +
coord_flip()
plots <- list()
for (year in unique_years) {
top_countries <- binary2015[binary2015$year == year, ] %>%
arrange(desc(year), desc(diff_overallscore)) %>%
head(n = top_n_values)
plot <- ggplot(data = top_countries, mapping = aes(x = country, y = diff_overallscore, fill = region)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = region_colors) +  # Use the specified colors
labs(title = paste("Year", year), x = NULL, y = NULL) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1), legend.position = "none") +
scale_y_continuous(limits = c(0, 3))
plots[[as.character(year)]] <- plot
}
# Arrange the plots in a 4x4 grid using patchwork
wrap_plots(plots, ncol = 5)
legend_plot
View(top_countries)
View(top_countries_2)
# Create a common legend manually
legend_data <- data.frame(region = unique_regions)
legend_plot <- ggplot(legend_data, aes(x = region, fill = region)) +
geom_bar(position = position_stack(vjust = 0.5, reverse = TRUE), height = 0.5) +  # Adjust height as needed
scale_fill_manual(values = region_colors) +
labs(title = "Regions") +
theme_void() +
theme(
legend.position = "none",
axis.text.x = element_text(angle = 0, hjust = 1, size = 18),
plot.title = element_text(size = 20, face = "bold")
)
legend_plot
# Create a common legend manually
legend_data <- data.frame(region = unique_regions)
legend_plot <- ggplot(legend_data, aes(x = region, fill = region)) +
geom_bar(position = position_stack(vjust = 0.5, reverse = TRUE), height = 0.5) +  # Adjust height as needed
scale_fill_manual(values = region_colors) +
labs(title = "Regions") +
theme_void() +
theme(
legend.position = "none",
axis.text.x = element_text(angle = 0, hjust = 1, size = 18),
plot.title = element_text(size = 20, face = "bold")
)
legend_plot
# Create a common legend manually
legend_data <- data.frame(region = unique_regions)
legend_plot <- ggplot(legend_data, aes(x = region, fill = region)) +
geom_bar(position = position_stack(vjust = 0.5, reverse = TRUE), height = 0.5, width= 3) +  # Adjust height as needed
scale_fill_manual(values = region_colors) +
labs(title = "Regions") +
theme_void() +
theme(
legend.position = "none",
axis.text.x = element_text(angle = 0, hjust = 1, size = 18),
plot.title = element_text(size = 20, face = "bold")
)
legend_plot
?geom_bar
