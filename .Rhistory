) %>%
ungroup() %>%
group_by(region) %>%
mutate(
MedianByRegion = median(ef_regulation, na.rm = TRUE),
ef_regulation = ifelse(
PercentageMissingByCode < 0.3 & !is.na(ef_regulation),
ef_regulation,
ifelse(PercentageMissingByCode < 0.3, MedianByRegion, ef_regulation)
)
) %>%
select(-PercentageMissingByCode, -MedianByRegion) %>%
ungroup()
na_count <- sapply(data_question1, function(x) sum(is.na(x)))
kable(na_count)
# goal1
question1_missing_goal1 <- data_question1 %>%
group_by(code) %>%
summarize(Na_goal1 = mean(is.na(goal1)))%>%
filter(Na_goal1 != 0)
data_question1 <- data_question1 %>% filter(!code %in% question1_missing_goal1$code)
# Update List of countries deleted
list_country_deleted <- c(list_country_deleted, "KWT","NZL","OMN","SGP","UKR")
# still 42 NA values goal10
#goal10
question1_missing_goal10 <- data_question1 %>%
group_by(code) %>%
summarize(Na_goal10 = mean(is.na(goal10)))%>%
filter(Na_goal10 != 0)
data_question1 <- data_question1 %>% filter(!code %in% question1_missing_goal10$code)
# Update List of countries deleted
list_country_deleted <- c(list_country_deleted, "GUY","TTO")
see_missing24 <- data_question24 %>%
group_by(code) %>%
summarise(across(everything(), ~ sum(is.na(.))) %>%
mutate(num_missing = rowSums(across(everything()))) %>%
filter(num_missing > 0))
variable_names <- names(data_question3_1)
missing_percentages <- sapply(data_question3_1, function(col) mean(is.na(col)) * 100)
missing_data_summary <- data.frame(
Variable = variable_names,
Missing_Percentage = missing_percentages
)
missing_data_summary <- missing_data_summary %>%
mutate(VariableGroup = ifelse(startsWith(Variable, "goal") & Missing_Percentage == 0, "Goals without NAs", as.character(Variable)))
ggplot(data = missing_data_summary, aes(x = reorder(VariableGroup, Missing_Percentage), y = Missing_Percentage, fill = Missing_Percentage)) +
geom_bar(stat = "identity") +
geom_text(aes(label = ifelse(Missing_Percentage > 1, sprintf("%.1f%%", Missing_Percentage), ""),
y = Missing_Percentage),
position = position_stack(vjust = 1),  # Adjust vertical position
color = "white",  # Text color
size = 3,          # Text size
hjust = 1.05) +
labs(title = "Percentage of Missing Values by Variable",
x = "Variable",
y = "Missing Percentage") +
theme_minimal() +
theme(axis.text.y = element_text(hjust = 1)) +
coord_flip()
see_missing3_1 <- data_question3_1 %>%
group_by(code) %>%
summarise(across(-c(goal1, goal10),  # Exclude columns "goal1" and "goal10"
~ sum(is.na(.))) %>%
mutate(num_missing = rowSums(across(everything()))) %>%
filter(num_missing > 0))
for_kable <- head(see_missing3_1, 10)
kable(for_kable)
data_question3_1[is.na(data_question3_1)] <- 0
see_missing3_2 <- data_question3_2 %>%
group_by(code) %>%
summarise(across(-c(goal1, goal10),  # Exclude columns "goal1" and "goal10"
~ sum(is.na(.))) %>%
mutate(num_missing = rowSums(across(everything()))) %>%
filter(num_missing > 0))
see_missing3_3 <- data_question3_3 %>%
group_by(code) %>%
summarise(across(-c(goal1, goal10),  # Exclude columns "goal1" and "goal10"
~ sum(is.na(.))) %>%
mutate(num_missing = rowSums(across(everything()))) %>%
filter(num_missing > 0))
data_question3_3 <- data_question3_3 %>% filter(!code %in% c("MNE","SRB"))
##### EXPORT as CSV #####
write.csv(data_question1, file = here("scripts","data","data_question1.csv"))
write.csv(data_question24, file = here("scripts","data","data_question24.csv"))
write.csv(data_question3_1, file = here("scripts","data","data_question3_1.csv"))
write.csv(data_question3_2, file = here("scripts","data","data_question3_2.csv"))
write.csv(data_question3_3, file = here("scripts","data","data_question3_3.csv"))
nrow(D5_0_Human_freedom_index)
datatable(D4_0_Internet_usage,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = "_all",
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2);", // Ici, .toFixed(2) arrondit à 2 décimales
datatable(D4_0_Internet_usage,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = "_all",
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2);",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D4_0_Internet_usage,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = <2>,
datatable(D4_0_Internet_usage,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = 2,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2);",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D4_0_Internet_usage,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = 2,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return (parseFloat(data) * 100).toFixed(2) + '%';",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D5_0_Human_freedom_index,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = c(3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18),
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2);",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D5_0_Human_freedom_index,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = c(3,4,5,6,7,8,9,10,11,12,13,14,15,16,17),
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2);",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D5_0_Human_freedom_index,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = c(3:17),
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2);",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D3_3_Miliraty_Expenditure_Percent_Gov_Exp,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = 3,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2) + '%';",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D3_3_Miliraty_Expenditure_Percent_Gov_Exp,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = 2,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2) + '%';",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D3_2_Military_Expenditure_Percent_GDP,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = 3,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2) + '%';",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D3_2_Military_Expenditure_Percent_GDP, options = list(pageLength = 10, class = "hover", searchHighlight = TRUE), rownames = FALSE)
datatable(D3_2_Military_Expenditure_Percent_GDP,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = 3,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2) + '%';",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D3_2_Military_Expenditure_Percent_GDP,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = 2,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2) + '%';",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D3_1_GDP_per_capita,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = 3,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2) + '%';",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D3_1_GDP_per_capita, options = list(pageLength = 10, class = "hover", searchHighlight = TRUE), rownames = FALSE)
datatable(D3_1_GDP_per_capita,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = ,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2) + '%';",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D3_1_GDP_per_capita, options = list(pageLength = 10, class = "hover", searchHighlight = TRUE), rownames = FALSE)
mean(is.na(MiliratyExpenditurePercentGovExp$MiliratyExpenditurePercentGovExp))
mean(is.na(MilitaryExpenditurePercentGDP$MilitaryExpenditurePercentGDP))
mean(is.na(GDPpercapita$GDPpercapita))
D3_1_GDP_per_capita <- GDPpercapita
D3_2_Military_Expenditure_Percent_GDP <- MilitaryExpenditurePercentGDP
D3_3_Miliraty_Expenditure_Percent_Gov_Exp <- MiliratyExpenditurePercentGovExp
View(D3_1_GDP_per_capita)
datatable(D3_1_GDP_per_capita, options = list(pageLength = 10, class = "hover", searchHighlight = TRUE), rownames = FALSE)
datatable(D3_1_GDP_per_capita, options = list(pageLength = 10, class = "hover", searchHighlight = TRUE), rownames = FALSE)
datatable(D3_2_Military_Expenditure_Percent_GDP,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = 3,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2) + '%';",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D3_1_GDP_per_capita, options = list(pageLength = 10, class = "hover", searchHighlight = TRUE), rownames = FALSE)
datatable(D3_1_GDP_per_capita,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = 3,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2) + '%';",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
View(D3_2_Military_Expenditure_Percent_GDP)
datatable(D3_2_Military_Expenditure_Percent_GDP,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = 3,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2) + '%';",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D3_3_Miliraty_Expenditure_Percent_Gov_Exp,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = 3,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return parseFloat(data).toFixed(2) + '%';",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
datatable(D4_0_Internet_usage,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = 3,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return (parseFloat(data) * 100).toFixed(2) + '%';",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
View(D4_0_Internet_usage)
datatable(D4_0_Internet_usage,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = 2,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return (parseFloat(data) * 100).toFixed(2) + '%';",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
source("~/Documents/GitHub/DS-project/scripts/Clean/clean_4_InternetUsage.R", echo=TRUE)
View(D4_0_Internet_usage)
View(D4_0_Internet_usage)
datatable(D2_1_Unemployment_rate, options = list(pageLength = 10, class = "hover", searchHighlight = TRUE), rownames = FALSE)
datatable(D2_1_Unemployment_rate,
options = list(
pageLength = 10,
class = "hover",
searchHighlight = TRUE,
columnDefs = list(
list(targets = 3,
render = JS(
"function(data, type, row, meta){",
"  if(type === 'display'){",
"    return (parseFloat(data) * 100).toFixed(2) + '%';",
"  }",
"  return data;",
"}"
)
)
)
),
rownames = FALSE)
View(D3_1_GDP_per_capita)
View(COVID)
COVID <- COVID %>%
filter(year <= 2022) %>%
mutate(code = gsub("OWID_", "", code),
code = countrycode(sourcevar = code, origin = "iso3c", destination = "iso3c"))
View(COVID)
