reg2.2.2 <- plm::plm(diff_goal2 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.3 <- plm::plm(diff_goal3 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.4 <- plm::plm(diff_goal4 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.5 <- plm::plm(diff_goal5 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.6 <- plm::plm(diff_goal6 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.7 <- plm::plm(diff_goal7 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.8 <- plm::plm(diff_goal8 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.9 <- plm::plm(diff_goal9 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.10 <- plm::plm(diff_goal10 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.11 <- plm::plm(diff_goal11 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.12 <- plm::plm(diff_goal12 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.13 <- plm::plm(diff_goal13 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.15 <- plm::plm(diff_goal15 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.16 <- plm::plm(diff_goal16 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.17 <- plm::plm(diff_goal17 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
# Create a list of your regression models
models_list2 <- list("Overall score"=reg2.2, "Goal 1"=reg2.2.1, "Goal 2"=reg2.2.2, "Goal 3"= reg2.2.3, "Goal 4"=reg2.2.4, "Goal 5"=reg2.2.5, "Goal 6"= reg2.2.6, "Goal 7"=reg2.2.7, "Goal 8"=reg2.2.8, "Goal 9"=reg2.2.9, "Goal 10"=reg2.2.10, "Goal 11" = reg2.2.11,"Goal 12"=reg2.2.12, "Goal 13"=reg2.2.13, "Goal 15" =reg2.2.15, "Goal 16"=reg2.2.16, "Goal 17"=reg2.2.17)
huxreg(
lapply(models_list2, function(model) {
coefficients <- broom::tidy(model, conf.int = TRUE)
significant_after2015 <- coefficients[coefficients$term == "after2015" & coefficients$p.value < 0.05, ]
return(significant_after2015)
})
)
huxreg(models_list2[1:9])
huxreg(models_list2[10:17])
# Create a panel data object
panel_data <- plm::pdata.frame(binary2015, index = c("country", "year"))
# Run the difference-in-differences model to take into account the general evolution over the years
reg2.2 <- plm::plm(diff_overallscore ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.1 <- plm::plm(diff_goal1 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.2 <- plm::plm(diff_goal2 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.3 <- plm::plm(diff_goal3 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.4 <- plm::plm(diff_goal4 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.5 <- plm::plm(diff_goal5 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.6 <- plm::plm(diff_goal6 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.7 <- plm::plm(diff_goal7 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.8 <- plm::plm(diff_goal8 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.9 <- plm::plm(diff_goal9 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.10 <- plm::plm(diff_goal10 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.11 <- plm::plm(diff_goal11 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.12 <- plm::plm(diff_goal12 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.13 <- plm::plm(diff_goal13 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.15 <- plm::plm(diff_goal15 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.16 <- plm::plm(diff_goal16 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.17 <- plm::plm(diff_goal17 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
# Create a list of your regression models
models_list2 <- list("Overall score"=reg2.2, "Goal 1"=reg2.2.1, "Goal 2"=reg2.2.2, "Goal 3"= reg2.2.3, "Goal 4"=reg2.2.4, "Goal 5"=reg2.2.5, "Goal 6"= reg2.2.6, "Goal 7"=reg2.2.7, "Goal 8"=reg2.2.8, "Goal 9"=reg2.2.9, "Goal 10"=reg2.2.10, "Goal 11" = reg2.2.11,"Goal 12"=reg2.2.12, "Goal 13"=reg2.2.13, "Goal 15" =reg2.2.15, "Goal 16"=reg2.2.16, "Goal 17"=reg2.2.17)
huxreg(
lapply(models_list2, function(model) {
coefficients <- broom::tidy(model, conf.int = TRUE)
significant_after2015 <- coefficients[coefficients$term == "after2015" & coefficients$p.value < 0.05, ]
if (nrow(significant_after2015) > 0) {
return(significant_after2015)
} else {
return(NULL)  # Exclude non-significant models
}
})
)
huxreg(
lapply(models_list2, function(model) {
coefficients <- broom::tidy(model, conf.int = TRUE)
significant_after2015 <- coefficients[coefficients$term == "after2015" & coefficients$p.value < 0.05, ]
if ("after2015" %in% coefficients$term) {
return(significant_after2015)
} else {
return(NULL)  # Exclude non-significant models
}
})
)
huxreg(
lapply(models_list2, function(model) {
coefficients <- broom::tidy(model, conf.int = TRUE)
significant_after2015 <- coefficients[coefficients$p.value < 0.05, ]
if (nrow(significant_after2015) > 0) {
return(significant_after2015)
} else {
return(NULL)  # Exclude non-significant models
}
})
)
huxreg(
lapply(models_list2, function(model) {
coefficients <- broom::tidy(model, conf.int = TRUE)
significant_after2015 <- coefficients[coefficients$term == "after2015" & coefficients$p.value < 0.05, ]
if (nrow(significant_after2015) > 0) {
return(coefficients)
} else {
return(coefficients[0, ])  # Return a data frame with 0 rows to exclude the entire column
}
})
)
huxreg(
lapply(models_list2, function(model) {
coefficients <- broom::tidy(model, conf.int = TRUE)
significant_after2015 <- coefficients[coefficients$term == "after2015" & coefficients$p.value < 0.05, ]
return(significant_after2015)
})
)
significant_models <- lapply(models_list2, function(model) {
coefficients <- broom::tidy(model, conf.int = TRUE)
significant_after2015 <- coefficients[coefficients$term == "after2015" & coefficients$p.value < 0.05, ]
if (nrow(significant_after2015) > 0) {
return(model)
} else {
return(NULL)
}
})
significant_models <- lapply(models_list2, function(model) {
coefficients <- broom::tidy(model, conf.int = TRUE)
significant_after2015 <- coefficients[coefficients$term == "after2015" & coefficients$p.value < 0.05, ]
if (nrow(significant_after2015) > 0) {
return(model)
} else {
return(NULL)
}
})
# Create a panel data object
panel_data <- plm::pdata.frame(binary2015, index = c("country", "year"))
# Run the difference-in-differences model to take into account the general evolution over the years
reg2.2 <- plm::plm(diff_overallscore ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.1 <- plm::plm(diff_goal1 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.2 <- plm::plm(diff_goal2 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.3 <- plm::plm(diff_goal3 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.4 <- plm::plm(diff_goal4 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.5 <- plm::plm(diff_goal5 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.6 <- plm::plm(diff_goal6 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.7 <- plm::plm(diff_goal7 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.8 <- plm::plm(diff_goal8 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.9 <- plm::plm(diff_goal9 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.10 <- plm::plm(diff_goal10 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.11 <- plm::plm(diff_goal11 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.12 <- plm::plm(diff_goal12 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.13 <- plm::plm(diff_goal13 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.15 <- plm::plm(diff_goal15 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.16 <- plm::plm(diff_goal16 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
reg2.2.17 <- plm::plm(diff_goal17 ~ after2015 + year + after2015:year,
data = panel_data,
model = "within")
# Create a list of your regression models
models_list2 <- list("Overall score"=reg2.2, "Goal 1"=reg2.2.1, "Goal 2"=reg2.2.2, "Goal 3"= reg2.2.3, "Goal 4"=reg2.2.4, "Goal 5"=reg2.2.5, "Goal 6"= reg2.2.6, "Goal 7"=reg2.2.7, "Goal 8"=reg2.2.8, "Goal 9"=reg2.2.9, "Goal 10"=reg2.2.10, "Goal 11" = reg2.2.11,"Goal 12"=reg2.2.12, "Goal 13"=reg2.2.13, "Goal 15" =reg2.2.15, "Goal 16"=reg2.2.16, "Goal 17"=reg2.2.17)
significant_models <- lapply(models_list2, function(model) {
coefficients <- broom::tidy(model, conf.int = TRUE)
significant_after2015 <- coefficients[coefficients$term == "after2015" & coefficients$p.value < 0.05, ]
if (nrow(significant_after2015) > 0) {
return(model)
} else {
return(NULL)
}
})
huxreg(models_list2[1:9])
huxreg(models_list2[10:17])
significant_models <- lapply(models_list2, function(model) {
coefficients <- broom::tidy(model, conf.int = TRUE)
significant_after2015 <- coefficients[coefficients$term == "after2015" & coefficients$p.value < 0.05, ]
if (nrow(significant_after2015) != 0) {
return(model)
} else {
return(NULL)
}
})
huxreg(
lapply(models_list2, function(model) {
coefficients <- broom::tidy(model, conf.int = TRUE)
significant_after2015 <- coefficients[coefficients$term == "after2015" & coefficients$p.value < 0.05, ]
return(significant_after2015)
})
)
### We asked ourselves if the fact that we do not see any correlations is because the consequences of this disasters arrive later on, so we could remake the same correlations with 1 year of gap.
##Correlations disasters###
# Subset data for South and East Asia from Q3.1 dataset
south_east_asia_data <- Q3.1[Q3.1$region %in% c("South Asia", "East Asia"), ]
Q3.1 <- read.csv(here("scripts", "data", "data_question3_1.csv"))
#############################################
## The following loads the needed packages ##
#############################################
# load the required packages and install them if they are not.
packages <- c(
"here", # for the project's organization
"tidyverse", # for wrangling
"ggrepel", "gghighlight", "patchwork", "maps", "scales", # for plotting
"stringr",
"tidyr",
"lubridate",
"gridExtra",
"readr",
"readxl",
"ggplot2",
"countrycode",
"stringi",
"forecast",
"tibble",
"reshape2",
"corrplot",
"stargazer",
"tinytex",
"cowplot",
"sf",
"dplyr",
"rnaturalearth",
"knitr",
"kableExtra",
"DT",
"FactoMineR",
"factoextra",
"dplyr",
"visdat",
"huxtable",
"plm",
"plotly",
"stargazer"
)
for (pkg in packages) {
if (!pkg %in% installed.packages()) {
install.packages(pkg)}}
for (pkg in packages) {
library(pkg, character.only = TRUE)}
######################################################
## The following sets a few option for nice reports ##
######################################################
# general options
options(
digits = 3,
str = strOptions(strict.width = "cut"),
width = 69,
tibble.width = 69,
cli.unicode = FALSE
)
# ggplot options
theme_set(theme_light())
# knitr options
knitr::opts_chunk$set(
comment = "#>",
collapse = TRUE,
# cache = TRUE,
fig.retina = 0.8, # figures are either vectors or 300 dpi diagrams
dpi = 300,
# out.width = "70%",
out.width = "100%",
fig.align = "center",
fig.width = 6,
# fig.asp = 0.618,
fig.show = "hold",
message = FALSE,
echo = FALSE
)
# cleaning of the environment
rm(packages, pkg)
###### EDA general #####
data <- read.csv(here("scripts", "data", "all_Merge.csv"))
### Boxplots to have an idea of the distribution and outliers ###
# different goals
par(mfrow=c(4,5))
for (i in 8:24) {
boxplot(data[, i], main = names(data)[i], horizontal = TRUE, ylim = c(0, 100))
}
Q3.1 <- read.csv(here("scripts", "data", "data_question3_1.csv"))
Q3.2 <- read.csv(here("scripts", "data", "data_question3_2.csv"))
Q3.3 <- read.csv(here("scripts", "data", "data_question3_3.csv"))
### We asked ourselves if the fact that we do not see any correlations is because the consequences of this disasters arrive later on, so we could remake the same correlations with 1 year of gap.
##Correlations disasters###
# Subset data for South and East Asia from Q3.1 dataset
south_east_asia_data <- Q3.1[Q3.1$region %in% c("South Asia", "East Asia"), ]
# Select relevant columns for correlation analysis
relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8", "goal9", "goal10", "goal11", "goal12", "goal13", "goal15", "goal16", "total_affected", "no_homeless")
# Subset the data
subset_data <- south_east_asia_data[, relevant_columns]
# Create lagged variables with a one-year gap for disaster-related columns
lagged_subset_data <- subset_data %>%
mutate(
lagged_total_affected = lag(total_affected, default = NA),
lagged_no_homeless = lag(no_homeless, default = NA)
)
# Compute correlation matrix for lagged disaster-related variables with the rest of the variables
correlation_matrix_lagged <- cor(lagged_subset_data[, c("lagged_total_affected", "lagged_no_homeless")], subset_data)
# Melt the correlation matrix for ggplot2
cor_melted_lagged <- reshape2::melt(correlation_matrix_lagged)
names(cor_melted) <- c("Variable2", "Variable1", "Correlation")
### We asked ourselves if the fact that we do not see any correlations is because the consequences of this disasters arrive later on, so we could remake the same correlations with 1 year of gap.
##Correlations disasters###
# Subset data for South and East Asia from Q3.1 dataset
south_east_asia_data <- Q3.1[Q3.1$region %in% c("South Asia", "East Asia"), ]
# Select relevant columns for correlation analysis
relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8", "goal9", "goal10", "goal11", "goal12", "goal13", "goal15", "goal16", "total_affected", "no_homeless")
# Subset the data
subset_data <- south_east_asia_data[, relevant_columns]
# Create lagged variables with a one-year gap for disaster-related columns
lagged_subset_data <- subset_data %>%
mutate(
lagged_total_affected = lag(total_affected, default = NA),
lagged_no_homeless = lag(no_homeless, default = NA)
)
# Compute correlation matrix for lagged disaster-related variables with the rest of the variables
correlation_matrix_lagged <- cor(lagged_subset_data[, c("lagged_total_affected", "lagged_no_homeless")], subset_data)
# Melt the correlation matrix for ggplot2
cor_melted_lagged <- reshape2::melt(correlation_matrix_lagged)
names(cor_melted_lagged) <- c("Variable2", "Variable1", "Correlation")
# Create the heatmap
library(ggplot2)
ggplot(data = cor_melted, aes(Variable1, Variable2, fill = Correlation)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "Lab",
name = "Correlation") +
theme_minimal() +
theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
axis.text.y = element_text(vjust = 1, size = 8, hjust = 2),
plot.title = element_text(margin = margin(b = 20), hjust = 0.5,
vjust = 2.5, lineheight = 1.5)
) +
coord_fixed() +
labs(x = '', y = '',
title = 'Correlation between the climate disasters and the SDG goals in South and East Asia')
# Subset data for South and East Asia from Q3.1 dataset
south_east_asia_data <- Q3.1[Q3.1$region %in% c("South Asia", "East Asia"), ]
# Select relevant columns for correlation analysis
relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8", "goal9", "goal10", "goal11", "goal12", "goal13", "goal15", "goal16", "total_affected", "no_homeless")
# Subset the data
subset_data <- south_east_asia_data[, relevant_columns]
# Create lagged variables with a one-year gap for disaster-related columns
lagged_subset_data <- subset_data %>%
mutate(
lagged_total_affected = lag(total_affected, default = NA),
lagged_no_homeless = lag(no_homeless, default = NA)
)
# Compute correlation matrix for lagged disaster-related variables with the rest of the variables
correlation_matrix_lagged <- cor(lagged_subset_data[, c("lagged_total_affected", "lagged_no_homeless")], subset_data)
# Melt the correlation matrix for ggplot2
cor_melted_lagged <- reshape2::melt(correlation_matrix_lagged)
names(cor_melted_lagged) <- c("Variable2", "Variable1", "Correlation")
# Create the heatmap
library(ggplot2)
ggplot(data = cor_melted_lagged, aes(Variable1, Variable2, fill = Correlation)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "Lab",
name = "Correlation") +
theme_minimal() +
theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
axis.text.y = element_text(vjust = 1, size = 8, hjust = 2),
plot.title = element_text(margin = margin(b = 20), hjust = 0.5,
vjust = 2.5, lineheight = 1.5)
) +
coord_fixed() +
labs(x = '', y = '',
title = 'Correlation between the climate disasters and the SDG goals in South and East Asia')
### We asked ourselves if the fact that we do not see any correlations is because the consequences of this disasters arrive later on, so we could remake the same correlations with 1 year of gap.
##Correlations disasters###
# Subset data for South and East Asia from Q3.1 dataset
south_east_asia_data <- Q3.1[Q3.1$region %in% c("South Asia", "East Asia"), ]
# Select relevant columns for correlation analysis
relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8", "goal9", "goal10", "goal11", "goal12", "goal13", "goal15", "goal16", "total_affected", "no_homeless")
# Subset the data
subset_data <- south_east_asia_data[, relevant_columns]
# Create lagged variables with a one-year gap for disaster-related columns
lagged_subset_data <- subset_data %>%
mutate(
lagged_total_affected = lag(total_affected, default = NA),
lagged_no_homeless = lag(no_homeless, default = NA)
)
# Compute correlation matrix for lagged disaster-related variables with the rest of the variables
correlation_matrix_lagged <- cor(lagged_subset_data[, c("lagged_total_affected", "lagged_no_homeless")], subset_data)
# Melt the correlation matrix for ggplot2
cor_melted_lagged <- reshape2::melt(correlation_matrix_lagged)
names(cor_melted_lagged) <- c("Variable2", "Variable1", "Correlation")
# Create the heatmap
library(ggplot2)
ggplot(data = cor_melted_lagged, aes(Variable1, Variable2, fill = Correlation)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "Lab",
name = "Correlation") +
theme_minimal() +
theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
axis.text.y = element_text(vjust = 1, size = 8, hjust = 2),
plot.title = element_text(margin = margin(b = 20), hjust = 0.5,
vjust = 4, lineheight = 1.5)
) +
coord_fixed() +
labs(x = '', y = '',
title = 'Correlation between the climate disasters and the SDG goals in South and East Asia')
### We asked ourselves if the fact that we do not see any correlations is because the consequences of this disasters arrive later on, so we could remake the same correlations with 1 year of gap.
##Correlations disasters###
# Subset data for South and East Asia from Q3.1 dataset
south_east_asia_data <- Q3.1[Q3.1$region %in% c("South Asia", "East Asia"), ]
# Select relevant columns for correlation analysis
relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8", "goal9", "goal10", "goal11", "goal12", "goal13", "goal15", "goal16", "total_affected", "no_homeless")
# Subset the data
subset_data <- south_east_asia_data[, relevant_columns]
# Create lagged variables with a one-year gap for disaster-related columns
lagged_subset_data <- subset_data %>%
mutate(
lagged_total_affected = lag(total_affected, default = NA),
lagged_no_homeless = lag(no_homeless, default = NA)
)
# Compute correlation matrix for lagged disaster-related variables with the rest of the variables
correlation_matrix_lagged <- cor(lagged_subset_data[, c("lagged_total_affected", "lagged_no_homeless")], subset_data)
# Melt the correlation matrix for ggplot2
cor_melted_lagged <- reshape2::melt(correlation_matrix_lagged)
names(cor_melted_lagged) <- c("Variable2", "Variable1", "Correlation")
# Create the heatmap
library(ggplot2)
ggplot(data = cor_melted_lagged, aes(Variable1, Variable2, fill = Correlation)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "Lab",
name = "Correlation") +
theme_minimal() +
theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
axis.text.y = element_text(vjust = 1, size = 8, hjust = 2),
plot.title = element_text(margin = margin(b = 20), hjust = 0.5,
vjust = 6, lineheight = 1.5)
) +
coord_fixed() +
labs(x = '', y = '',
title = 'Correlation between the climate disasters and the SDG goals in South and East Asia')
