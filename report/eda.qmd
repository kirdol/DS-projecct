# Exploratory data analysis

```{r setup, echo = FALSE, message = FALSE, warning=FALSE, cache = TRUE}
source(here::here("scripts/Clean/setup.R"))
source(here::here("scripts/EDA/EDA_4_SDG.R"))
```

## General exploration

We display the distribution of the different SDG achievement scores, using boxplots to have an overview of the median, the range with most of the observations and the outliers.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.height="100%", out.width="100%"}
data_question1 <- read.csv(here("scripts","data","data_question1.csv"))
data_question24 <- read.csv(here("scripts", "data", "data_question24.csv"))
data_question2 <- read.csv(here("scripts", "data", "data_question24.csv"))
data_question3_1 <- read.csv(here("scripts", "data", "data_question3_1.csv"))
data_question3_2 <- read.csv(here("scripts", "data", "data_question3_2.csv"))
data_question3_3 <- read.csv(here("scripts", "data", "data_question3_3.csv"))
Q3.1 <- read.csv(here("scripts", "data", "data_question3_1.csv"))
Q3.2 <- read.csv(here("scripts", "data", "data_question3_2.csv"))
Q3.3 <- read.csv(here("scripts", "data", "data_question3_3.csv"))
data <- read.csv(here("scripts", "data", "all_Merge.csv"))

Correlation_overall <- data_question1 %>% 
      select(population:ef_regulation)

#### boxplots ####

#for goals
#dev.off()
# boxplot(Correlation_overall[2:18], 
#         las = 2,            # Makes the axis labels perpendicular to the axis
#         par(mar = c(5, 4, 4, 2) + 0.1),  # Adjusts the margins to fit all labels
#         cex.axis = 0.7,      # Reduces the size of the axis labels
#         cex.lab = 1,       # Reduces the size of the x and y labels
#         notch = TRUE,       # Specifies whether to add notches or not
#         main = "Merged goals boxplot", # Title of the boxplot
#         xlab = "Goals",  # X-axis label
#         ylab = "Score")     # Y-axis label

#boxplot per continent

data_Q1_Africa <- data_question1 %>%
  filter(data_question1$continent == 'Africa')
data_Q1_Europe <- data_question1 %>%
  filter(data_question1$continent == 'Europe')
data_Q1_Asia <- data_question1 %>%
  filter(data_question1$continent == 'Asia')
data_Q1_Americas <- data_question1 %>%
  filter(data_question1$continent == 'Americas')
data_Q1_Oceania <- data_question1 %>%
  filter(data_question1$continent == 'Oceania')

#Africa
data_Q1_Africa_long <- melt(data_Q1_Africa[,8:24])
medians_AF <- data_Q1_Africa_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))
medians_AF$color <- ifelse(medians_AF$median_value > 75, "lightblue", 
                        ifelse(medians_AF$median_value < 25, "red", 'orange'))
data_Q1_Africa_long <- data_Q1_Africa_long %>%
  left_join(medians_AF, by = "variable")

bandwidth_nrd_AF <- bw.nrd(data_Q1_Africa_long$value)
AF <- ggplot(data_Q1_Africa_long, aes(x = variable, y = value, fill = color)) + 
  geom_violin(trim = FALSE, bw = bandwidth_nrd_AF) +  
  scale_fill_identity() +
  labs(title = "Africa SDG goals boxplot", x = "Goals", y = "Score") +
  geom_boxplot(width = 0.1, outlier.size = 1, fill = 'white') +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))

#Europe
data_Q1_Europe_long <- melt(data_Q1_Europe[,8:24])

medians_EU <- data_Q1_Europe_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

medians_EU$color <- ifelse(medians_EU$median_value > 75, "lightblue", 
                        ifelse(medians_EU$median_value < 25, "red", 'orange'))

data_Q1_Europe_long <- data_Q1_Europe_long %>%
  left_join(medians_EU, by = "variable")

bandwidth_nrd_EU <- bw.nrd(data_Q1_Europe_long$value)
EU <- ggplot(data_Q1_Europe_long, aes(x = variable, y = value, fill = color)) + 
  geom_violin(trim = FALSE, bw = bandwidth_nrd_EU) +
  scale_fill_identity() +
  labs(title = "European SDG goals boxplot", x = "Goals", y = "Score") +
  geom_boxplot(width = 0.1, outlier.size = 1, fill = 'white') +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))

#Asia
data_Q1_Asia_long <- melt(data_Q1_Asia[,8:24])

medians_AS <- data_Q1_Asia_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

medians_AS$color <- ifelse(medians_AS$median_value > 75, "lightblue", 
                        ifelse(medians_AS$median_value < 25, "red", 'orange'))

data_Q1_Asia_long <- data_Q1_Asia_long %>%
  left_join(medians_AS, by = "variable")

bandwidth_nrd_AS <- bw.nrd(data_Q1_Asia_long$value)
AS <- ggplot(data_Q1_Asia_long, aes(x = variable, y = value, fill = color)) + 
  geom_violin(trim = FALSE, bw = bandwidth_nrd_AS) +
  scale_fill_identity() +
  labs(title = "Asian SDG goals boxplot", x = "Goals", y = "Score") +
  geom_boxplot(width = 0.1, outlier.size = 1, fill = 'white') +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))

#Americas
data_Q1_Americas_long <- melt(data_Q1_Americas[,8:24])

medians_AM <- data_Q1_Americas_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

medians_AM$color <- ifelse(medians_AM$median_value > 75, "lightblue", 
                        ifelse(medians_AM$median_value < 25, "red", 'orange'))

data_Q1_Americas_long <- data_Q1_Americas_long %>%
  left_join(medians_AM, by = "variable")

bandwidth_nrd_AM <- bw.nrd(data_Q1_Americas_long$value)
AM <- ggplot(data_Q1_Americas_long, aes(x = variable, y = value, fill = color)) + 
  geom_violin(trim = FALSE, bw = bandwidth_nrd_AM) +
  scale_fill_identity() +
  labs(title = "American SDG goals boxplot", x = "Goals", y = "Score") +
  geom_boxplot(width = 0.1, outlier.size = 1, fill = 'white') +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))

#Oceania
data_Q1_Oceania_long <- melt(data_Q1_Oceania[,8:24])

medians_OC <- data_Q1_Oceania_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

medians_OC$color <- ifelse(medians_OC$median_value > 75, "lightblue", 
                        ifelse(medians_OC$median_value < 25, "red", 'orange'))

data_Q1_Oceania_long <- data_Q1_Oceania_long %>%
  left_join(medians_OC, by = "variable")

bandwidth_nrd_OC <- bw.nrd(data_Q1_Oceania_long$value)
OC <- ggplot(data_Q1_Oceania_long, aes(x = variable, y = value, fill = color)) + 
  geom_violin(trim = FALSE, bw = bandwidth_nrd_OC) +
  scale_fill_identity() +
  labs(title = "Oceanian SDG goals boxplot", x = "Goals", y = "Score") +
  geom_boxplot(width = 0.1, outlier.size = 1, fill = 'white') +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))

grid.arrange(AF,EU,AS,AM,OC, ncol = 2, nrow = 3)

# Correlation_goals <- melt(Correlation_overall[,2:18])
# ggplot(Correlation_goals, aes(x= variable, y= value)) + 
#   geom_violin(trim=FALSE, fill="orange") +
#   labs(title="Merged goals violin boxplot",x="Goals", y = "Distribution") +
#   geom_boxplot(width=0.1, outlier.size = 1) +
#   scale_y_continuous(labels = scales::label_number()) + #limits = c(0, 100)
#   theme_classic() +
#   theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

#### WHY GOING BELOW 0 TO > 100 ?? SCORES ONLY FROM 0 TO 100

```

We see different schemes among the different goals. Indeed some are quite homogeneous with a small spread of values (e.g. overall score, goals 2 and 8) while others have a large spread of values (e.g. goals 1 and 10). Goals 1, 3, 4, 7, 9, 10 and 13 have values across all possible percentages. Goals 2, 5, 8, 13 and 17 have extreme values situated outside the 95% confidence interval. It is interesting to see that goal 8 (decent work and economic growth) is the one with smaller spread of values, whereas goal 1 (no poverty) have the higher distance between the first and the third quartile. Goal 2 (no hunger) has a tight spread of values, but with the greater amount of outliers in the smaller values, meaning hunger is similar across most countries, but when it differs it is in very bad manner.

We now display boxplpots for the different variables of the human freedom index, and then also for our other independent variables.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.height="100%", out.width="100%"}
#for Human Freedom Index scores 

#Africa 
data_Q1_Africa_HFI_long <- melt(data_Q1_Africa[,29:40])

medians_HFI_AF <- data_Q1_Africa_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

medians_HFI_AF$color <- ifelse(medians_HFI_AF$median_value > 7.5, "lightblue", 
                        ifelse(medians_HFI_AF$median_value < 2.5, "red", 'orange'))

data_Q1_Africa_HFI_long <- data_Q1_Africa_HFI_long %>%
  left_join(medians_HFI_AF, by = "variable")

bandwidth_nrd_HFI_AF <- bw.nrd(data_Q1_Africa_HFI_long$value)
HFI_AF <- ggplot(data_Q1_Africa_HFI_long, aes(x = variable, y = value, fill = color)) + 
  geom_violin(trim = FALSE, bw = bandwidth_nrd_HFI_AF) +
  scale_fill_identity() +
  labs(title = "African HFI Scores boxplot", x = "Human Freedom Index goals", y = "Score") +
  geom_boxplot(width = 0.1, outlier.size = 1, fill = 'white') +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
#Europe
data_Q1_Europe_HFI_long <- melt(data_Q1_Europe[,29:40])

medians_HFI_EU <- data_Q1_Europe_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

medians_HFI_EU$color <- ifelse(medians_HFI_EU$median_value > 7.5, "lightblue", 
                        ifelse(medians_HFI_EU$median_value < 2.5, "red", 'orange'))

data_Q1_Europe_HFI_long <- data_Q1_Europe_HFI_long %>%
  left_join(medians_HFI_EU, by = "variable")

bandwidth_nrd_HFI_EU <- bw.nrd(data_Q1_Europe_HFI_long$value)
HFI_EU <- ggplot(data_Q1_Europe_HFI_long, aes(x = variable, y = value, fill = color)) + 
  geom_violin(trim = FALSE, bw = bandwidth_nrd_HFI_EU) +
  scale_fill_identity() +
  labs(title = "Europe HFI Scores boxplot", x = "Human Freedom Index goals", y = "Score") +
  geom_boxplot(width = 0.1, outlier.size = 1, fill = 'white') +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
#Asia
data_Q1_Asia_HFI_long <- melt(data_Q1_Asia[,29:40])

medians_HFI_AS <- data_Q1_Asia_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

medians_HFI_AS$color <- ifelse(medians_HFI_AS$median_value > 7.5, "lightblue", 
                        ifelse(medians_HFI_AS$median_value < 2.5, "red", 'orange'))

data_Q1_Asia_HFI_long <- data_Q1_Asia_HFI_long %>%
  left_join(medians_HFI_AS, by = "variable")

bandwidth_nrd_HFI_AS <- bw.nrd(data_Q1_Asia_HFI_long$value)
HFI_AS <- ggplot(data_Q1_Asia_HFI_long, aes(x = variable, y = value, fill = color)) + 
  geom_violin(trim = FALSE, bw = bandwidth_nrd_HFI_AS) +
  scale_fill_identity() +
  labs(title = "Asian HFI Scores boxplot", x = "Human Freedom Index goals", y = "Score") +
  geom_boxplot(width = 0.1, outlier.size = 1, fill = 'white') +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
#America
data_Q1_America_HFI_long <- melt(data_Q1_Americas[,29:40])

medians_HFI_AM <- data_Q1_America_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

medians_HFI_AM$color <- ifelse(medians_HFI_AM$median_value > 7.5, "lightblue", 
                        ifelse(medians_HFI_AM$median_value < 2.5, "red", 'orange'))

data_Q1_America_HFI_long <- data_Q1_America_HFI_long %>%
  left_join(medians_HFI_AM, by = "variable")

bandwidth_nrd_HFI_AM <- bw.nrd(data_Q1_America_HFI_long$value)
HFI_AM <- ggplot(data_Q1_Asia_HFI_long, aes(x = variable, y = value, fill = color)) + 
  geom_violin(trim = FALSE, bw = bandwidth_nrd_HFI_AM) +
  scale_fill_identity() +
  labs(title = "America HFI Scores boxplot", x = "Human Freedom Index goals", y = "Score") +
  geom_boxplot(width = 0.1, outlier.size = 1, fill = 'white') +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
#Oceania

data_Q1_Oceania_HFI_long <- melt(data_Q1_Oceania[,29:40])

medians_HFI_OC <- data_Q1_Oceania_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

medians_HFI_OC$color <- ifelse(medians_HFI_OC$median_value > 7.5, "lightblue", 
                        ifelse(medians_HFI_OC$median_value < 2.5, "red", 'orange'))

data_Q1_Oceania_HFI_long <- data_Q1_Oceania_HFI_long %>%
  left_join(medians_HFI_OC, by = "variable")

bandwidth_nrd_HFI_OC <- bw.nrd(data_Q1_Oceania_HFI_long$value)
HFI_OC <- ggplot(data_Q1_Oceania_HFI_long, aes(x = variable, y = value, fill = color)) + 
  geom_violin(trim = FALSE, bw = bandwidth_nrd_HFI_OC) +
  scale_fill_identity() +
  labs(title = "Oceanian HFI Scores boxplot", x = "Human Freedom Index goals", y = "Score") +
  geom_boxplot(width = 0.1, outlier.size = 1, fill = 'white') +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))

grid.arrange(HFI_AF,HFI_EU,HFI_AS,HFI_AM,HFI_OC, ncol = 2, nrow = 3)

# boxplot(Correlation_overall[23:34], 
#         las = 2,            # Makes the axis labels perpendicular to the axis
#         par(mar = c(7, 5, 2, 1)),  # Adjusts the margins to fit all labels
#         cex.axis = 0.7,      # Reduces the size of the axis labels
#         cex.lab = 1,       # Reduces the size of the x and y labels
#         notch = TRUE,       # Specifies whether to add notches or not
#         main = "Merged Human Freedom Index scores boxplot", 
#         ylab = "Score")     # Y-axis label


# Correlation_HFI <- melt(Correlation_overall[,23:34])
# ggplot(Correlation_HFI, aes(x= variable, y= value)) + 
#   geom_violin(trim=FALSE, fill="orange")+
#   labs(title="Merged Human Freedom Index scores violin boxplot",x="Variables", y = "Score")+
#   geom_boxplot(width=0.1, outlier.size = 1)+
#   scale_y_continuous(labels = scales::label_number()) + #limits = c(0, 100)
#   theme_classic() +
#   theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

v1 <- ggplot(Correlation_overall, aes(x= factor(1), y= GDPpercapita)) + 
  geom_violin(trim=FALSE, fill="orange")+
  labs(title="Violin plot of GDP per capita",x="GDP per capita", y = "Distribution")+
  geom_boxplot(width=0.1, outlier.size = 1)+
  scale_y_continuous(labels = scales::label_number()) +  # Format y-axis labels
  theme_classic()
v2 <- ggplot(Correlation_overall, aes(x= factor(1), y= unemployment.rate)) + 
  geom_violin(trim=FALSE, fill="orange")+
  labs(title="Violin plot of unemployment rate",x="Unemployment rate", y = "Distribution")+
  geom_boxplot(width=0.1, outlier.size = 1)+
  scale_y_continuous(labels = scales::label_number()) +  # Format y-axis labels
  theme_classic()
v3 <- ggplot(Correlation_overall, aes(x= factor(1), y= MilitaryExpenditurePercentGDP)) + 
  geom_violin(trim=FALSE, fill="orange")+
  labs(title="Violin plot of military expenditure by percentage of GDP",x="Military Expenditure", y = "Distribution")+
  geom_boxplot(width=0.1, outlier.size = 1)+
  scale_y_continuous(labels = scales::label_number()) +  # Format y-axis labels
  theme_classic()
v4 <- ggplot(Correlation_overall, aes(x= factor(1), y= internet_usage)) + 
  geom_violin(trim=FALSE, fill="orange")+
  labs(title="Violin plot of internet_usage",x="internet_usage", y = "Distribution")+
  geom_boxplot(width=0.1, outlier.size = 1)+
  scale_y_continuous(labels = scales::label_number()) +  # Format y-axis labels
  theme_classic()
grid.arrange(v1,v2,v3,v4, ncol = 2, nrow = 2)
```

We now look at the variables in a summary table to have a more precise view of the numbers.

```{r, echo = FALSE, message = FALSE, warning=FALSE, cache = TRUE}
table1 <- summary(data_question24)
kable(table1)
```

## Focus on the influence of the factors over the SDG scores

After importing our our cleaned data, we looked first at the correlations between our numerical variables.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE}
#### Correlations between variables ####

sdg_scores2 <- data_question1[, c('goal1', 'goal2', 'goal3', 'goal4', 'goal5', 'goal6',
                      'goal7', 'goal8', 'goal9', 'goal10', 'goal11', 'goal12',
                      'goal13', 'goal15', 'goal16', 'goal17')]

Correlation_overall <- data_question1 %>% 
      select(population:ef_regulation)

#before computing Pearson -> logarithmic transformation may be required for some variables with high skewness

# Calculating skewness for each variable

Correlation_overall_skew <- Correlation_overall
Correlation_overall_sqrt <- Correlation_overall

skewness_values <- sapply(Correlation_overall_skew, e1071::skewness)

# Identifying highly skewed variables
highly_skewed_vars <- names(skewness_values[abs(skewness_values) > 1])
highly_skewed_vars_sqrt <- names(skewness_values[abs(skewness_values) > 1])
# Applying logarithmic transformation
Correlation_overall_skew[highly_skewed_vars] <- lapply(Correlation_overall_skew[highly_skewed_vars], function(x) log1p(x))
#applying squart root transformation
Correlation_overall_sqrt[highly_skewed_vars_sqrt] <- lapply(Correlation_overall_sqrt[highly_skewed_vars_sqrt], function(x) sqrt(x))

new_skewness_values <- sapply(Correlation_overall_skew[highly_skewed_vars], e1071::skewness)
new_skewness_values_sqrt <- sapply(Correlation_overall_sqrt[highly_skewed_vars_sqrt], e1071::skewness)

#après transformation, il reste toujours beaucoup de variables avec un high skewness values print(new_skewness_values), print(new_skewness_values_sqrt)

cor_matrix_log <- cor(Correlation_overall_skew, use = "everything")
cor_matrix_sqrt <- cor(Correlation_overall_sqrt, use = "everything")
cor_matrix_sper <- cor(Correlation_overall, method = "spearman", use = "everything")

datatable(cor_matrix_log, 
          options = list(
            pageLength = 10, 
            class = "hover", 
            searchHighlight = TRUE,
            columnDefs = list(
              list(targets = "_all",
                   render = JS(
                     "function(data, type, row, meta){",
                     "  if(type === 'display'){",
                     "    return parseFloat(data).toFixed(2)",
                     "  }",
                     "  return data;",
                     "}")))),
          rownames = FALSE)
```

By doing so, we obtain a lot of positive and negative correlations. To help us to better understand and having a overall vision of the situation, we used the following heatmap.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.height="100%", out.width="100%"}
#### Heatmap ####

#with log transformation

cor_melted_log <- melt(cor_matrix_log)

ggplot(data = cor_melted_log, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", 
                       midpoint = 0, limit = c(-1, 1), space = "Lab", 
                       name="Pearson\nCorrelation") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 8, hjust = 1),
        axis.text.y = element_text(size = 8)) +
  coord_fixed() +
  labs(x = '', y = '', title = 'Correlation Matrix Heatmap')

#with square root transformation

cor_melted_sqrt <- melt(cor_matrix_sqrt)

ggplot(data = cor_melted_sqrt, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", 
                       midpoint = 0, limit = c(-1, 1), space = "Lab", 
                       name="Pearson\nCorrelation") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 8, hjust = 1),
        axis.text.y = element_text(size = 8)) +
  coord_fixed() +
  labs(x = '', y = '', title = 'Correlation Matrix Heatmap')

#with Spearman

cor_melted <- melt(cor_matrix_sper)

ggplot(data = cor_melted, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", 
                       midpoint = 0, limit = c(-1, 1), space = "Lab", 
                       name="Spearman\nCorrelation") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 8, hjust = 1),
        axis.text.y = element_text(size = 8)) +
  coord_fixed() +
  labs(x = '', y = '', title = 'Correlation Matrix Heatmap')



#do 3 different heatmaps : goals on goals, goals on other variables except goals, variables on variables (except goals)

```

In the correlation matrix heatmap, we can notice that many goals from 1 to 11 are actually positively correlated together. On another hand, the goals 12 and 13 are have negative relationships with the majority of our variables, except between themself, whereas they are strongely correlated. In addition, we can notice another strongly correlation between personal freedom variables (pf) related to the scores given by the Human Freedom Index on movement, religion, assembly and expression.

In order to have an overview of the relationship between our independent variables and the SDG overall score, we make several graphs containing the Pearson correlation coefficient between the variable, the scatter plots describing the relationship between the variables, as well as the distribution of each variable.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.height="100%", out.width="100%"}
#### Pearson's correlation coeff ####

panel.hist <- function(x, ...){ 
  usr <- par("usr"); on.exit(par(usr)) 
  par(usr = c(usr[1:2], 0, 1.5) ) 
  h <- hist(x, plot = FALSE) 
  breaks <- h$breaks; nB <- length(breaks) 
  y <- h$counts; y <- y/max(y) 
  rect(breaks[-nB], 0, breaks[-1], y, col = "lightgreen", ...)
}
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...){ 
  usr <- par("usr"); on.exit(par(usr)) 
  par(usr = c(0, 1, 0, 1)) 
  r <- (cor(x, y)) 
  txt <- format(c(r, 0.123456789), digits = digits)[1] 
  txt <- paste0(prefix, txt) 
  if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt) 
  text(0.5, 0.5, txt, cex = cex.cor * r)
}

# Independent variables 
#with log transformation
pairs(Correlation_overall_skew[,c("overallscore", "unemployment.rate", "GDPpercapita", "MilitaryExpenditurePercentGDP", "internet_usage")], upper.panel=panel.cor, diag.panel=panel.hist, main="Correlation table and distribution of various variables")
#with square root transformation
pairs(Correlation_overall_sqrt[,c("overallscore", "unemployment.rate", "GDPpercapita", "MilitaryExpenditurePercentGDP", "internet_usage")], upper.panel=panel.cor, diag.panel=panel.hist, main="Correlation table and distribution of various variables")
```

The overall SDG achievement score is highly correlated with the percentage of people using the internet (r=.79) and GDP per capita (r=.60). The unemployement rate as well as the military expenditures in percentage of GDP per capita do not seem to play a role. However, this is only for the overall score.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%", out.height="100%"}
#with log transformation
pairs(Correlation_overall_skew[,c("overallscore", "pf_law", "pf_security", "pf_movement", "pf_religion", "pf_assembly", "pf_expression", "pf_identity")], upper.panel=panel.cor, diag.panel=panel.hist, main="Correlation table and distribution of personal freedom variables")

#with square root transformation
pairs(Correlation_overall_sqrt[,c("overallscore", "pf_law", "pf_security", "pf_movement", "pf_religion", "pf_assembly", "pf_expression", "pf_identity")], upper.panel=panel.cor, diag.panel=panel.hist, main="Correlation table and distribution of personal freedom variables")
```

The overall SDG achievement score is highly correlated with "personal freedom: law" (p=.69) and "personal freedom: identity" (p=.62). The other dimensions of personal freedom do not seem to have important influence. Regarding the distribution of the personal freedom variables, we notice that except for law, all have right-skewed distributions meaning that most of the countries have high scores.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%", out.height="100%"}
#with log transformation
pairs(Correlation_overall_skew[,c("overallscore", "ef_government", "ef_legal", "ef_money", "ef_trade", "ef_regulation")], upper.panel=panel.cor, diag.panel=panel.hist, main="Correlation table and distribution of economic freedom variables")
#with square root transformation
pairs(Correlation_overall_sqrt[,c("overallscore", "ef_government", "ef_legal", "ef_money", "ef_trade", "ef_regulation")], upper.panel=panel.cor, diag.panel=panel.hist, main="Correlation table and distribution of economic freedom variables")
```

The overall SDG achievement score is highly correlated with "economical freedom: legal" (p=.77), "economical trade: legal" (p=.67) and "economical freedom: money" (p=.6), while the other dimensions of economic freedom do not seem to have important influence. Regarding the distribution of the economic freedom variables, we notice more heterogeneous distributions and scores across the various countries than for personal freedom.

## Focus on the influence of events over the SDG scores

In order to have an overview of the relationship between the different events variables and the SDG overall score, we make several graphs containing the Pearson correlation coefficient between the variable, the scatter plots describing the relationship between the variables, as well as the distribution of each variable.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
lower.panel <- function(x, y, ...){
  points(x, y, pch = 20, col = "black", cex = 0.2)
}

evaluateCorrelationStars <- function(correlation) {
  if (abs(correlation) >= 0.7) {
    return("*****")  # Strong correlation: 5 stars
  } else if (abs(correlation) >= 0.5) {
    return("****")   # Moderate correlation: 4 stars
  } else if (abs(correlation) >= 0.3) {
    return("***")    # Fair correlation: 3 stars
  } else if (abs(correlation) >= 0.1) {
    return("**")     # Weak correlation: 2 stars
  } else {
    return("*")      # Very weak correlation: 1 star
  }
}

# panel.cor function with stars alongside correlation coefficients
panel.cor_stars <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
  usr <- par("usr"); on.exit(par(usr)) 
  par(usr = c(0, 1, 0, 1)) 
  r <- cor(x, y)
  stars <- evaluateCorrelationStars(r)
  txt <- paste0(format(c(r, 0.123456789), digits = digits)[1], " ", stars)
  if(missing(cex.cor)) cex.cor <- 0.5/strwidth(txt)
  text(0.5, 0.5, txt, cex = cex.cor)
}

pairs(data_question3_1[, c("overallscore", "total_affected", "total_deaths")], upper.panel = panel.cor_stars,diag.panel = panel.hist,lower.panel = lower.panel, main = "Correlation table and distribution of Disaster variables")

```

The different variables used to materialize the impact of climate disasters do not seem to have important influence on the overall score, but we will further explore for the different SDGs, since we believe that such disasters have a specific influence on some SDGs.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
lower.panel <- function(x, y, ...){
  points(x, y, pch = 20, col = "black", cex = 0.2)
}

evaluateCorrelationStars <- function(correlation) {
  if (abs(correlation) >= 0.7) {
    return("*****")  
  } else if (abs(correlation) >= 0.5) {
    return("****")
  } else if (abs(correlation) >= 0.3) {
    return("***") 
  } else if (abs(correlation) >= 0.1) {
    return("**")
  } else {
    return("*")
  }
}

# panel.cor function with stars alongside correlation coefficients
panel.cor_stars <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
  usr <- par("usr"); on.exit(par(usr)) 
  par(usr = c(0, 1, 0, 1)) 
  r <- cor(x, y)
  stars <- evaluateCorrelationStars(r)
  txt <- paste0(format(c(r, 0.123456789), digits = digits)[1], " ", stars)
  if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
  text(0.5, 0.5, txt, cex = cex.cor)
}

pairs(data_question3_2[,c("overallscore", "cases_per_million", "deaths_per_million", "stringency")], upper.panel = panel.cor_stars, diag.panel=panel.hist, lower.panel = lower.panel,main="Correlation table and distribution of COVID variables")
```

The different variables used to materialize the impact of COVID19 do not seem to have important influence on the overall score, but we will further explore for the different SDGs, since we believe that COVID19 had a specific influence on some SDGs, for instance "good health and well-being" or "decent work and economic growth".

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
lower.panel <- function(x, y, ...){
  points(x, y, pch = 20, col = "black", cex = 0.5)
}
evaluateCorrelationStars <- function(correlation) {
  if (abs(correlation) >= 0.7) {
    return("*****") 
  } else if (abs(correlation) >= 0.5) {
    return("****")
  } else if (abs(correlation) >= 0.3) {
    return("***") 
  } else if (abs(correlation) >= 0.1) {
    return("**")
  } else {
    return("*")
  }
}

# panel.cor function with stars alongside correlation coefficients
panel.cor_stars <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
  usr <- par("usr"); on.exit(par(usr)) 
  par(usr = c(0, 1, 0, 1)) 
  r <- cor(x, y)
  stars <- evaluateCorrelationStars(r)
  txt <- paste0(format(c(r, 0.123456789), digits = digits)[1], " ", stars)
  if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
  text(0.5, 0.5, txt, cex = cex.cor)
}

pairs(data_question3_3[,c("overallscore", "ongoing", "sum_deaths", "pop_affected", "area_affected", "maxintensity")], upper.panel = panel.cor_stars, diag.panel=panel.hist, lower.panel = lower.panel, main="Correlation table and distribution of conflicts variables")

```

The different variables used to materialize the impact of conflicts do not seem to have important influence on the overall score, but we will further explore for the different SDGs, since we believe that conflicts have a specific influence on some SDGs.

To explore our data on events such as disasters, covid-19 and conflicts we have to first see which countries are the most touched by these. To do so, we made time-series analysis on this three events each time depending on different variables.

```{r, echo = TRUE, message = FALSE, warning = FALSE, out.height="100%", out.width="100%"}
# Converted 'year' column to date format
Q3.1$year <- as.Date(as.character(Q3.1$year), format = "%Y")
Q3.2$year <- as.Date(as.character(Q3.2$year), format = "%Y")
Q3.3$year <- as.Date(as.character(Q3.3$year), format = "%Y")
```

These is our time-analysis concerning the COVID-19 cases per million by region between end 2018 and 2022.

```{r, echo = TRUE, message = FALSE, warning = FALSE, out.height="100%", out.width="100%"}
library(ggplot2)
covid_filtered <- Q3.2[Q3.2$year >= as.Date("2018-12-12"), ]

ggplot(data = covid_filtered, aes(x = year, y = cases_per_million, group = region, color = region)) +
  geom_smooth(method = "loess",  se = FALSE, span = 0.8, size = 0.5) + 
  labs(title = "Trend of COVID-19 Cases per Million Over Time",
       x = "Year", y = "Cases per Million") +
  facet_wrap(~ region, ncol = 3) +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
         plot.title = element_text(margin = margin(b = 20), hjust = 0.5, 
                                   vjust = 8, lineheight = 2),
         strip.text = element_blank(),
         panel.spacing = unit(0.5, "lines")
  ) +
  theme(legend.position = "bottom") +
  guides(color = guide_legend(nrow = 3))
```

These is our time-analysis concerning the COVID-19 deaths per million per region between end 2018 and 2022

```{r, echo = TRUE, message = FALSE, warning = FALSE, out.height="100%", out.width="100%"}
ggplot(data = covid_filtered, aes(x = year, y = deaths_per_million, group = region, color = region)) +
  geom_smooth(method = "loess",  se = FALSE, span = 0.8, size = 0.5) + 
  labs(title = "Trend of COVID-19 Deaths per Million Over Time", x = "Year", y = "Deaths per Million") +
  facet_wrap(~ region, nrow = 3) +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
         plot.title = element_text(margin = margin(b = 20), hjust = 0.5, 
                                   vjust = 8, lineheight = 2),
         strip.text = element_blank(),
         panel.spacing = unit(0.5, "lines")
  ) +
  theme(legend.position = "bottom") +
  guides(color = guide_legend(nlin = 3))
```

These is our time-analysis concerning the COVID-19 stringency per region between end 2018 and 2022

```{r, echo = TRUE, message = FALSE, warning = FALSE, out.height="100%", out.width="100%"}
ggplot(data = covid_filtered, aes(x = year, y = stringency, group = region, 
                                  color = region)) +
  geom_smooth(method = "loess",  se = FALSE, span = 0.7, size = 0.5) + 
  labs(title = "Trend of COVID-19 Stringency Over Time", x = "Year", y = "Stringency") +
  facet_wrap(~ region, nrow = 4) +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
         plot.title = element_text(margin = margin(b = 20), hjust = 0.5, 
                                   vjust = 8, lineheight = 2),
         strip.text = element_blank(),
         panel.spacing = unit(0.5, "lines")
  ) +
  theme(legend.position = "right") +
  guides(color = guide_legend(ncol = 1))
```

These is our time-analysis concerning climatic disasters with total affected per region

```{r, echo = TRUE, message = FALSE, warning = FALSE, out.height="100%", out.width="100%"}
Q3.1[is.na(Q3.1)] <- 0
ggplot(data = Q3.1, aes(x = year, y = total_affected, group = region, color = region)) +
  geom_smooth(method = "loess",  se = FALSE, span = 0.7, size = 0.5) + 
  labs(title = "Trend of Total Affected from Climatic Disasters Over Time", x = "Year", y = "Total Affected") +
  facet_wrap(~ region, nrow = 4) +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
         plot.title = element_text(margin = margin(b = 20), hjust = 0.5, 
                                   vjust = 8, lineheight = 2),
         strip.text = element_blank(),
         panel.spacing = unit(0.5, "lines")
  ) +
  theme(legend.position = "right") +
  guides(color = guide_legend(ncol = 1))
```

These is our time-analysis concerning conflicts deaths per region between 2000 and 2016

```{r, echo = TRUE, message = FALSE, warning = FALSE, out.height="100%", out.width="100%"}
conflicts_filtered <- Q3.3[Q3.3$year >= as.Date("2000-01-01") & Q3.3$year <= as.Date("2016-12-31"), ]

ggplot(data = conflicts_filtered, aes(x = year, y = sum_deaths, group = region, color = region)) +
  geom_smooth(method = "loess", se = FALSE, span = 0.3, size = 0.5) +  # Using loess smoothing method
  labs(title = "Trend of Deaths by Conflicts Over Time", x = "Year", y = "Sum Deaths") +
  facet_wrap(~ region, nrow = 4) +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
         plot.title = element_text(margin = margin(b = 20), hjust = 0.5, 
                                   vjust = 8, lineheight = 2),
         strip.text = element_blank(),
         panel.spacing = unit(0.5, "lines")
  ) +
  theme(legend.position = "right") +
  guides(color = guide_legend(ncol = 1))
```

We can see that the regions' the most affected by the conflicts are : Middle east and north Africa, Sub-Saharan Africa, South Asia, then less America & the Caribbean and Eastern Europe

These is our time-analysis concerning conflicts affected population per region between 2000 and 2016

```{r, echo = TRUE, message = FALSE, warning = FALSE, out.height="100%", out.width="100%"}
ggplot(data = conflicts_filtered, aes(x = year, y = pop_affected, group = region, color = region)) +
  geom_smooth(method = "loess", se = FALSE, span = 0.3, size = 0.5) +  # Using loess smoothing method
  labs(title = "Trend of Population Affected by Conflicts Over Time", x = "Year", y = "pop_affected") +
  facet_wrap(~ region, nrow = 4) +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
         plot.title = element_text(margin = margin(b = 20), hjust = 0.5, 
                                   vjust = 8, lineheight = 2),
         strip.text = element_blank(),
         panel.spacing = unit(0.5, "lines")
  ) +
  theme(legend.position = "right") +
  guides(color = guide_legend(ncol = 1))
```

We can see that the regions' the most affected by the conflicts are : Middle east and north Africa, Sub-Saharan Africa, South Asia, America & the Caribbean, Eastern Europe and sometimes Caucasus and Central Asia

Now that we could visualize which regions are the most impacted by these three events we can do correlations analysis per region to see if this events have indeed an impact on the evolution of SDG goals.

Here we want to analyse the correlation between the climate disasters and the SDG goals in South and East Asia.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
Q3.1[is.na(Q3.1)] <- 0

south_east_asia_data <- Q3.1[Q3.1$region %in% c("South Asia", "East Asia"), ]

relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8", "goal9", "goal10", "goal11", "goal12", "goal13", "goal15", "goal16", "total_affected", "no_homeless")

correlation_matrix_disaster_Asia <- cor(south_east_asia_data[, relevant_columns], use = "complete.obs")

kable(correlation_matrix_disaster_Asia)

cor_melted <- as.data.frame(as.table(correlation_matrix_disaster_Asia))
names(cor_melted) <- c("Variable1", "Variable2", "Correlation")

ggplot(data = cor_melted, aes(Variable1, Variable2, fill = Correlation)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white",
                       midpoint = 0, limit = c(-1, 1), space = "Lab",
                       name = "Correlation") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 8, hjust = 1),
        axis.text.y = element_text(size = 8)) +
  coord_fixed() +
  labs(x = '', y = '',
       title = 'Correlation between the climate disasters and the SDG goals in South and East Asia')

```

We conclude that climate disasters do not really have a big impact on SDG goals.

Here we want to analyse the correlation between the Covid-19 and the SDG goals only during Covid time.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
covid_filtered <- Q3.2[Q3.2$year >= as.Date("2019-01-01"), ]

relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8", "goal9", "goal10", "goal11", "goal12", "goal13", "goal15", "goal16", "stringency", "cases_per_million", "deaths_per_million")
# Subset data with relevant columns for correlation analysis
relevant_data <- covid_filtered[, relevant_columns]

correlation_matrix_Covid <- cor(relevant_data, use = "complete.obs")

kable(correlation_matrix_Covid)

cor_melted <- as.data.frame(as.table(correlation_matrix_Covid))
names(cor_melted) <- c("Variable1", "Variable2", "Correlation")

ggplot(data = cor_melted, aes(Variable1, Variable2, fill = Correlation)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white",
                       midpoint = 0, limit = c(-1, 1), space = "Lab",
                       name = "Correlation") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 8, hjust = 1),
        axis.text.y = element_text(size = 8)) +
  coord_fixed() +
  labs(x = '', y = '',
       title = 'Correlation between COVID and the SDG goals')
```

Same conclusion, really weird.

Here we want to analyse the correlation between conflicts deaths and the SDG goals only for the Middle East & North Africa, Sub-Saharan Africa, South Asia, Latin America & the Caribbean and Eastern Europe regions.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}

# Filter data for specific regions
selected_regions <- c("Middle East & North Africa", "Sub-Saharan Africa", "South Asia", "Latin America & the Caribbean", "Eastern Europe")
conflicts_selected <- Q3.3[Q3.3$region %in% selected_regions, ]

# Select relevant columns for the correlation analysis
relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8", "goal9", "goal10", "goal11", "goal12", "goal13", "goal15", "goal16", "sum_deaths")

# Compute correlation matrix for the selected regions
correlation_matrix_Conflicts_Deaths <- cor(conflicts_selected[, relevant_columns], use = "complete.obs")

# View the correlation matrix
kable(correlation_matrix_Conflicts_Deaths)

# Melt the correlation matrix for ggplot2
cor_melted <- as.data.frame(as.table(correlation_matrix_Conflicts_Deaths))
names(cor_melted) <- c("Variable1", "Variable2", "Correlation")

# Create the heatmap
ggplot(data = cor_melted, aes(Variable1, Variable2, fill = Correlation)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white",
                       midpoint = 0, limit = c(-1, 1), space = "Lab",
                       name = "Correlation") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 8, hjust = 1),
        axis.text.y = element_text(size = 8)) +
  coord_fixed() +
  labs(x = '', y = '',
       title = 'Correlation between Conflicts deaths and the SDG goals')
```

Finally, we want to analyse the correlation between conflicts affected population and the SDG goals only for the Middle East & North Africa, Sub-Saharan Africa, South Asia, Latin America & the Caribbean, Eastern Europe regions and Caucasus and Central Asia.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}

# Filter data for specific regions (pop_affected)
selected_regions <- c("Middle East & North Africa", "Sub-Saharan Africa", "South Asia", "Latin America & the Caribbean", "Eastern Europe","Caucasus and Central Asia")
conflicts_selected <- Q3.3[Q3.3$region %in% selected_regions, ]

# Select relevant columns for the correlation analysis
relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8", "goal9", "goal10", "goal11", "goal12", "goal13", "goal15", "goal16", "pop_affected")

# Compute correlation matrix for the selected regions
correlation_matrix_Conflicts_Pop_Affected <- cor(conflicts_selected[, relevant_columns], use = "complete.obs")

# View the correlation matrix
kable(correlation_matrix_Conflicts_Pop_Affected)

# Melt the correlation matrix for ggplot2
cor_melted <- as.data.frame(as.table(correlation_matrix_Conflicts_Pop_Affected))
names(cor_melted) <- c("Variable1", "Variable2", "Correlation")

# Create the heatmap
ggplot(data = cor_melted, aes(Variable1, Variable2, fill = Correlation)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white",
                       midpoint = 0, limit = c(-1, 1), space = "Lab",
                       name = "Correlation") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 8, hjust = 1),
        axis.text.y = element_text(size = 8)) +
  coord_fixed() +
  labs(x = '', y = '',
       title = 'Correlation between Conflicts Affected Population and the SDG goals')
```
