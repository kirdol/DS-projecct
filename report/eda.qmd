# Exploratory data analysis

```{r setup, echo = FALSE, message = FALSE, warning=FALSE}
source(here::here("scripts/Clean/setup.R"))
source(here::here("scripts/EDA/EDA_4_SDG.R"))
```

## General exploration

We display the distribution of the different SDG achievement scores, using boxplots to have an overview of the median, the range with most of the observations and the outliers.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.height="100%", out.width="100%"}
data_question1 <- read.csv(here("scripts","data","data_question1.csv"))
data_question24 <- read.csv(here("scripts", "data", "data_question24.csv"))
data_question2 <- read.csv(here("scripts", "data", "data_question24.csv"))
data_question3_1 <- read.csv(here("scripts", "data", "data_question3_1.csv"))
data_question3_2 <- read.csv(here("scripts", "data", "data_question3_2.csv"))
data_question3_3 <- read.csv(here("scripts", "data", "data_question3_3.csv"))
Q3.1 <- read.csv(here("scripts", "data", "data_question3_1.csv"))
Q3.2 <- read.csv(here("scripts", "data", "data_question3_2.csv"))
Q3.3 <- read.csv(here("scripts", "data", "data_question3_3.csv"))
data <- read.csv(here("scripts", "data", "all_Merge.csv"))

Correlation_overall <- data_question1 %>% 
      dplyr::select(population:ef_regulation)

#### boxplots ####

#for goals

#boxplot per continent

#Africa
data_Q1_Africa <- data_question1 %>%
  filter(data_question1$continent == 'Africa') %>%
  dplyr::select(continent, overallscore, goal1, goal2, goal3, goal4, goal5, goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13, goal15, goal16, goal17)

data_Q1_Africa_long <- melt(data_Q1_Africa)

medians_AF <- data_Q1_Africa_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Africa_long <- data_Q1_Africa_long %>%
                  left_join(medians_AF, by = "variable")

#America
data_Q1_Americas <- data_question1 %>%
  filter(data_question1$continent == 'Americas') %>%
  dplyr::select(continent, overallscore, goal1, goal2, goal3, goal4, goal5, goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13, goal15, goal16, goal17)

data_Q1_Americas_long <- melt(data_Q1_Americas)

medians_AM <- data_Q1_Americas_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Americas_long <- data_Q1_Americas_long %>%
                  left_join(medians_AM, by = "variable")

#Asia
data_Q1_Asia <- data_question1 %>%
  filter(data_question1$continent == 'Asia') %>%
  dplyr::select(continent, overallscore, goal1, goal2, goal3, goal4, goal5, goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13, goal15, goal16, goal17)

data_Q1_Asia_long <- melt(data_Q1_Asia)

medians_AS <- data_Q1_Asia_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Asia_long <- data_Q1_Asia_long %>%
                  left_join(medians_AS, by = "variable")

#Europe
data_Q1_Europe <- data_question1 %>%
  filter(data_question1$continent == 'Europe') %>%
  dplyr::select(continent, overallscore, goal1, goal2, goal3, goal4, goal5, goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13, goal15, goal16, goal17)

data_Q1_Europe_long <- melt(data_Q1_Europe)

medians_EU <- data_Q1_Europe_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Europe_long <- data_Q1_Europe_long %>%
                  left_join(medians_EU, by = "variable")

#Oceania 
data_Q1_Oceania <- data_question1 %>%
  filter(data_question1$continent == 'Oceania') %>%
  dplyr::select(continent, overallscore, goal1, goal2, goal3, goal4, goal5, goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13, goal15, goal16, goal17)

data_Q1_Oceania_long <- melt(data_Q1_Oceania)

medians_OC <- data_Q1_Oceania_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Oceania_long <- data_Q1_Oceania_long %>%
                  left_join(medians_OC, by = "variable")

# merge all medians 
medians_all <- rbind(data_Q1_Oceania_long, data_Q1_Americas_long,data_Q1_Africa_long,data_Q1_Asia_long,data_Q1_Europe_long)

medians_all$color <- ifelse(medians_all$median_value > 75, "lightblue", 
                        ifelse(medians_all$median_value < 25, "red", 'orange'))

<<<<<<< Updated upstream
bandwidth_nrd <- bw.nrd(medians_all$value)
=======
# Correlation_goals <- melt(Correlation_overall[,2:18])
# ggplot(Correlation_goals, aes(x= variable, y= value)) + 
#   geom_violin(trim=FALSE, fill="orange") +
#   labs(title="Merged goals violin boxplot",x="Goals", y = "Distribution") +
#   geom_boxplot(width=0.1, outlier.size = 1) +
#   scale_y_continuous(labels = scales::label_number()) + #limits = c(0, 100)
#   theme_classic() +
#   theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

#### WHY GOING BELOW 0 TO > 100 ?? SCORES ONLY FROM 0 TO 100

```

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.height="100%", out.width="100%"}
# Step 1: Combine all data into one data frame with a region identifier

# Melt the data
data_long <- data_question1 %>% 
  select(continent, overallscore, goal1, goal2, goal3, goal4, goal5, goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13, goal15, goal16, goal17) %>% 
  melt()

# Calculate medians and colors
medians <- data_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value), .groups = 'drop')
medians$color <- ifelse(medians$median_value > 75, "lightblue", 
                        ifelse(medians$median_value < 25, "red", 'orange'))

# Join the medians back to the long data
data_long <- left_join(data_long, medians, by = "variable")

# Calculate the bandwidth
bandwidth_nrd <- bw.nrd(data_long$value)
>>>>>>> Stashed changes

# Create the plot
ggplot(medians_all, aes(x = variable, y = value, fill = color)) +
  geom_violin(trim = FALSE, bw = bandwidth_nrd) +
  #geom_boxplot(width = 0.1, outlier.size = 1, fill = 'white') +
  scale_fill_identity() +
  labs(title = "SDG Goals by Region", x = "Goals", y = "Score") +
  facet_grid(continent ~ ., scales = "free_y") +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
```

We see different schemes among the different goals. Indeed some are quite homogeneous with a small spread of values (e.g. overall score, goals 2 and 8) while others have a large spread of values (e.g. goals 1 and 10). Goals 1, 3, 4, 7, 9, 10 and 13 have values across all possible percentages. Goals 2, 5, 8, 13 and 17 have extreme values situated outside the 95% confidence interval. It is interesting to see that goal 8 (decent work and economic growth) is the one with smaller spread of values, whereas goal 1 (no poverty) have the higher distance between the first and the third quartile. Goal 2 (no hunger) has a tight spread of values, but with the greater amount of outliers in the smaller values, meaning hunger is similar across most countries, but when it differs it is in very bad manner.

We now display boxplpots for the different variables of the human freedom index, and then also for our other independent variables.
```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.height="100%", out.width="100%"}
#for Human Freedom Index scores 

#Africa
data_Q1_Africa_HFI <- data_question1 %>%
  filter(data_question1$continent == 'Africa') %>%
  dplyr::select(continent, pf_law, pf_security, pf_movement, pf_religion, pf_assembly, pf_expression, pf_identity, ef_government, ef_legal, ef_money, ef_trade, ef_regulation)

data_Q1_Africa_HFI_long <- melt(data_Q1_Africa_HFI)

medians_AF_HFI <- data_Q1_Africa_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Africa_HFI_long <- data_Q1_Africa_HFI_long %>%
                  left_join(medians_AF_HFI, by = "variable")

#America
data_Q1_Americas_HFI <- data_question1 %>%
  filter(data_question1$continent == 'Americas') %>%
  dplyr::select(continent, pf_law, pf_security, pf_movement, pf_religion, pf_assembly, pf_expression, pf_identity, ef_government, ef_legal, ef_money, ef_trade, ef_regulation)

data_Q1_Americas_HFI_long <- melt(data_Q1_Americas_HFI)

medians_AM_HFI <- data_Q1_Americas_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Americas_HFI_long <- data_Q1_Americas_HFI_long %>%
                  left_join(medians_AM_HFI, by = "variable")

#Asia
data_Q1_Asia_HFI <- data_question1 %>%
  filter(data_question1$continent == 'Asia') %>%
  dplyr::select(continent, pf_law, pf_security, pf_movement, pf_religion, pf_assembly, pf_expression, pf_identity, ef_government, ef_legal, ef_money, ef_trade, ef_regulation)

data_Q1_Asia_HFI_long <- melt(data_Q1_Asia_HFI)

medians_AS_HFI <- data_Q1_Asia_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Asia_HFI_long <- data_Q1_Asia_HFI_long %>%
                  left_join(medians_AS_HFI, by = "variable")

#Europe
data_Q1_Europe_HFI <- data_question1 %>%
  filter(data_question1$continent == 'Europe') %>%
  dplyr::select(continent, pf_law, pf_security, pf_movement, pf_religion, pf_assembly, pf_expression, pf_identity, ef_government, ef_legal, ef_money, ef_trade, ef_regulation)

data_Q1_Europe_HFI_long <- melt(data_Q1_Europe_HFI)

medians_EU_HFI <- data_Q1_Europe_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Europe_HFI_long <- data_Q1_Europe_HFI_long %>%
                  left_join(medians_EU_HFI, by = "variable")

#Oceania 
data_Q1_Oceania_HFI <- data_question1 %>%
  filter(data_question1$continent == 'Oceania') %>%
  dplyr::select(continent, pf_law, pf_security, pf_movement, pf_religion, pf_assembly, pf_expression, pf_identity, ef_government, ef_legal, ef_money, ef_trade, ef_regulation)

data_Q1_Oceania_HFI_long <- melt(data_Q1_Oceania_HFI)

medians_OC_HFI <- data_Q1_Oceania_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Oceania_HFI_long <- data_Q1_Oceania_HFI_long %>%
                  left_join(medians_OC_HFI, by = "variable")

# merge all medians 
medians_all_HFI <- rbind(data_Q1_Oceania_HFI_long, data_Q1_Americas_HFI_long,data_Q1_Africa_HFI_long,data_Q1_Asia_HFI_long,data_Q1_Europe_HFI_long)

medians_all_HFI$color <- ifelse(medians_all_HFI$median_value > 7.5, "lightblue", 
                        ifelse(medians_all_HFI$median_value < 2.5, "red", 'orange'))

bandwidth_nrd_HFI <- bw.nrd(medians_all_HFI$value)

# Create the plot
ggplot(medians_all_HFI, aes(x = variable, y = value, fill = color)) +
  geom_violin(trim = FALSE, bw = bandwidth_nrd_HFI) +
  #geom_boxplot(width = 0.1, outlier.size = 1, fill = 'white') +
  scale_fill_identity() +
  labs(title = "Human Freedom Index Scores by Region", x = "Variables", y = "Score") +
  facet_grid(continent ~ ., scales = "free_y") +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
```

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.height="100%", out.width="100%"}
v1 <- ggplot(Correlation_overall, aes(x= factor(1), y= GDPpercapita)) + 
  geom_violin(trim=FALSE, fill="orange")+
  labs(title="Violin plot of GDP per capita",x="GDP per capita", y = "Distribution")+
  geom_boxplot(width=0.1, outlier.size = 1)+
  scale_y_continuous(labels = scales::label_number()) +  # Format y-axis labels
  theme_classic()
v2 <- ggplot(Correlation_overall, aes(x= factor(1), y= unemployment.rate)) + 
  geom_violin(trim=FALSE, fill="orange")+
  labs(title="Violin plot of unemployment rate",x="Unemployment rate", y = "Distribution")+
  geom_boxplot(width=0.1, outlier.size = 1)+
  scale_y_continuous(labels = scales::label_number()) +  # Format y-axis labels
  theme_classic()
v3 <- ggplot(Correlation_overall, aes(x= factor(1), y= MilitaryExpenditurePercentGDP)) + 
  geom_violin(trim=FALSE, fill="orange")+
  labs(title="Violin plot of military expenditure by percentage of GDP",x="Military Expenditure", y = "Distribution")+
  geom_boxplot(width=0.1, outlier.size = 1)+
  scale_y_continuous(labels = scales::label_number()) +  # Format y-axis labels
  theme_classic()
v4 <- ggplot(Correlation_overall, aes(x= factor(1), y= internet_usage)) + 
  geom_violin(trim=FALSE, fill="orange")+
  labs(title="Violin plot of internet_usage",x="internet_usage", y = "Distribution")+
  geom_boxplot(width=0.1, outlier.size = 1)+
  scale_y_continuous(labels = scales::label_number()) +  # Format y-axis labels
  theme_classic()
  
grid.arrange(v1,v2,v3,v4, ncol = 2, nrow = 2)
```

We now look at the variables in a summary table to have a more precise view of the numbers.

```{r, echo = FALSE, message = FALSE, warning=FALSE, cache = TRUE}
table1 <- summary(data_question24)
kable(table1)
```

## Focus on the influence of the factors over the SDG scores

Using our cleaned dataset, we first want to observe how each of our variables are correlated with the others. For that, we will use a heatmap. Given that most of our variables are not normally distributed, we will use the Spearman method to calculate the correlation.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE}
#### Correlations between variables Heatmap ####

Correlation_overall <-data_question1 %>% # selection of the numerical data
      dplyr::select(population:ef_regulation)

cor_matrix_sper <- # calculation of the correlation matrix
  cor(Correlation_overall, method = "spearman", use = "everything")

cor_melted <- # wide to long transformation
  melt(cor_matrix_sper)

ggplot(data = cor_melted, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", 
                       midpoint = 0, limit = c(-1, 1), space = "Lab", 
                       name="Spearman\nCorrelation") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 8, hjust = 1),
        axis.text.y = element_text(size = 8)) +
  coord_fixed() +
  labs(x = '', y = '', title = 'Correlation Matrix Heatmap')

#do 3 different heatmaps : goals on goals, goals on other variables except goals, variables on variables (except goals)
```

In the correlation matrix heatmap, we observe that goals 1 to 11 are predominantly positively correlated. Conversely, goals 12 and 13 exhibit negative correlations with most variables, except between themselves where they are strongly correlated. Additionally, there is a notable strong correlation among personal freedom variables (pf), reflecting scores from the Human Freedom Index on movement, religion, assembly, and expression.

In order to have an overview of the relationship between our independent variables and the SDG overall score, we make several graphs containing the Spearman correlation coefficient between the variable, the scatter plots describing the relationship between the variables, as well as the distribution of each variable.

```{r, echo = TRUE, message = FALSE, warning=FALSE, out.height="100%", out.width="100%"}
#### Spearman's correlation coeff ####

panel.hist <- function(x, ...){ 
  usr <- par("usr"); on.exit(par(usr)) 
  par(usr = c(usr[1:2], 0, 1.5) ) 
  h <- hist(x, plot = FALSE) 
  breaks <- h$breaks; nB <- length(breaks) 
  y <- h$counts; y <- y/max(y) 
  rect(breaks[-nB], 0, breaks[-1], y, col = "lightgreen", ...)
}
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...){ 
  usr <- par("usr"); on.exit(par(usr)) 
  par(usr = c(0, 1, 0, 1)) 
  r <- cor(x, y, method = "spearman") 
  txt <- format(c(r, 0.123456789), digits = digits)[1] 
  txt <- paste0(prefix, txt) 
  if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt) 
  text(0.5, 0.5, txt, cex = cex.cor * r)
}

# # Independent variables 
pairs(Correlation_overall[,c("overallscore", "unemployment.rate", "GDPpercapita", "MilitaryExpenditurePercentGDP", "internet_usage")], upper.panel=panel.cor, diag.panel=panel.hist, main="Correlation table and distribution of various variables")
```

The overall SDG achievement score is highly correlated with the percentage of people using the internet (r=.79) and GDP per capita (r=.60). The unemployement rate as well as the military expenditures in percentage of GDP per capita do not seem to play a role. However, this is only for the overall score.

The overall SDG achievement score is highly correlated with "personal freedom: law" (p=.69) and "personal freedom: identity" (p=.62). The other dimensions of personal freedom do not seem to have important influence. Regarding the distribution of the personal freedom variables, we notice that except for law, all have right-skewed distributions meaning that most of the countries have high scores.

The overall SDG achievement score is highly correlated with "economical freedom: legal" (p=.77), "economical trade: legal" (p=.67) and "economical freedom: money" (p=.6), while the other dimensions of economic freedom do not seem to have important influence. Regarding the distribution of the economic freedom variables, we notice more heterogeneous distributions and scores across the various countries than for personal freedom.

<<<<<<< Updated upstream
=======
### Looking at SDGs

ADD GREEN GRAPH HERE TO HAVE ALSO THE DISTRIBUTION

As we can see in the graph, most of our goals are correlated toghether. We will nown perform a PCA analysis to see how our variables are explained. You can see below the Scree plot of our PCA analysis.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.height="100%", out.width="100%"}
#### PCA and PCA Scree plot####

myPCA_g <- PCA(data_question1[,9:24], graph = FALSE)
fviz_eig(myPCA_g,
         addlabels = TRUE) +
  theme_minimal()
```

As we can see, Dimension 1 explain already more than 60% of the variations in our data. With Dimension 2, it goes up to around 70%. We can now plot our data with our two firsts dimensions.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.height="100%", out.width="100%"}
#### PCA Biplot ####

fviz_pca_biplot(myPCA_g,
                label="var",
                col.var="dodgerblue3",
                geom="point",
                pointsize = 0.1,
                labelsize = 5) +
  theme_minimal()
```

Concerning the SDG goals, we conclude that most of our variables are going along the 1st component, except the goals 10 and 15 that are rather uncorrelated with the dimension 1. In addition, as seen before, the goals 12 and 13 are negatively correlated to the other goals. With a eigenvalue bigger than 1 for the first two components, we conclude that there are only 2 dimensions to take into account, according to the Kaiser-Guttman's rule. Nevertheless, they are explaining less than 80% of cumulated variance.

>>>>>>> Stashed changes
### Looking at the HFI scores

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE}
#### PCA and PCA Scree plot####

myPCA_s <- PCA(data_question1[,29:40], graph = FALSE)
fviz_eig(myPCA_s,
         addlabels = TRUE) +
  theme_minimal()
```

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE}
#### PCA Biplot ####
fviz_pca_biplot(myPCA_s,
                label="var",
                col.var="dodgerblue3",
                geom="point",
                pointsize = 0.1,
                labelsize = 5) +
  theme_minimal()
```

Now concerning the Human Freedom Index scores, most of the variables are positively correlated to the dimension 1, slightly less for the PF religion and security, and finaly the EF government variable is uncorrelated to the dimension 1. With a eigenvalue bigger than 1 for the three first components, we conclude that there are 3 dimensions to take into account. Nevertheless, again, they are explaining less than 80% of cumulated variance.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.height="100%", out.width="100%"}
#### Kmean clustering ####

# data1_scaled <- scale(Correlation_overall)
# rownames(data1_scaled) <- seq_along(row.names(data1_scaled))
# fviz_nbclust(data1_scaled, kmeans, method="wss")
# kmean <- kmeans(data1_scaled, 7, nstart = 25)
# fviz_cluster(kmean, data=data1_scaled, repel=FALSE, depth =NULL, ellipse.type = "norm", labelsize = 0, pointsize = 0.5)

data_kmean_country <- data_question1 %>% dplyr::select(-c(X,code,year,continent,region))



#filter data different than 0 and dropping observations 
filtered_data <- data_kmean_country %>%
  group_by(country) %>%
  filter_if(is.numeric, all_vars(sd(.) != 0)) %>%
  ungroup()

scale_by_country <- filtered_data %>%
  group_by(country) %>% summarise_all(~ scale(.))

means_by_country <- scale_by_country %>%
  group_by(country) %>%
  summarise_all(~ mean(., na.rm = TRUE))

rownames(means_by_country) <- seq_along(row.names(means_by_country))
fviz_nbclust(means_by_country[,-1], kmeans, method="wss")
kmean <- kmeans(means_by_country[,-1], 4, nstart = 25)
fviz_cluster(kmean, data=means_by_country[,-1], repel=FALSE, depth =NULL, ellipse.type = "norm", labelsize = 10, pointsize = 0.5)

### NOW CLUSTERING BY COUNTRY? AND TAKE MEAN OF EVERY VARIABLE ON EVERY CONCERNED YEAR?
```

Due to the large number of data, the visualization of the clusters using the kmean method is not really relevant. In addition, by clustering our data, we are trying to get group that differ from eachother but with little variation of the observations within the same cluster. Here, only 60.6% of the variance is explained by the variation between clusters. This is not enough.

## Focus on the influence of events over the SDG scores

In order to have an overview of the relationship between the different events variables and the SDG overall score, we make several graphs containing the Pearson correlation coefficient between the variable, the scatter plots describing the relationship between the variables, as well as the distribution of each variable.

<<<<<<< Updated upstream
```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
lower.panel <- function(x, y, ...){
  points(x, y, pch = 20, col = "black", cex = 0.2)
}
evaluateCorrelationStars <- function(correlation) {
  if (abs(correlation) >= 0.7) {
    return("*****")  # Strong correlation: 5 stars
  } else if (abs(correlation) >= 0.5) {
    return("****")   # Moderate correlation: 4 stars
  } else if (abs(correlation) >= 0.3) {
    return("***")    # Fair correlation: 3 stars
  } else if (abs(correlation) >= 0.1) {
    return("**")     # Weak correlation: 2 stars
  } else {
    return("*")      # Very weak correlation: 1 star
  }
}

# panel.cor function with stars alongside correlation coefficients
panel.cor_stars <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
  usr <- par("usr"); on.exit(par(usr)) 
  par(usr = c(0, 1, 0, 1)) 
  r <- cor(x, y)
  stars <- evaluateCorrelationStars(r)
  txt <- paste0(format(c(r, 0.123456789), digits = digits)[1], " ", stars)
  if(missing(cex.cor)) cex.cor <- 0.5/strwidth(txt)
  text(0.5, 0.5, txt, cex = cex.cor)
}

pairs(data_question3_1[, c("overallscore", "total_affected", "total_deaths")], upper.panel = panel.cor_stars,diag.panel = panel.hist,lower.panel = lower.panel, main = "Correlation table and distribution of Disaster variables")

```

The different variables used to materialize the impact of climate disasters do not seem to have important influence on the overall score, but we will further explore for the different SDGs, since we believe that such disasters have a specific influence on some SDGs.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
lower.panel <- function(x, y, ...){
  points(x, y, pch = 20, col = "black", cex = 0.2)
}
evaluateCorrelationStars <- function(correlation) {
  if (abs(correlation) >= 0.7) {
    return("*****")  
  } else if (abs(correlation) >= 0.5) {
    return("****")
  } else if (abs(correlation) >= 0.3) {
    return("***") 
  } else if (abs(correlation) >= 0.1) {
    return("**")
  } else {
    return("*")
  }
}

# panel.cor function with stars alongside correlation coefficients
panel.cor_stars <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
  usr <- par("usr"); on.exit(par(usr)) 
  par(usr = c(0, 1, 0, 1)) 
  r <- cor(x, y)
  stars <- evaluateCorrelationStars(r)
  txt <- paste0(format(c(r, 0.123456789), digits = digits)[1], " ", stars)
  if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
  text(0.5, 0.5, txt, cex = cex.cor)
}

#ERROR TO RESOLVE (PROBABLY NAs SOMEWHERE)

# pairs(data_question3_2[,c("overallscore", "cases_per_million", "deaths_per_million", "stringency")], upper.panel = panel.cor_stars, diag.panel=panel.hist, lower.panel = lower.panel,main="Correlation table and distribution of COVID variables")
```

The different variables used to materialize the impact of COVID19 do not seem to have important influence on the overall score, but we will further explore for the different SDGs, since we believe that COVID19 had a specific influence on some SDGs, for instance "good health and well-being" or "decent work and economic growth".

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
lower.panel <- function(x, y, ...){
  points(x, y, pch = 20, col = "black", cex = 0.5)
}
evaluateCorrelationStars <- function(correlation) {
  if (abs(correlation) >= 0.7) {
    return("*****") 
  } else if (abs(correlation) >= 0.5) {
    return("****")
  } else if (abs(correlation) >= 0.3) {
    return("***") 
  } else if (abs(correlation) >= 0.1) {
    return("**")
  } else {
    return("*")
  }
}

# panel.cor function with stars alongside correlation coefficients
panel.cor_stars <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
  usr <- par("usr"); on.exit(par(usr)) 
  par(usr = c(0, 1, 0, 1)) 
  r <- cor(x, y)
  stars <- evaluateCorrelationStars(r)
  txt <- paste0(format(c(r, 0.123456789), digits = digits)[1], " ", stars)
  if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
  text(0.5, 0.5, txt, cex = cex.cor)
}

# ALSO ERROR

# pairs(data_question3_3[,c("overallscore", "ongoing", "sum_deaths", "pop_affected", "area_affected", "maxintensity")], upper.panel = panel.cor_stars, diag.panel=panel.hist, lower.panel = lower.panel, main="Correlation table and distribution of conflicts variables")

```
=======
# ```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
# lower.panel <- function(x, y, ...){
#   points(x, y, pch = 20, col = "black", cex = 0.2)
# }
# evaluateCorrelationStars <- function(correlation) {
#   if (abs(correlation) >= 0.7) {
#     return("*****")  # Strong correlation: 5 stars
#   } else if (abs(correlation) >= 0.5) {
#     return("****")   # Moderate correlation: 4 stars
#   } else if (abs(correlation) >= 0.3) {
#     return("***")    # Fair correlation: 3 stars
#   } else if (abs(correlation) >= 0.1) {
#     return("**")     # Weak correlation: 2 stars
#   } else {
#     return("*")      # Very weak correlation: 1 star
#   }
# }
# 
# # panel.cor function with stars alongside correlation coefficients
# panel.cor_stars <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
#   usr <- par("usr"); on.exit(par(usr)) 
#   par(usr = c(0, 1, 0, 1)) 
#   r <- cor(x, y)
#   stars <- evaluateCorrelationStars(r)
#   txt <- paste0(format(c(r, 0.123456789), digits = digits)[1], " ", stars)
#   if(missing(cex.cor)) cex.cor <- 0.5/strwidth(txt)
#   text(0.5, 0.5, txt, cex = cex.cor)
# }
# 
# pairs(data_question3_1[, c("overallscore", "total_affected", "total_deaths")], upper.panel = panel.cor_stars,diag.panel = panel.hist,lower.panel = lower.panel, main = "Correlation table and distribution of Disaster variables")
# 
# ```
# 
# The different variables used to materialize the impact of climate disasters do not seem to have important influence on the overall score, but we will further explore for the different SDGs, since we believe that such disasters have a specific influence on some SDGs.
# 
# ```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
# lower.panel <- function(x, y, ...){
#   points(x, y, pch = 20, col = "black", cex = 0.2)
# }
# evaluateCorrelationStars <- function(correlation) {
#   if (abs(correlation) >= 0.7) {
#     return("*****")  
#   } else if (abs(correlation) >= 0.5) {
#     return("****")
#   } else if (abs(correlation) >= 0.3) {
#     return("***") 
#   } else if (abs(correlation) >= 0.1) {
#     return("**")
#   } else {
#     return("*")
#   }
# }
# 
# # panel.cor function with stars alongside correlation coefficients
# panel.cor_stars <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
#   usr <- par("usr"); on.exit(par(usr)) 
#   par(usr = c(0, 1, 0, 1)) 
#   r <- cor(x, y)
#   stars <- evaluateCorrelationStars(r)
#   txt <- paste0(format(c(r, 0.123456789), digits = digits)[1], " ", stars)
#   if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
#   text(0.5, 0.5, txt, cex = cex.cor)
# }
# 
# pairs(data_question3_2[,c("overallscore", "cases_per_million", "deaths_per_million", "stringency")], upper.panel = panel.cor_stars, diag.panel=panel.hist, lower.panel = lower.panel,main="Correlation table and distribution of COVID variables")
# ```
# 
# The different variables used to materialize the impact of COVID19 do not seem to have important influence on the overall score, but we will further explore for the different SDGs, since we believe that COVID19 had a specific influence on some SDGs, for instance "good health and well-being" or "decent work and economic growth".
# 
# ```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
# lower.panel <- function(x, y, ...){
#   points(x, y, pch = 20, col = "black", cex = 0.5)
# }
# evaluateCorrelationStars <- function(correlation) {
#   if (abs(correlation) >= 0.7) {
#     return("*****") 
#   } else if (abs(correlation) >= 0.5) {
#     return("****")
#   } else if (abs(correlation) >= 0.3) {
#     return("***") 
#   } else if (abs(correlation) >= 0.1) {
#     return("**")
#   } else {
#     return("*")
#   }
# }
# 
# # panel.cor function with stars alongside correlation coefficients
# panel.cor_stars <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
#   usr <- par("usr"); on.exit(par(usr)) 
#   par(usr = c(0, 1, 0, 1)) 
#   r <- cor(x, y)
#   stars <- evaluateCorrelationStars(r)
#   txt <- paste0(format(c(r, 0.123456789), digits = digits)[1], " ", stars)
#   if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
#   text(0.5, 0.5, txt, cex = cex.cor)
# }
# 
# pairs(data_question3_3[,c("overallscore", "ongoing", "sum_deaths", "pop_affected", "area_affected", "maxintensity")], upper.panel = panel.cor_stars, diag.panel=panel.hist, lower.panel = lower.panel, main="Correlation table and distribution of conflicts variables")
# 
# ```
>>>>>>> Stashed changes

The different variables used to materialize the impact of conflicts do not seem to have important influence on the overall score, but we will further explore for the different SDGs, since we believe that conflicts have a specific influence on some SDGs.

To explore our data on events such as disasters, covid-19 and conflicts we have to first see which countries are the most touched by these. To do so, we made time-series analysis on this three events each time depending on different variables.

```{r, echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE, out.height="100%", out.width="100%"}
# Converted 'year' column to date format
Q3.1$year <- as.Date(as.character(Q3.1$year), format = "%Y")
Q3.2$year <- as.Date(as.character(Q3.2$year), format = "%Y")
Q3.3$year <- as.Date(as.character(Q3.3$year), format = "%Y")
```

These is our time-analysis concerning the COVID-19 cases per million by region between end 2018 and 2022.

```{r, echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE, out.height="100%", out.width="100%"}
library(ggplot2)
covid_filtered <- Q3.2[Q3.2$year >= as.Date("2018-12-12"), ]

ggplot(data = covid_filtered, aes(x = year, y = cases_per_million, group = region, color = region)) +
  geom_smooth(method = "loess",  se = FALSE, span = 0.8, size = 0.5) + 
  labs(title = "Trend of COVID-19 Cases per Million Over Time",
       x = "Year", y = "Cases per Million") +
  facet_wrap(~ region, ncol = 3) +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
         plot.title = element_text(margin = margin(b = 20), hjust = 0.5, 
                                   vjust = 8, lineheight = 2),
         strip.text = element_blank(),
         panel.spacing = unit(0.5, "lines")
  ) +
  theme(legend.position = "bottom") +
  guides(color = guide_legend(nrow = 3))
```

These is our time-analysis concerning the COVID-19 deaths per million per region between end 2018 and 2022

```{r, echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE, out.height="100%", out.width="100%"}
ggplot(data = covid_filtered, aes(x = year, y = deaths_per_million, group = region, color = region)) +
  geom_smooth(method = "loess",  se = FALSE, span = 0.8, size = 0.5) + 
  labs(title = "Trend of COVID-19 Deaths per Million Over Time", x = "Year", y = "Deaths per Million") +
  facet_wrap(~ region, nrow = 3) +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
         plot.title = element_text(margin = margin(b = 20), hjust = 0.5, 
                                   vjust = 8, lineheight = 2),
         strip.text = element_blank(),
         panel.spacing = unit(0.5, "lines")
  ) +
  theme(legend.position = "bottom") +
  guides(color = guide_legend(nlin = 3))
```

These is our time-analysis concerning the COVID-19 stringency per region between end 2018 and 2022

```{r, echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE, out.height="100%", out.width="100%"}
ggplot(data = covid_filtered, aes(x = year, y = stringency, group = region, 
                                  color = region)) +
  geom_smooth(method = "loess",  se = FALSE, span = 0.7, size = 0.5) + 
  labs(title = "Trend of COVID-19 Stringency Over Time", x = "Year", y = "Stringency") +
  facet_wrap(~ region, nrow = 4) +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
         plot.title = element_text(margin = margin(b = 20), hjust = 0.5, 
                                   vjust = 8, lineheight = 2),
         strip.text = element_blank(),
         panel.spacing = unit(0.5, "lines")
  ) +
  theme(legend.position = "right") +
  guides(color = guide_legend(ncol = 1))
```

These is our time-analysis concerning climatic disasters with total affected per region

```{r, echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE, out.height="100%", out.width="100%"}
Q3.1[is.na(Q3.1)] <- 0
ggplot(data = Q3.1, aes(x = year, y = total_affected, group = region, color = region)) +
  geom_smooth(method = "loess",  se = FALSE, span = 0.7, size = 0.5) + 
  labs(title = "Trend of Total Affected from Climatic Disasters Over Time", x = "Year", y = "Total Affected") +
  facet_wrap(~ region, nrow = 4) +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
         plot.title = element_text(margin = margin(b = 20), hjust = 0.5, 
                                   vjust = 8, lineheight = 2),
         strip.text = element_blank(),
         panel.spacing = unit(0.5, "lines")
  ) +
  theme(legend.position = "right") +
  guides(color = guide_legend(ncol = 1))
```

These is our time-analysis concerning conflicts deaths per region between 2000 and 2016

```{r, echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE, out.height="100%", out.width="100%"}
conflicts_filtered <- Q3.3[Q3.3$year >= as.Date("2000-01-01") & Q3.3$year <= as.Date("2016-12-31"), ]

ggplot(data = conflicts_filtered, aes(x = year, y = sum_deaths, group = region, color = region)) +
  geom_smooth(method = "loess", se = FALSE, span = 0.3, size = 0.5) +  # Using loess smoothing method
  labs(title = "Trend of Deaths by Conflicts Over Time", x = "Year", y = "Sum Deaths") +
  facet_wrap(~ region, nrow = 4) +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
         plot.title = element_text(margin = margin(b = 20), hjust = 0.5, 
                                   vjust = 8, lineheight = 2),
         strip.text = element_blank(),
         panel.spacing = unit(0.5, "lines")
  ) +
  theme(legend.position = "right") +
  guides(color = guide_legend(ncol = 1))
```

We can see that the regions' the most affected by the conflicts are : Middle east and north Africa, Sub-Saharan Africa, South Asia, then less America & the Caribbean and Eastern Europe

These is our time-analysis concerning conflicts affected population per region between 2000 and 2016

```{r, echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE, out.height="100%", out.width="100%"}
ggplot(data = conflicts_filtered, aes(x = year, y = pop_affected, group = region, color = region)) +
  geom_smooth(method = "loess", se = FALSE, span = 0.3, size = 0.5) +  # Using loess smoothing method
  labs(title = "Trend of Population Affected by Conflicts Over Time", x = "Year", y = "pop_affected") +
  facet_wrap(~ region, nrow = 4) +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
         plot.title = element_text(margin = margin(b = 20), hjust = 0.5, 
                                   vjust = 8, lineheight = 2),
         strip.text = element_blank(),
         panel.spacing = unit(0.5, "lines")
  ) +
  theme(legend.position = "right") +
  guides(color = guide_legend(ncol = 1))
```

We can see that the regions' the most affected by the conflicts are : Middle east and north Africa, Sub-Saharan Africa, South Asia, America & the Caribbean, Eastern Europe and sometimes Caucasus and Central Asia

Now that we could visualize which regions are the most impacted by these three events we can do correlations analysis per region to see if this events have indeed an impact on the evolution of SDG goals.

Here we want to analyse the correlation between the climate disasters and the SDG goals in South and East Asia.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
Q3.1[is.na(Q3.1)] <- 0

south_east_asia_data <- Q3.1[Q3.1$region %in% c("South Asia", "East Asia"), ]

relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8", "goal9", "goal10", "goal11", "goal12", "goal13", "goal15", "goal16", "total_affected", "no_homeless")

correlation_matrix_disaster_Asia <- cor(south_east_asia_data[, relevant_columns], use = "complete.obs")

kable(correlation_matrix_disaster_Asia)

cor_melted <- as.data.frame(as.table(correlation_matrix_disaster_Asia))
names(cor_melted) <- c("Variable1", "Variable2", "Correlation")

ggplot(data = cor_melted, aes(Variable1, Variable2, fill = Correlation)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white",
                       midpoint = 0, limit = c(-1, 1), space = "Lab",
                       name = "Correlation") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 8, hjust = 1),
        axis.text.y = element_text(size = 8)) +
  coord_fixed() +
  labs(x = '', y = '',
       title = 'Correlation between the climate disasters and the SDG goals in South and East Asia')

```

We conclude that climate disasters do not really have a big impact on SDG goals.

Here we want to analyse the correlation between the Covid-19 and the SDG goals only during Covid time.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
covid_filtered <- Q3.2[Q3.2$year >= as.Date("2019-01-01"), ]

relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8", "goal9", "goal10", "goal11", "goal12", "goal13", "goal15", "goal16", "stringency", "cases_per_million", "deaths_per_million")
# Subset data with relevant columns for correlation analysis
relevant_data <- covid_filtered[, relevant_columns]

correlation_matrix_Covid <- cor(relevant_data, use = "complete.obs")

kable(correlation_matrix_Covid)

cor_melted <- as.data.frame(as.table(correlation_matrix_Covid))
names(cor_melted) <- c("Variable1", "Variable2", "Correlation")

ggplot(data = cor_melted, aes(Variable1, Variable2, fill = Correlation)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white",
                       midpoint = 0, limit = c(-1, 1), space = "Lab",
                       name = "Correlation") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 8, hjust = 1),
        axis.text.y = element_text(size = 8)) +
  coord_fixed() +
  labs(x = '', y = '',
       title = 'Correlation between COVID and the SDG goals')
```

Same conclusion, really weird.

Here we want to analyse the correlation between conflicts deaths and the SDG goals only for the Middle East & North Africa, Sub-Saharan Africa, South Asia, Latin America & the Caribbean and Eastern Europe regions.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}

# Filter data for specific regions
selected_regions <- c("Middle East & North Africa", "Sub-Saharan Africa", "South Asia", "Latin America & the Caribbean", "Eastern Europe")
conflicts_selected <- Q3.3[Q3.3$region %in% selected_regions, ]

# Select relevant columns for the correlation analysis
relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8", "goal9", "goal10", "goal11", "goal12", "goal13", "goal15", "goal16", "sum_deaths")

# Compute correlation matrix for the selected regions
correlation_matrix_Conflicts_Deaths <- cor(conflicts_selected[, relevant_columns], use = "complete.obs")

# View the correlation matrix
kable(correlation_matrix_Conflicts_Deaths)

# Melt the correlation matrix for ggplot2
cor_melted <- as.data.frame(as.table(correlation_matrix_Conflicts_Deaths))
names(cor_melted) <- c("Variable1", "Variable2", "Correlation")

# Create the heatmap
ggplot(data = cor_melted, aes(Variable1, Variable2, fill = Correlation)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white",
                       midpoint = 0, limit = c(-1, 1), space = "Lab",
                       name = "Correlation") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 8, hjust = 1),
        axis.text.y = element_text(size = 8)) +
  coord_fixed() +
  labs(x = '', y = '',
       title = 'Correlation between Conflicts deaths and the SDG goals')
```

Finally, we want to analyse the correlation between conflicts affected population and the SDG goals only for the Middle East & North Africa, Sub-Saharan Africa, South Asia, Latin America & the Caribbean, Eastern Europe regions and Caucasus and Central Asia.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}

# Filter data for specific regions (pop_affected)
selected_regions <- c("Middle East & North Africa", "Sub-Saharan Africa", "South Asia", "Latin America & the Caribbean", "Eastern Europe","Caucasus and Central Asia")
conflicts_selected <- Q3.3[Q3.3$region %in% selected_regions, ]

# Select relevant columns for the correlation analysis
relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8", "goal9", "goal10", "goal11", "goal12", "goal13", "goal15", "goal16", "pop_affected")

# Compute correlation matrix for the selected regions
correlation_matrix_Conflicts_Pop_Affected <- cor(conflicts_selected[, relevant_columns], use = "complete.obs")

# View the correlation matrix
kable(correlation_matrix_Conflicts_Pop_Affected)

# Melt the correlation matrix for ggplot2
cor_melted <- as.data.frame(as.table(correlation_matrix_Conflicts_Pop_Affected))
names(cor_melted) <- c("Variable1", "Variable2", "Correlation")

# Create the heatmap
ggplot(data = cor_melted, aes(Variable1, Variable2, fill = Correlation)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white",
                       midpoint = 0, limit = c(-1, 1), space = "Lab",
                       name = "Correlation") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 8, hjust = 1),
        axis.text.y = element_text(size = 8)) +
  coord_fixed() +
  labs(x = '', y = '',
       title = 'Correlation between Conflicts Affected Population and the SDG goals')
```
