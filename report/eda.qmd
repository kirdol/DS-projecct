# Exploratory data analysis

```{r, echo = FALSE, message = FALSE, warning=FALSE, cache = TRUE}
source(here::here("scripts/Clean/setup.R"))
source(here::here("scripts/EDA/EDA_4_SDG.R"))
```

## General exploration

We display the distribution of the different SDG achievement scores, using boxplots to have an overview of the median, the range with most of the observations and the outliers.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.height="100%", out.width="100%"}
data <- read.csv(here("scripts", "data", "all_Merge.csv"))

par(mfrow = c(2, 3), oma = c(0, 0, 2, 0))

for (i in 8:13) { 
  boxplot(data[, i], main = names(data)[i], horizontal = TRUE, ylim = c(0, 100))
  if (i==9){
    mtext("Distributions of the SDG scores (overall & 1-5) going from 0-100%", side=3, line=4)
  }
}


for (i in 14:19) { 
  boxplot(data[, i], main = names(data)[i], horizontal = TRUE, ylim = c(0, 100))
  if (i==15){
    mtext("Distributions of the SDG scores (6-11) going from 0-100%", side=3, line=4)
  }
}

for (i in 20:24) { 
  boxplot(data[, i], main = names(data)[i], horizontal = TRUE, ylim = c(0, 100))
  if (i==21){
    mtext("Distributions of the SDG scores (12-17) going from 0-100%", side=3, line=4)
  }
}
par(mfrow=c(1,1))
```

To have an overview of the relationship between our independent variables and the SDG overall score, we make several graphs containing the Pearson correlation coefficient between the variable, the scatter plots describing the relationship between the variables, as well as the distribution of each variable.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.height="100%", out.width="100%"}
data_question1 <- read.csv(here("scripts", "data", "data_question1.csv"))
data_question2 <- read.csv(here("scripts", "data", "data_question24.csv"))
data_question3_2 <- read.csv(here("scripts", "data", "data_question3_2.csv"))
data_question3_3 <- read.csv(here("scripts", "data", "data_question3_3.csv"))

panel.hist <- function(x, ...){ 
  usr <- par("usr"); on.exit(par(usr)) 
  par(usr = c(usr[1:2], 0, 1.5) ) 
  h <- hist(x, plot = FALSE) 
  breaks <- h$breaks; nB <- length(breaks) 
  y <- h$counts; y <- y/max(y) 
  rect(breaks[-nB], 0, breaks[-1], y, col = "lightgreen", ...)
}
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...){ 
  usr <- par("usr"); on.exit(par(usr)) 
  par(usr = c(0, 1, 0, 1)) 
  r <- (cor(x, y)) 
  txt <- format(c(r, 0.123456789), digits = digits)[1] 
  txt <- paste0(prefix, txt) 
  if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt) 
  text(0.5, 0.5, txt, cex = cex.cor * r)
}

# Independent variables 
pairs(data_question1[,c("overallscore", "unemployment.rate", "GDPpercapita", "MilitaryExpenditurePercentGDP", "internet_usage")], upper.panel=panel.cor, diag.panel=panel.hist, main="Correlation table and distribution of various variables")

pairs(data_question1[,c("overallscore", "pf_law", "pf_security", "pf_movement", "pf_religion", "pf_assembly", "pf_expression", "pf_identity")], upper.panel=panel.cor, diag.panel=panel.hist, main="Correlation table and distribution of personal freedom variables")

pairs(data_question1[,c("overallscore", "ef_government", "ef_legal", "ef_money", "ef_trade", "ef_regulation")], upper.panel=panel.cor, diag.panel=panel.hist, main="Correlation table and distribution of economic freedom variables")

pairs(data_question3_2[,c("overallscore", "cases_per_million", "deaths_per_million", "stringency")], upper.panel=panel.cor, diag.panel=panel.hist, main="Correlation table and distribution of COVID variables")

pairs(data_question3_3[,c("overallscore", "ongoing", "sum_deaths", "pop_affected", "area_affected", "maxintensity")], upper.panel=panel.cor, diag.panel=panel.hist, main="Correlation table and distribution of conflicts variables")

```

## Focus on time evolution

## **Focus on the evolution of SDG scores over time**

First, we look at the evolution of SDG achievement overall score over time for the whole world, by continent and by region.

```{r, echo = TRUE, message = FALSE, cache = TRUE}
data1 <- data_question2 %>% group_by(year) %>%
  mutate(mean_overall_score_by_year=mean(overallscore))

data2 <- data_question2 %>% group_by(year, continent) %>%
  mutate(mean_overall_score_by_year=mean(overallscore))

data3 <- data_question2 %>% group_by(year, region) %>%
  mutate(mean_overall_score_by_year=mean(overallscore))

ggplot(data1) +
  geom_line(mapping=aes(x=year, y=mean_overall_score_by_year), color="blue", lwd=1) +
  scale_y_continuous(limits = c(0, 100))  +
  labs(title = "Evolution of the mean overall SDG achievement score across the world",
       y = "Mean Overall SDG Score",
       x = "Year"
       )

ggplot(data2) +
  geom_line(mapping=aes(x=year, y=mean_overall_score_by_year, color=continent), lwd=1) +
  scale_y_continuous(limits = c(0, 100)) +
  labs(title = "Evolution of the mean overall SDG achievement score by continent",
       y = "Mean Overall SDG Score",
       x = "Year"
       )

ggplot(data3) +
  geom_line(mapping=aes(x=year, y=mean_overall_score_by_year, color=region), lwd=1) +
  scale_y_continuous(limits = c(0, 100)) +
  labs(title = "Evolution of the mean overall SDG achievement score by region",
       y = "Mean Overall SDG Score",
       x = "Year"
       )
```

Second, we look at the evolution of SDG achievement scores(16) over time for the whole world, by continent and by region.

```{r, echo = TRUE, message = FALSE, cache = TRUE, warning = FALSE, out.height="100%", out.width="100%"}
data4 <- data_question2 %>%
  group_by(year) %>%
  summarise(across(starts_with("goal"), mean, na.rm=TRUE)) %>%
  pivot_longer(cols = starts_with("goal"), names_to = "goal", values_to = "mean_value")

color_palette <- c("red", "blue", "green", "orange", "purple", "pink", "brown", "gray", "cyan", "magenta", "yellow", "darkgreen", "darkblue", "darkred", "darkorange", "darkcyan")

ggplot(data = data4) +
  geom_line(mapping = aes(x = year, y = mean_value, color = goal), size = 0.7) +
  scale_color_manual(values = color_palette) +
  scale_y_continuous(limits = c(0, 100)) +
  labs(title = "Evolution of the mean SDG achievement scores across the world",
       y = "Mean SDG Scores",
       x = "Year"
       ) +
  guides(
    color = guide_legend(
      ncol = 2,        # Number of columns
      title.position = "top",  # Position of the legend title
      title.hjust = 0.5        # Horizontal justification of the legend title
    )
  )
```

```{r, echo = TRUE, message = FALSE, cache = TRUE, warning=FALSE, out.height="100%", out.width="100%"}
ggplot(data = data4) +
  geom_line(mapping = aes(x = year, y = mean_value), size = 0.7) +
  scale_color_manual(values = color_palette) +
  scale_y_continuous(limits = c(0, 100)) +
  labs(title = "Evolution of the mean SDG achievement scores across the world",
       y = "Mean SDG Scores",
       x = "Year"
       ) +
  facet_wrap(~ goal, nrow = 4)
```

```{r, echo = TRUE, message = FALSE, cache = TRUE, warning=FALSE, out.height="100%", out.width="100%"}
data5 <- data_question2 %>%
  group_by(year, continent) %>%
  summarise(across(starts_with("goal"), mean, na.rm=TRUE)) %>%
  pivot_longer(cols = starts_with("goal"), names_to = "goal", values_to = "mean_value")

color_palette <- c("red", "blue", "green", "orange", "purple", "pink", "brown", "gray", "cyan", "magenta", "yellow", "darkgreen", "darkblue", "black", "darkorange", "darkcyan")

ggplot(data = data5) +
  geom_line(mapping = aes(x = year, y = mean_value, color=continent), size = 0.7) +
  scale_color_manual(values = color_palette) +
  scale_y_continuous(limits = c(0, 100)) +
  labs(title = "Evolution of the mean SDG achievement scores by continent",
       y = "Mean SDG Scores",
       x = "Years from 2000 to 2022"
       ) +
  facet_wrap(~ goal, nrow = 4)+
  scale_x_continuous(breaks = NULL)
```

Third we create an interactive map of the world to be able to navidagte from year 2000 to 2022, seeing the level of achievement of the SDGs (overall score) for each country. To open it in your browser, use this html file: . Here is only a non-interactive world map of the overall SDGs achievement scores, not taking into account the evolution over the years.

```{r, echo = TRUE, message = TRUE, warning = FALSE, out.height="100%", out.width="100%"}
library(rnaturalearth)
# Load world map data
world <- ne_countries(scale = "medium", returnclass = "sf")

# Merge data with the world map data
data0 <- merge(world, data_question2, by.x = "iso_a3", by.y = "code", all.x = TRUE)

data0 %>%
  st_transform(crs = "+proj=robin") %>%
  ggplot() +
  geom_sf(color = "lightgrey") +
  geom_sf(aes(fill = overallscore), color = NA) +
  scale_fill_gradientn(
    colors = c("darkred", "orange", "yellow", "darkgreen"),
    values = scales::rescale(c(0, 0.25, 0.5, 1)),
    name = "Overall Score",
    na.value = NA
  ) +
  labs(title = "Mean overall SDG achievement score by country")+
  coord_sf(datum = NA) +
  theme_minimal()
```

## Focus on factors

## Focus on relationship between SDGs

**How are the different SDGs linked? (We want to see if some SDGs are linked in the fact that a high score on one implies a high score on the other, and thus if we can make groups of SDGs that are comparable in that way).**

Let's explore how the different SDG are correlated together by creating a heatmap of the correlation between our variables. We also added a small script to check whether the correlations are significantly different from 0. First, let's select the SDGs scores.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE}
sdg_scores <- Q4[, c('goal1', 'goal2', 'goal3', 'goal4', 'goal5', 'goal6',
                     'goal7', 'goal8', 'goal9', 'goal10', 'goal11', 'goal12',
                     'goal13', 'goal15', 'goal16', 'goal17')]
```

We then, initialize the matrices and calculate the correlation, and p-values of each combination of SDGs scores

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE}
cor_matrix <- matrix(nrow = ncol(sdg_scores), ncol = ncol(sdg_scores))
p_matrix <- matrix(nrow = ncol(sdg_scores), ncol = ncol(sdg_scores))
rownames(cor_matrix) <- colnames(sdg_scores)
rownames(p_matrix) <- colnames(sdg_scores)
colnames(cor_matrix) <- colnames(sdg_scores)
colnames(p_matrix) <- colnames(sdg_scores)

# Calculate correlation and p-values
for (i in 1:ncol(sdg_scores)) {
  for (j in 1:ncol(sdg_scores)) {
    test_result <- cor.test(sdg_scores[, i], sdg_scores[, j])
    cor_matrix[i, j] <- test_result$estimate
    p_matrix[i, j] <- test_result$p.value}}
```

We then reshape our data to be able to use the package ggplot2 to create our heatmap.

```{r, echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE}
melted_cor_matrix <-
  melt(cor_matrix)
melted_p_matrix <-
  melt(matrix(as.vector(p_matrix), nrow = ncol(sdg_scores)))

plot_data <- # Combine the datasets
  cbind(melted_cor_matrix, p_value = melted_p_matrix$value)

ggplot(plot_data, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  geom_text(aes(label = sprintf("%.2f", value), color = p_value < 0.05),
            vjust = 1) +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", 
                       midpoint = 0, limit = c(-1,1), space = "Lab", 
                       name="Pearson\nCorrelation") +
  scale_color_manual(values = c("black", "yellow")) + # black when significant, yellow if not
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        axis.text.y = element_text(angle = 45, hjust = 1),
        legend.position = "none") +
  labs(x = 'SDG Goals', y = 'SDG Goals',
       title = 'Correlation Matrix with Significance Indicator')
```

Note that as said previously, we assessed the correlations to ascertain if they substantially deviated from zero, setting the significance level at an alpha of 5%. To aid in visualization, we marked any correlations that did not meet this level of significance with a yellow highlight in our graphical representation. The absence of yellow markings on our plot suggests that all Sustainable Development Goal (SDG) scores demonstrate a statistically significant correlation.

We can have a look at the shape of the corelation between the SDGs with the plot function.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE}
plot(sdg_scores)
```

-   Mapping out the underlying structure
-   Identifying the most important variables
-   Univariate visualizations
-   Multivariate visualizations
-   Summary tables
