## Focus on the influence of events over the SDG scores

```{r echo = FALSE, message = FALSE, warning=FALSE}
#### Setup of the environment ####

source(here::here("scripts","Clean","setup.R"))
data_question1 <- read.csv(here("scripts","data","data_question1.csv"))
data_question24 <- read.csv(here("scripts", "data", "data_question24.csv"))
data_question2 <- read.csv(here("scripts", "data", "data_question24.csv"))
data_question3_1 <- read.csv(here("scripts", "data", "data_question3_1.csv"))
data_question3_2 <- read.csv(here("scripts", "data", "data_question3_2.csv"))
data_question3_3 <- read.csv(here("scripts", "data", "data_question3_3.csv"))
Q3.1 <- read.csv(here("scripts", "data", "data_question3_1.csv"))
Q3.2 <- read.csv(here("scripts", "data", "data_question3_2.csv"))
Q3.3 <- read.csv(here("scripts", "data", "data_question3_3.csv"))
data <- read.csv(here("scripts", "data", "all_Merge.csv"))
Correlation_overall <- data_question1 %>% 
      dplyr::select(population:ef_regulation)
```

```{r echo = FALSE, message = FALSE, warning=FALSE}
variables_to_test <- data_question3_1[, c("overallscore", "total_affected", "total_deaths")]

shapiro_test_overallscore <- shapiro.test(variables_to_test$overallscore)
shapiro_test_total_affected <- shapiro.test(variables_to_test$total_affected)
shapiro_test_total_deaths <- shapiro.test(variables_to_test$total_deaths)

shapiro_results <- data.frame(
  Variable = c("overallscore", "total_affected", "total_deaths"),
  W_Value = c(shapiro_test_overallscore$statistic, shapiro_test_total_affected$statistic, shapiro_test_total_deaths$statistic),
  P_Value = c(shapiro_test_overallscore$p.value, shapiro_test_total_affected$p.value, shapiro_test_total_deaths$p.value)
)

print(shapiro_results)
```

The value of W are very close to zero (W = 0.06 and W=0.03) for the disasters variables, this suggests that the data diverge considerably from a normal distribution.

```{r echo = FALSE, message = FALSE, warning=FALSE}

variables_to_test <- data_question3_2[, c("cases_per_million", "deaths_per_million", "stringency")]

shapiro_test_cases_per_million <- shapiro.test(variables_to_test$cases_per_million)
shapiro_test_deaths_per_million <- shapiro.test(variables_to_test$deaths_per_million)
shapiro_test_stringency <- shapiro.test(variables_to_test$stringency)

shapiro_results_2 <- data.frame(
  Variable = c("cases_per_million", "deaths_per_million", "stringency"),
  W_Value = c(shapiro_test_cases_per_million$statistic, shapiro_test_deaths_per_million$statistic, shapiro_test_stringency$statistic),
  P_Value = c(shapiro_test_cases_per_million$p.value, shapiro_test_deaths_per_million$p.value, shapiro_test_stringency$p.value)
)

print(shapiro_results_2)
```

The value of W are close to zero (W = 0.2, W=0.2 and W=0.4) for the Covid-19 variables, this suggests that the data diverge from a normal distribution.

```{r echo = FALSE, message = FALSE, warning=FALSE}
variables_to_test <- data_question3_3[, c("ongoing", "sum_deaths", "pop_affected", "area_affected", "maxintensity")]

shapiro_test_ongoing <- shapiro.test(variables_to_test$ongoing)
shapiro_test_sum_deaths <- shapiro.test(variables_to_test$sum_deaths)
shapiro_test_pop_affected <- shapiro.test(variables_to_test$pop_affected)
shapiro_test_area_affected <- shapiro.test(variables_to_test$area_affected)
shapiro_test_maxintensity <- shapiro.test(variables_to_test$maxintensity)

shapiro_results_3 <- data.frame(
  Variable = c("ongoing", "sum_deaths", "pop_affected", "area_affected", "maxintensity"),
  W_Value = c(shapiro_test_ongoing$statistic, shapiro_test_sum_deaths$statistic, shapiro_test_pop_affected$statistic, shapiro_test_area_affected$statistic, shapiro_test_maxintensity$statistic),
  P_Value = c(shapiro_test_ongoing$p.value, shapiro_test_sum_deaths$p.value, shapiro_test_pop_affected$p.value, shapiro_test_area_affected$p.value, shapiro_test_maxintensity$p.value)
)

print(shapiro_results_3)
```

The value of W are close to zero (W = 0.433, W= 0.137, W= 0.327, W= 0.288 and W=0.453) for the conflicts variables, this suggests that the data diverge from a normal distribution.

In order to have an overview of the relationship between the different events variables and the SDG overall score, we make several graphs containing the Pearson correlation coefficient between the variable, the scatter plots describing the relationship between the variables, as well as the distribution of each variable.

```{r, echo = TRUE, message = FALSE, warning=FALSE}

# Function to create the lower triangle of the correlation matrix
lower.panel <-
  function(x, y, ...){
    points(x,
           y,
           pch = 20,
           col = Fix_color,
           cex = 0.2)}

# Function to create the histogram of the plot
panel.hist <-
  function(x, ...){
    usr <- par("usr"); on.exit(par(usr))
    par(usr = c(usr[1:2], 0, 1.5) )
    h <- hist(x, plot = FALSE)
    breaks <- h$breaks; nB <- length(breaks)
    y <- h$counts; y <- y/max(y)
    rect(breaks[-nB], 0, breaks[-1], y, col = Fix_color, ...)}
 
# panel.cor_stars function with stars alongside correlation coefficients
panel.cor_stars <-
  function(x, y, digits = 2, prefix = "", cex.cor, ...) {
   usr <- par("usr"); on.exit(par(usr))
   par(usr = c(0, 1, 0, 1))
   r <- cor(x, y)
   p_value <- cor.test (x,y)$p.value
   
   if (p_value < 0.001){
     stars <- "***"}
   else if (p_value < 0.01) {
     stars <- "**"}
   else if (p_value < 0.05) {
     stars <- "*"} else {
       stars <- ""}
   txt <-
     paste0(format(c(r, 0.123456789),
                   digits = digits)[1],
            " ",
            stars)
   
   if(missing(cex.cor)) cex.cor <- 0.5/strwidth(txt)
   text(0.5,
        0.5,
        txt,
        cex = cex.cor)}
```

```{r, echo = TRUE, message = FALSE, warning=FALSE}
#### Correlation table and distribution of Disaster variables ####

pairs(data_question3_1[, c("overallscore",
                           "total_affected",
                           "total_deaths")],
      upper.panel = panel.cor_stars,
      diag.panel = panel.hist,
      lower.panel = lower.panel,
      main = "Correlation table and distribution of Disaster variables")
```

Meaning of the stars: \*\*\* : p_value \< 0.001; \*\* : p_value \< 0.01; \*: p_value \<0.05; no star if p_value is higher.

The different variables used to materialize the impact of climate disasters do not seem to have important influence on the overall score. Indeed, the overallscore and total_affected have a correlation coefficient that suggests a very weak negative linear relationship between this variables and which is not statistically significant (p â‰¥ 0.05), and the overallscore and total_deaths have a correlation that also indicates a weak negative linear relationship that is statistically significant at p \< 0.05. But we will further explore for the different SDGs, since we believe that such disasters have a specific influence on some SDGs.

```{r, echo = TRUE, message = FALSE, warning=FALSE}
#### Correlation table and distribution of COVID variables ####

pairs(data_question3_2[,c("overallscore",
                          "cases_per_million",
                          "deaths_per_million",
                          "stringency")],
      upper.panel = panel.cor_stars,
      diag.panel=panel.hist,
      lower.panel = lower.panel,
      main="Correlation table and distribution of COVID variables")
```

Meaning of the stars: \*\*\* : p_value \< 0.001; \*\* : p_value \< 0.01; \*: p_value \<0.05; no star if p_value is higher.

The different variables used to materialize the impact of COVID19 do not seem to have important influence on the overall score, we can see that Overallscore and cases_per_million/deaths_per_million/stringency have a correlation coefficient indicating a weak positive linear relationship that is highly statistically significant at p \< 0.001. But we will further explore for the different SDGs, since we believe that COVID19 had a specific influence on some SDGs, for instance "good health and well-being" or "decent work and economic growth".

Concerning the correlation effect between the COVID19 variables, we could have no surprises, Cases_per_million and deaths_per_million have a moderate to strong positive correlation suggesting a stronger relationship where an increase in the number of COVID-19 cases per million is associated with a substantial increase in the number of deaths per million. This indicates a significant correlation between case prevalence and mortality rate. Cases_per_million and stringency have a moderate positive correlation indicates that higher levels of cases per million are associated with slightly higher severity of health measures. This could mean that in regions where cases are more numerous, stricter sanitary measures can be put in place to control the spread of the virus. Finally, Deaths_per_million and stringency have a strong positive correlation indicating a robust relationship where higher mortality rates are associated with higher severity of sanitary measures. This suggest that in areas where deaths are higher, stricter sanitary measures are applied in an attempt to reduce the spread of the virus and mortality.

```{r, echo = TRUE, message = FALSE,warning = FALSE}
#### Correlation table and distribution of conflicts variables ####

pairs(data_question3_3[,c("overallscore",
                          "ongoing",
                          "sum_deaths",
                          "pop_affected",
                          "area_affected",
                          "maxintensity")],
      upper.panel = panel.cor_stars,
      diag.panel=panel.hist,
      lower.panel = lower.panel,
      main="Correlation table and distribution of conflicts variables")
```

Meaning of the stars: \*\*\* : p_value \< 0.001; \*\* : p_value \< 0.01; \*: p_value \<0.05; no star if p_value is higher.

Negative values (ranging from -0.17 to -0.28) with three stars (\*\*\*) indicate a strong and statistically significant negative correlation between the overall index (Overallscore) and the various conflict-related variables (Ongoing, sum_deaths, pop_affected, area_affected, maxintensity). A strong negative correlation means that an increase in the Overallscore is associated with a decrease in the values of the other variables. But we have to take into account that correlation does not necessarily imply direct causation.

To explore our data on events such as disasters, covid-19 and conflicts we have to first see which regions are the most touched by these. To do so, we made time-series analysis on this three events each time depending on different variables.

```{r, echo = TRUE, message = FALSE, warning = FALSE, out.height="100%", out.width="100%"}
#### Date format conversion ####

# Converted 'year' column to date format
Q3.1$year <- as.numeric(format(as.Date(as.character(Q3.1$year),
                                       format = "%Y"), "%Y"))
Q3.2$year <- as.numeric(format(as.Date(as.character(Q3.2$year),
                                       format = "%Y"), "%Y"))
Q3.3$year <- as.numeric(format(as.Date(as.character(Q3.3$year),
                                       format = "%Y"), "%Y"))
```

These is our time-analysis concerning climatic disasters with total affected per region and with total deaths per region.

We can see that the regions the most affected by the climate disasters are East Asia, North America and South Asia. We will concentrate more in this regions and that the regions the most affected by the climate disasters are East Asia, Latin America & the Caribbean and South Asia.

```{r, echo = TRUE, message = FALSE, warning = FALSE, fig.height = 2.3}
#### Trend of Climatic Disasters Variables Over Time graph ####

library(ggplot2)
library(plotly)

Q3.1[is.na(Q3.1)] <- 0

combined_ggplot <- ggplot() +
  geom_smooth(data = Q3.1, aes(x = year, y = total_affected, group = region), color = "#8dce3e",
              method = "loess", se = FALSE, span = 0.5, size = 0.5, vjust = 2) +
  geom_smooth(data = Q3.1, aes(x = year, y = total_deaths, group = region), color = "darkgreen",
              method = "loess", se = FALSE, span = 0.7, size = 0.6, vjust = 2) +
  facet_wrap(~ region, nrow = 5, scales = "fixed") +
  labs(x = "Year", y = "") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 25, size = 8, hjust = 1, vjust = -0.8),
        axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
        strip.text = element_text(size = 8),
        panel.spacing = unit(0.8, "lines"),
        plot.title = element_text(hjust = 0.5),
        legend.position = "none")

combined_plotly <- ggplotly(combined_ggplot, dynamicTicks = TRUE)

make_visibility_vector <- function(total_traces, position) {
  c(rep(position == 1, total_traces / 2),
    rep(position == 2, total_traces / 2))
}

combined_plotly <- combined_plotly %>%
  layout(
    title = "Trend of Total Affected and Deaths from Climatic Disasters Over Time",
    updatemenus = list(
      list(
        type = "buttons",
        direction = "down",
        showactive = TRUE,
        buttons = list(
          list(method = "restyle",
               args = list("visible", make_visibility_vector(length(combined_plotly$x$data), 1)),
               label = "Total Affected"),
          list(method = "restyle",
               args = list("visible", make_visibility_vector(length(combined_plotly$x$data), 2)),
               label = "Total Deaths")
        )
      )
    ),
    showlegend = FALSE
  )

combined_plotly
```

These is our time-analysis concerning the COVID-19 cases per million, the COVID-19 deaths per million and the COVID-19 stringency by region between end 2018 and 2022.

```{r, echo = TRUE, message = FALSE, warning = FALSE, fig.height = 2.3}
#### Trend of COVID-19 Variables Over Time graph ####

covid_filtered <- Q3.2[Q3.2$year >= 2018, ]

combined_ggplot <- ggplot() +
  geom_smooth(data = covid_filtered, aes(x = year, y = cases_per_million, group = region), 
              color = "lightblue", method = "loess", se = FALSE, span = 0.3, size = 0.6) +
  geom_smooth(data = covid_filtered, aes(x = year, y = deaths_per_million, group = region), color =
                "#20908c",method = "loess", se = FALSE, span = 0.3, size = 0.6, vjust = 2) +
  geom_smooth(data = covid_filtered, aes(x = year, y = stringency, group = region), color =
                "darkblue", method = "loess", se = FALSE, span = 0.3, size = 0.6, vjust = 2) +
  facet_wrap(~ region, nrow = 5) +
  labs(x = "Year", y = "") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 25, hjust = 1),
        axis.text.y = element_text(hjust = 1),
        strip.text = element_text(size = 8),
        panel.spacing = unit(0.8, "lines"),
        plot.title = element_text(hjust = 0.5),
        legend.position = "none")

combined_plotly <- ggplotly(combined_ggplot, dynamicTicks = TRUE)

make_visibility_vector <- function(total_traces, position) {
  c(rep(position == 1, total_traces / 3),
    rep(position == 2, total_traces / 3),
    rep(position == 3, total_traces / 3))
}

combined_plotly <- combined_plotly %>%
  layout(
    title = "Trend of COVID-19 Over Time",
    updatemenus = list(
      list(
        type = "buttons",
        direction = "down",
        showactive = TRUE,
        buttons = list(
          list(method = "restyle",
               args = list("visible", make_visibility_vector(length(combined_plotly$x$data), 1)),
               label = "Cases per Million"),
          list(method = "restyle",
               args = list("visible", make_visibility_vector(length(combined_plotly$x$data), 2)),
               label = "Deaths per Million"),
          list(method = "restyle",
               args = list("visible", make_visibility_vector(length(combined_plotly$x$data), 3)),
               label = "Stringency")
        )
      )
    ),
    showlegend = FALSE
  )
combined_plotly
```
These is our time-analysis concerning conflicts deaths, conflicts affected population and maxintensity conflicts per region between 2000 and 2016

We can see that the regions the most affected by the deaths are : Middle east and north Africa, Sub-Saharan Africa, South Asia, then very less America & the Caribbean and Eastern Europe. The regions the most affected by the affected population are : Middle east and north Africa, Sub-Saharan Africa, South Asia, Latin America & the Caribbean and Caucasus and Central Asia. Finally, the regions having a maxintensity in conflicts are : Caucasus and Central Asia, Eastern Europe, Middle east and north Africa, Sub-Saharan Africa, North America, South Asia, East Asia just at one precise moment, Latin America & the Caribbean less.

```{r, echo = TRUE, message = FALSE, warning = FALSE, fig.height = 2.3}
#### Trend of Conflicts Variables Over Time graph ####

conflicts_filtered <- Q3.3[Q3.3$year >= 2000 & Q3.3$year <= 2016, ]

combined_ggplot <- ggplot() +
  geom_smooth(data = conflicts_filtered, aes(x = year, y = sum_deaths, group = region), color =
                "darkred", method = "loess", se = FALSE, span = 0.3, size = 0.6, vjust = 3) +
  geom_smooth(data = conflicts_filtered, aes(x = year, y = pop_affected, group = region), color =
                "red",method = "loess", se = FALSE, span = 0.3, size = 0.6, vjust = 3) +
  geom_smooth(data = conflicts_filtered, aes(x = year, y = maxintensity, group = region), color =
                "#e34e64", method = "loess", se = FALSE, span = 0.3, size = 0.6, vjust = 3) +
  facet_wrap(~ region, nrow = 5) +
  labs(x = "Year", y = "") + 
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 25, hjust = 1),
        axis.text.y = element_text(hjust = 1),
        strip.text = element_text(size = 8),
        panel.spacing = unit(0.8, "lines"),
        plot.title = element_text(hjust = 0.5),
        legend.position = "none")

combined_plotly <- ggplotly(combined_ggplot, dynamicTicks = TRUE)

make_visibility_vector <- function(total_traces, position) {
  c(rep(position == 1, total_traces / 3),
    rep(position == 2, total_traces / 3),
    rep(position == 3, total_traces / 3))
}

combined_plotly <- combined_plotly %>%
  layout(
    title = "Trend of Conflicts Over Time",
    updatemenus = list(
      list(
        type = "buttons",
        direction = "down",
        showactive = TRUE,
        buttons = list(
          list(method = "restyle",
               args = list("visible", make_visibility_vector(length(combined_plotly$x$data), 1)),
               label = "Deaths by Conflicts"),
          list(method = "restyle",
               args = list("visible", make_visibility_vector(length(combined_plotly$x$data), 2)),
               label = "Population Affected"),
          list(method = "restyle",
               args = list("visible", make_visibility_vector(length(combined_plotly$x$data), 3)),
               label = "Maxintensity")
        )
      )
    ),
    showlegend = FALSE
  )
combined_plotly
```
Now that we could visualize which regions are the most impacted by these three events we can do correlations analysis per region to see if this events have indeed an impact on the evolution of SDG goals.

### Focus on the correlation between the SDG scores and the different events.

Here you can see an extract of: 
- Our correlation map between the climate disasters and the SDG goals in South and East Asia and North America as it was the regions that where the most impacted. We conclude that climate disasters do not really have a big impact on SDG scores per region. 
- Our correlation map between the COVID-19 and the SDG goals only during COVID-19 time. We have the same conclusions, it is still not significant, and that's surprising. 
- Our correlation map between the conflicts deaths and the SDG goals in Middle East & North Africa, Sub-Saharan Africa, South Asia, Latin America & the Caribbean as it was the regions that where the most impacted. 
- Our correlation between conflicts affected population and the SDG goals only for the Middle East & North Africa, Sub-Saharan Africa, South Asia, Latin America & the Caribbean and Caucasus & Central Asia. 
- Our correlation between the regions having a maxintensity in conflicts and the SDG goals only for Caucasus & Central Asia, Eastern Europe, Middle east & north Africa, Sub-Saharan Africa, North America, South Asia, East Asia, Latin America & the Caribbean.

```{r, echo = TRUE, message = FALSE, warning = FALSE, fig.height = 2.5}
#### Correlation between the climate disasters and the SDG goals in South and East Asia and North America heatmap ####

disaster_data <-
  Q3.1[Q3.1$region %in% c("South Asia", "East Asia", "North America"), ]
relevant_columns <-
  c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8",
    "goal9", "goal10", "goal11", "goal12", "goal13", "goal15", "goal16",
    "total_affected", "total_deaths")
subset_data <- disaster_data[, relevant_columns]

correlation_matrix_subset <-
  cor(subset_data[, c("total_affected", "total_deaths")],
      subset_data,
      method = "spearman")

cor_melted <- reshape2::melt(correlation_matrix_subset)
names(cor_melted) <- c("Variable2", "Variable1", "Correlation")

ggplot(data = cor_melted,
       aes(Variable1,
           Variable2,
           fill = Correlation)) +
  geom_tile(width = 1.05,
            height = 1.05) +
  scale_fill_viridis_c(name = "Spearman\nCorrelation",
                       begin = 0,
                       limit = c(-1, 1)) +
  theme_minimal() +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
         plot.title = element_text(size = 11, margin = margin(b = 20), hjust = 0.5,
                                   vjust = 3.5, lineheight = 1),
                  legend.title = element_text(size = 9)) +
  coord_fixed() +
  labs(x = '',
       y = '',
       title = 'Correlation between the climate disasters and the SDG goals\nin South and East Asia and North America')


#### Correlation between COVID and the SDG goals heatmap ####

covid_filtered <- Q3.2
relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6",
                      "goal7", "goal8", "goal9", "goal10", "goal11", "goal12",
                      "goal13", "goal15", "goal16", "stringency",
                      "cases_per_million", "deaths_per_million")
subset_data <- covid_filtered[, relevant_columns]

correlation_matrix_Covid <-
  cor(subset_data,
      subset_data[, c("stringency",
                      "cases_per_million",
                      "deaths_per_million")],
      method = "spearman")

cor_melted <- as.data.frame(as.table(correlation_matrix_Covid))
names(cor_melted) <- c("Variable1", "Variable2", "Correlation")

ggplot(data = cor_melted,
       aes(Variable1,
           Variable2,
           fill = Correlation)) +
  geom_tile(height = 1.05,
            width = 1.05) +
  scale_fill_viridis_c(name = "Spearman\nCorrelation",
                       begin = 0,
                       limit = c(-1, 1)) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
        axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
        plot.title = element_text(size = 11, margin = margin(b = 20),
                                  hjust = 0.5,
                                  vjust = 3,5,
                                  lineheight = 1),
        legend.title = element_text(size = 9)) +
  coord_fixed() +
  labs(x = '',
       y = '',
       title = 'Correlation between COVID and the SDG goals')


#### Correlation between Conflicts Deaths and the SDG goals heatmap ####

conflicts_filtered <-
  Q3.3[Q3.3$region %in% c("Middle East & North Africa", "Sub-Saharan Africa",
                          "South Asia", "Latin America & the Caribbean"), ]

relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6",
                      "goal7", "goal8", "goal9", "goal10", "goal11", "goal12",
                      "goal13", "goal15", "goal16", "sum_deaths")

subset_data <- conflicts_filtered[, relevant_columns]

correlation_matrix_Conflicts_Deaths <-
  cor(subset_data,
      subset_data[, c("sum_deaths")],
      method = "spearman")

cor_melted <- as.data.frame(as.table(correlation_matrix_Conflicts_Deaths))
names(cor_melted) <- c("Variable1", "Variable2", "Correlation")

ggplot(data = cor_melted,
       aes(Variable1,
           Variable2,
           fill = Correlation)) +
  geom_tile(width = 1.05,
            height = 1.05) +
  scale_fill_viridis_c(name = "Spearman\nCorrelation",
                       begin = 0,
                       limit = c(-1, 1)) +
  theme_minimal() +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
         plot.title = element_text(size = 11, margin = margin(b = 20), hjust = 0.5, 
                                   vjust = 6, lineheight = 2),
                  legend.title = element_text(size = 9)) +
  coord_fixed(ratio = 1) +
  labs(x = '',
       y = 'Deaths',
       title = 'Correlation between Conflicts Deaths and the SDG goals')


#### Correlation between Conflicts Affected Population and the SDG goals ####

conflicts_filtered <-
  Q3.3[Q3.3$region %in% c("Middle East & North Africa", "Sub-Saharan Africa",
                          "South Asia", "Latin America & the Caribbean",
                          "Caucasus & Central Asia"), ]

relevant_columns <-
  c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8",
    "goal9", "goal10", "goal11", "goal12", "goal13", "goal15",
    "goal16", "pop_affected")

subset_data <- conflicts_filtered[, relevant_columns]

correlation_matrix_Conflicts_Pop_Aff <-
  cor(subset_data,
      subset_data[, c("pop_affected")],
      method = "spearman")

cor_melted <- as.data.frame(as.table(correlation_matrix_Conflicts_Pop_Aff))
names(cor_melted) <- c("Variable1", "Variable2", "Correlation")

ggplot(data = cor_melted,
       aes(Variable1,
           Variable2,
           fill = Correlation)) +
  geom_tile(width = 1.05,
            height = 1.05) +
  scale_fill_viridis_c(name = "Spearman\nCorrelation",
                       begin = 0,
                       limit = c(-1, 1)) +
  theme_minimal() +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 1, size = 8, hjust = 1),
         plot.title = element_text(size = 11, margin = margin(b = 20),
                                   hjust = 0.5, vjust = 6, lineheight = 2),
                  legend.title = element_text(size = 9)) +
coord_fixed(ratio = 1) +
  labs(x = '',
       y = 'Affected Population',
       title = 'Correlation between Conflicts Affected Population and the SDG goals')


#### Correlation between Maxintensity in Conflicts and the SDG goals ####

conflicts_filtered <-
  Q3.3[Q3.3$region %in% c("Middle East & North Africa", "Sub-Saharan Africa",
                          "South Asia", "Latin America & the Caribbean",
                          "Caucasus & Central Asia", "Eastern Europe",
                          "North America", "East Asia"), ]

relevant_columns <-
  c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8",
    "goal9", "goal10", "goal11", "goal12", "goal13", "goal15",
    "goal16", "maxintensity")

subset_data <- conflicts_filtered[, relevant_columns]

correlation_matrix_Conflicts_Maxintensity <-
  cor(subset_data,
      subset_data[, c("maxintensity")],
      method = "spearman")

cor_melted <- as.data.frame(as.table(correlation_matrix_Conflicts_Maxintensity))
names(cor_melted) <- c("Variable1", "Variable2", "Correlation")

ggplot(data = cor_melted,
       aes(Variable1,
           Variable2,
           fill = Correlation)) +
  geom_tile(width = 1.05,
            height = 1.05) +
  scale_fill_viridis_c(name = "Spearman\nCorrelation",
                       begin = 0,
                       limit = c(-1, 1)) +
  theme_minimal() +
  theme( axis.text.x = element_text(angle = 45, size = 8, hjust = 1),
         axis.text.y = element_text(vjust = 0, size = 8, hjust = 1),
         plot.title = element_text(size = 11, margin = margin(b = 20),
                                   hjust = 0.5, vjust = 6, lineheight = 2),
         legend.title = element_text(size = 9)) +
  coord_fixed(ratio = 1) +
  labs(x = '',
       y = 'Maxintensity',
       title = 'Correlation between Maxintensity in Conflicts and the SDG goals')
```

After looking at almost the same results, we asked ourselves if the fact that we do not see any correlations is because the consequences of this disasters arrive later on, so we decided to remake the same correlations with 1 year gap.

### Correlations for each event with one year gap

Here you can see for example our correlation map between the climate disasters and the SDG goals in South and East Asia and North America with one year gap.

```{r, echo = TRUE, message = FALSE, warning=FALSE, fig.height = 2.5}
#### Correlation between the climate disasters and the SDG goals in South and East Asia with 1 year gap ####

disaster_data <-
  Q3.1[Q3.1$region %in% c("South Asia", "East Asia", " North America"), ]

relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6",
                      "goal7", "goal8", "goal9", "goal10", "goal11", "goal12",
                      "goal13", "goal15", "goal16", "total_affected",
                      "total_deaths")

subset_data <- disaster_data[, relevant_columns]

lagged_subset_data <- subset_data %>%
  mutate(
    lagged_total_affected = lag(total_affected, default = NA),
    lagged_total_deaths = lag(total_deaths, default = NA)
  )

correlation_matrix_lagged <-
  cor(lagged_subset_data[, c("lagged_total_affected",
                             "lagged_total_deaths")],
      subset_data,
      method = "spearman")

cor_melted_lagged <- reshape2::melt(correlation_matrix_lagged)
names(cor_melted_lagged) <- c("Variable2", "Variable1", "Correlation")

ggplot(data = cor_melted_lagged,
       aes(Variable1,
           Variable2,
           fill = Correlation)) +
  geom_tile() +
  scale_fill_viridis_c(name = "Spearman\nCorrelation",
                       begin = 0,
                       limit = c(-1, 1)) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, size = 7, hjust = 1),
        axis.text.y = element_text(vjust = 1, size = 7, hjust = 1),
        legend.title = element_text(size = 6),
        plot.title = element_text(hjust = 0.5,
                                  size = 11,
                                  margin = margin(b = 15)),
        legend.key.size = unit(0.4, "cm"),
        legend.text = element_text(size = 6)) +
  coord_fixed() +
  labs(x = '',
       y = '',
       title = 'Correlation between the climate disasters \nand the SDG goals in South and East Asia with 1 year gap')
```

Even with a year gap it doesn't seem that climate disaster with such consequences as the population that gets affected and dies has an impact on the SDG scores as we would have though. But we are still a little bit optimistic and though why not look at the correlations with a gap year over the years.

### Interactive map of the correlation between the different events and the SDG goals with 1 year gap.

Here you can see an extrat of our interactive map of the correlation between the climate disasters and the SDG goals in South, East Asia and North America with 1 year gap. To better understand the results, if we select a specific year (e.g., 2020) in the app, the analysis will show correlations between the SDG scores for the selected year (e.g., 2020) and the disaster-related variables (total_affected and total_deaths) from the previous year (e.g., 2019). Unforthunatly, our shiny app is not supported in static R Markdown documents. For more details you can see our interactive maps in the "See Interactive" Folder, our document called "Interactive_Matrix_Plots.

![Extract of the correlation between the climate disasters and the SDG goals with 1 yeat gap](report/pictures question3/Climate_Dis_year_gap.png) 

" height="190px" width="520" style="display: block; margin: 60px auto 0;"/>


here you can see the correlation between COVID-19 and the SDG goals with 1 year gap. And strangely, instead of having a negative correlation, we expected that the more cases and deaths happened because of COVID-19, the scores of the SDG would be negatively affected,but with the gap year we can see that the scores of the Goal3, Goal6, Goal9 and Goal16 are quite positively impacted by the COVID-19.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = FALSE,fig.height = 2.5, out.width="100%"}

Q3.2 <- Q3.2 %>%
  arrange(code,year)%>%
  group_by(code)

library(ggplot2)
library(reshape2)
library(dplyr)

Q3.2 <- read.csv(here("scripts", "data", "data_question3_2.csv"))

relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6",
                      "goal7", "goal8", "goal9", "goal10", "goal11", "goal12",
                      "goal13", "goal15", "goal16", "stringency",
                      "cases_per_million", "deaths_per_million")

generate_lagged_correlation_plot_covid <- function(year, data, relevant_columns) {
  current_year_data <- data[data$year == year, relevant_columns]

  lagged_data <- current_year_data %>%
    mutate(
      lagged_stringency = lag(stringency, default = NA),
      lagged_cases_per_million = lag(cases_per_million, default = NA),
      lagged_deaths_per_million = lag(deaths_per_million, default = NA)
    ) %>%
    select(-stringency, -cases_per_million, -deaths_per_million)  # Exclude non-lagged variables

  correlation_matrix <- cor(lagged_data[, c("lagged_stringency", "lagged_cases_per_million", "lagged_deaths_per_million")],
                            lagged_data, method = "spearman")

  cor_melted <- melt(correlation_matrix)
  names(cor_melted) <- c("Variable1", "Variable2", "Correlation")

  p <- ggplot(cor_melted,
              aes(Variable2,
                  Variable1,
                  fill = Correlation)) +
    geom_tile() +
    scale_fill_viridis_c(name = "Spearman\nCorrelation",
                         limit = c(-1, 1)) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, size = 7, hjust = 1),
          axis.text.y = element_text(vjust = 1, size = 7),
          legend.title = element_text(size = 6),
          plot.title = element_text(hjust = 0.5, size = 11, margin = margin(b = 15)),
          legend.key.size = unit(0.4, "cm"),
          legend.text = element_text(size = 6)) +
    coord_fixed() +
    labs(x = '',
         y = '',
         title = paste('Lagged Correlation for COVID-19 in Year', year))
  return(p)}

plot_2020 <- generate_lagged_correlation_plot_covid(2020,
                                                    Q3.2,
                                                    relevant_columns)
plot_2021 <- generate_lagged_correlation_plot_covid(2021,
                                                    Q3.2,
                                                    relevant_columns)
plot_2022 <- generate_lagged_correlation_plot_covid(2022,
                                                    Q3.2,
                                                    relevant_columns)

plot_2020
plot_2021
plot_2022
```

Finally, here you can see an extract of our interactive map of the correlation between respectively for the 3 different variables of the Conflict and the SDG goals with 1 year gap. Once again, you can look for more details to our document containing our interactive correlation matrices.

<img src="Conflicts_Deaths_year_gap.png" height="190px" width="520" style="display: block; margin: 60px auto 0;"/>

Here's the extract of our interactive map of the correlation between the affected population in conflicts and the SDG goals with 1 year gap.

<img src="Conflicts_Affected_year_gap.png" height="190px" width="520" style="display: block; margin: 60px auto 0;"/>


Here's the extrant of our interactive map of the correlation between the Maxintensity in conflicts and the SDG goals with 1 year gap.

<img src="Conflicts_Maxintensity_year_gap.png" height="190px" width="520" style="display: block; margin: 60px auto 0;"/>


The results seems logic because if the SDG scores continue to go higher and the conflicts remains the same or finishes we get a negative correlation

Our last idea is to see the regressions between the SDG scores and the variables of each event that we thought interesting.

### Regressions between the SDG scores and the events variables.

Let's see the regressions for each score depending of each variable in the disasters dataset (total_affected and total_deaths)

```{r, echo = TRUE, message = FALSE, warning = FALSE, fig.height = 2,5, out.width="100%"}
library(plotly)
library(dplyr)
library(ggplot2)

disaster_data <- Q3.1[Q3.1$region %in% c("South Asia", "East Asia", "North America"), ]

relevant_columns <- c("goal1", "goal2", "goal3", "goal4", "goal5", "goal6",
                      "goal7", "goal8", "goal9", "goal10", "goal11", "goal12",
                      "goal13", "goal15", "goal16", "total_affected",
                      "total_deaths")
subset_data <- disaster_data[, relevant_columns]

# Effectuer la rÃ©gression linÃ©aire et crÃ©er les graphiques
plots <- list()
for (goal in relevant_columns[1:15]) {
  # Pour total_affected
  p_affected <- ggplot(subset_data,
                       aes_string(x = "total_affected", y = goal)) +
    geom_point(size = 0.1) +
    geom_smooth(method = "lm",
                formula = y ~ x,
                se = FALSE,
                size = 0.5) +
    labs(x = "Total Affected",
         y = paste("Goal",
                   substr(goal, 5, 6)))

  # Pour total_deaths
  p_deaths <- ggplot(subset_data,
                     aes_string(x = "total_deaths",
                                y = goal)) +
    geom_point(size = 0.1) +
    geom_smooth(method = "lm",
                formula = y ~ x,
                se = FALSE,
                size = 0.5) +
    labs(x = "Total Deaths",
         y = paste("Goal",
                   substr(goal, 5, 6)))

  # Ajouter les deux graphiques Ã  la liste
  plots[[goal]] <- list(ggplotly(p_affected),
                        ggplotly(p_deaths))
}

# Afficher tous les graphiques
subplot_plots <- lapply(plots, function(plot_pair) subplot(plot_pair[[1]],
                                                           plot_pair[[2]],
                                                           nrows = 1,
                                                           margin = 0.05))
subplot(subplot_plots,
        nrows = length(subplot_plots),
        margin = 0.05)
```

Most relationships between the goals and the variables ('total_affected' and 'total_deaths') are not statistically significant (indicated by p-values \> 0.05). More specifically, in several models, the coefficients for 'total_affected' and 'total_deaths' are small, indicating weak or negligible relationships with the respective goals. Some models have marginally significant p-values (close to 0.05) but still lack statistical significance. Goals 7, 8, 10, 13, 14, and 15 exhibit statistically significant relationships with 'total_affected,' indicating small to moderate positive relationships. Goals 7 and 8 also show statistically significant relationships with 'total_deaths,' indicating moderate negative relationships.

These findings suggest that, in most cases, the relationships between the specified goals and Climate disasters variables (total affected and total deaths) are not statistically significant. However, some goals do indicate small to moderate associations with these variables.


Now, we have made the same conclusions for the COVID-19 and Conflicts events, you can have a nice representation of each regression plot if you look at our Interactive_Matrix_Plots documents containing shiny apps, yo that you can have a closer look and choose which goals interests you the most.("C:/DS-project/report/See Interactive/Interactive_Matrix_Plots.qmd")


Indeed, for all Goals, the predictor variables (stringency, number of cases per million and number of deaths per million) show statistically significant relationships. However, when assessed individually, these predictors explain only a marginal fraction of the variance of the respective objectives, with explanatory percentages ranging from around 0.141% to 6.99%. Adjusted R-squared values consistently indicate limited explanatory power for these relationships, implying the influence of other factors not accounted for in the variations observed for each objective. Relying solely on rigor, cases per million and deaths per million results in modest predictive capabilities for each objective.

For all Goals, the predictor variables (stringency, number of cases per million and number of deaths per million) show statistically significant relationships. However, when assessed individually, these predictors explain only a marginal fraction of the variance of the respective objectives, with explanatory percentages ranging from around 0.141% to 6.99%. Adjusted R-squared values consistently indicate limited explanatory power for these relationships, implying the influence of other factors not accounted for in the variations observed for each objective. Relying solely on rigor, cases per million and deaths per million results in modest predictive capabilities for each objective.

In summary, the statistical significance of stringency, cases per million and deaths per million in relation to each objective is clear. However, these predictive variables individually fail to explain the variations observed, highlighting the need to explore additional variables or unexplored factors in order to significantly improve predictive ability for each respective objective.

Finally for the regressions for each SDG score depending of each variable in the Conflicts dataset (pop_affected and sum_deaths) we can say that all three predictors exhibited statistically significant relationships with the respective goals across the board. 'Maxintensity' generally demonstrated a relatively stronger association compared to 'Population Affected' and 'Deaths' in most analyses. But collectively, these predictors explained only a small to moderate portion of the variability observed in the different goals (adjusted R-squared ranging from approximately 1% to 9.48%). This suggests that there are other unaccounted factors not included in the analysis that significantly influence the outcomes of these goals.

To conclude, while 'Population Affected,' 'Deaths,' and 'Maxintensity' consistently showed significant associations with the various goals analyzed, their combined effect explained only a fraction of the variance observed in these goals. Therefore, there are likely additional crucial factors beyond these predictors that play substantial roles in influencing the outcomes of the respective goals.

All three predictors exhibited statistically significant relationships with the respective goals across the board. 'Maxintensity' generally demonstrated a relatively stronger association compared to 'Population Affected' and 'Deaths' in most analyses. But collectively, these predictors explained only a small to moderate portion of the variability observed in the different goals (adjusted R-squared ranging from approximately 1% to 9.48%). This suggests that there are other unaccounted factors not included in the analysis that significantly influence the outcomes of these goals. To conclude, while 'Population Affected,' 'Deaths,' and 'Maxintensity' consistently showed significant associations with the various goals analyzed, their combined effect explained only a fraction of the variance observed in these goals. Therefore, there are likely additional crucial factors beyond these predictors that play substantial roles in influencing the outcomes of the respective goals.
