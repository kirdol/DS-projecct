# EDA and Analysis of the data

## Focus on the influence of the factors over the SDG scores

  **Focus on factors**: What can explain the state of the countries regarding their sustainable development?

We will analyse different factors: scores from the Human Freedom Index, GDP per capita, military expenditures in percentage of GDP, unemployment rate, internet usage. You will find more precise informations about our chosen factors in data description section.


```{r setup, echo = FALSE, message = FALSE, warning=FALSE}
#### Initial setup ####

source(here::here("scripts/Clean/setup.R"))
source(here::here("scripts/EDA/EDA_4_SDG.R"))
data_question1 <- read.csv(here("scripts","data","data_question1.csv"))
data_question24 <- read.csv(here("scripts", "data", "data_question24.csv"))
data_question2 <- read.csv(here("scripts", "data", "data_question24.csv"))
data_question3_1 <- read.csv(here("scripts", "data", "data_question3_1.csv"))
data_question3_2 <- read.csv(here("scripts", "data", "data_question3_2.csv"))
data_question3_3 <- read.csv(here("scripts", "data", "data_question3_3.csv"))
Q3.1 <- read.csv(here("scripts", "data", "data_question3_1.csv"))
Q3.2 <- read.csv(here("scripts", "data", "data_question3_2.csv"))
Q3.3 <- read.csv(here("scripts", "data", "data_question3_3.csv"))
data <- read.csv(here("scripts", "data", "all_Merge.csv"))
Correlation_overall <- data_question1 %>%
      dplyr::select(population:ef_regulation)
```

### EDA: general exploratory data analysis

For this first part of our EDA, let's try to check first the distribution of the SDG. The following variables are ordered by decreasing order of the average of the scores. The color represent the density of the observations: more the color is bright, more the density is high.

```{r, echo = TRUE, message = FALSE, warning=FALSE}
#### Reshape then plot the distribution of the SDG scores ####

# Reshape the data from wide to long format for our SDG and our human freedom index scores
long_df_goal_distribution <- pivot_longer(Correlation_overall,
                                          cols = starts_with("goal"),
                                          names_to = "Goal",
                                          values_to = "Value")

long_df_goal_distribution$Goal <- with(long_df_goal_distribution,
                                       reorder(Goal, Value, FUN = mean))

long_df_hfi_distribution <- pivot_longer(Correlation_overall,
                                         cols = pf_law:ef_regulation,
                                         names_to = "Category",
                                         values_to = "Value")

long_df_hfi_distribution$Goal <- with(long_df_hfi_distribution,
                                      reorder(Category, Value, FUN = mean))

# Plot the distribution of the SDG scores
ggplot(long_df_goal_distribution,
       aes(x = Value,
           y = Goal,
           fill = ..density..)) +
  geom_density_ridges_gradient(scale = 3,
                               size = 0.3,
                               rel_min_height = 0.01) +
  scale_fill_viridis_c(option = "D") +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(x = 'Score',
       y = 'Goals',
       title = 'SDG Scores Distribution')
```

As we can see, most of our goals have a left-skewed distribution, which shows that for most of the country concerned implemented good strategies for targeting the goals objectives. Some distributions have a longer distribution than other, showing the variance of the scores between the countries, due to various reasons such as the inequality of the amount of money available to be invested for implementing solutions. In addition, we notice that the only right-skewed distribution is concerning the observations of the goal 9, which is promoting infrastructures, innovation and inclusive and sustainable industrialization.Therefore, it seems like many countries are encountering difficulties for implementing good solutions concerning this goal. Furthermore, we notice that the goal1 has the highest density, which means that in general the countries tend to have good scores. 

Now let's focus on the distribution of the Human Freedom Index scores. Same ordering selection and color method as the previous distribution plot. 

```{r, echo = TRUE, message = FALSE, warning=FALSE}
#### Human Freedom Index Scores Distribution plot ####

ggplot(long_df_hfi_distribution, aes(x = Value,
                                     y = Category,
                                     fill = ..density..)) +
  geom_density_ridges_gradient(scale = 3,
                               size = 0.3,
                               rel_min_height = 0.01) +
  scale_fill_viridis_c(name = "Density",
                       option = "D") +
  theme(plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot") + 
  labs(x = 'Scores',
       title = 'Human Freedom Index Scores Distribution')
```

The distribution of the Human Freedom Index Score follows the same trend as the SDG goal one. Most of the scores are left-skewed, which means that countries tend to have in general good scores. The only scores not following the trend are pf_law and ef_legal, which tend to have in average lower scores. There could be multipl reasons why it is the case. One could be , i.e., legal system for civilians and countries is evolving slowly because it has a lot of implications over the situation within a country/between countries and because of the divergence of opinions. Therefore, investing money for raising these variable could be more difficult than raising the scores of other goals. Furthermore, the highest density is contained in the factor pf_movement, which mean that in general the countries tend to have good scores. 

Now let's consider the remaining variables of the dataset dedicated to answering the influence of factors over our SDG scores. 

```{r, echo = TRUE, message = FALSE, warning=FALSE}
#### Distribution of the remaining variables ####

# Unemployment rate plot
unempl_d <- ggplot(Correlation_overall,
                   aes(x = unemployment.rate,
                       y = 1, # set y = 1 to visualize the distribution of a single variable without categorizing it by another variable.
                       fill = ..density..)) +
  geom_density_ridges_gradient(scale = 3,
                               size = 0.3,
                               rel_min_height = 0.01) +
  scale_fill_viridis_c(name = "Density",
                       option = "D") +
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 10),
        plot.title.position = "plot") + 
  labs(y = 'Density',
       x = 'Percentage',
       title = 'Distribution of Unemployment Rate')

# GDP per capita plot
gdp_d <- ggplot(Correlation_overall,
                aes(x = GDPpercapita,
                    y = 1,
                    fill = ..density..)) +
  geom_density_ridges_gradient(scale = 3,
                               size = 0.3,
                               rel_min_height = 0.01) +
  scale_fill_viridis_c(name = "Density",
                       option = "D") +
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 10),
        plot.title.position = "plot") + 
  labs(y = 'Density',
       x = 'Values',
       title = 'Distribution of GDP per Capita')

# Military expenditure plot
milit_d <- ggplot(Correlation_overall,
                  aes(x = MilitaryExpenditurePercentGDP,
                      y = 1,
                      fill = ..density..)) +
  geom_density_ridges_gradient(scale = 3,
                               size = 0.3,
                               rel_min_height = 0.01) +
  scale_fill_viridis_c(name = "Density",
                       option = "D") +
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 10), # Center the title
        plot.title.position = "plot") + 
  labs(y = 'Density',
       x = 'Percentage',
       title = 'Distribution of Military Expenditure (% of GDP)')

# Internet usage plot
internet_d <- ggplot(Correlation_overall,
                     aes(x = internet_usage,
                         y = 1,
                         fill = ..density..)) +
  geom_density_ridges_gradient(scale = 3,
                               size = 0.3,
                               rel_min_height = 0.01) +
  scale_fill_viridis_c(name = "Density",
                       option = "D") + 
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 10),
        plot.title.position = "plot") + 
  labs(y = 'Density',
       x = 'Values',
       title = 'Distribution of Internet Usage')

# Arrange the plots in a 2x2 grid
grid.arrange(unempl_d,
             gdp_d,
             milit_d,
             internet_d,
             ncol = 2,
             nrow = 2)
```

Due to density calculations and normalization, some densities exceed 1 because they are not probabilities themselves but rather rates at which probability is accumulating at each point.

All these variables have a right-skewed distribution. Taking the mode into account, most of the concerned countries in our data have an unemployment rate between 2 to 7%, a distribution of GDP per capita between $1'000-\$10'000, a distribution of military expenditure in percentage of the GDP 10% to 20% and finally a internet usage between 0 and 10%.

These variables shows us even more the inequalities between the countries in our dataset. While most of our countries have low internet usage or/and a low GDP per capita, few countries are more developed, thus probably more wealthy, and therefore have better chances of getting higher scores.

Now, let's display the distribution of the different SDG achievement scores per continent, using violin boxplots to have an overview of the mods, the range and the outliers of our observations. To do so, we used the median of each goal per continent.

```{r, echo = TRUE, message = FALSE, warning=FALSE, out.height="100%", out.width="100%"}
#### Prepare then plot the Distribution of the SDG by continent ####

# Preparing Africa data
data_Q1_Africa <- data_question1 %>%
  filter(data_question1$continent == 'Africa') %>%
  dplyr::select(continent, overallscore, goal1, goal2, goal3, goal4, goal5,
                goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13,
                goal15, goal16, goal17)

data_Q1_Africa_long <- melt(data_Q1_Africa)

#median for Africa
medians_AF <- data_Q1_Africa_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))
data_Q1_Africa_long <- data_Q1_Africa_long %>%
                  left_join(medians_AF, by = "variable")


# Preparing America data
data_Q1_Americas <- data_question1 %>%
  filter(data_question1$continent == 'Americas') %>%
  dplyr::select(continent, overallscore, goal1, goal2, goal3, goal4, goal5,
                goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13,
                goal15, goal16, goal17)

data_Q1_Americas_long <- melt(data_Q1_Americas)

#median for Americas
medians_AM <- data_Q1_Americas_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))
data_Q1_Americas_long <- data_Q1_Americas_long %>%
                  left_join(medians_AM, by = "variable")


# Preparing Asia data
data_Q1_Asia <- data_question1 %>%
  filter(data_question1$continent == 'Asia') %>%#filtering Asia as continent
  dplyr::select(continent, overallscore, goal1, goal2, goal3, goal4, goal5,
                goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13,
                goal15, goal16, goal17)

data_Q1_Asia_long <- melt(data_Q1_Asia)

#median for Asia
medians_AS <- data_Q1_Asia_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))
data_Q1_Asia_long <- data_Q1_Asia_long %>%
                  left_join(medians_AS, by = "variable")


# Preparing Europe data
data_Q1_Europe <- data_question1 %>%
  filter(data_question1$continent == 'Europe') %>% #filtering Europe as continent
  dplyr::select(continent, overallscore, goal1, goal2, goal3, goal4, goal5,
                goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13,
                goal15, goal16, goal17)

data_Q1_Europe_long <- melt(data_Q1_Europe)

#median for Europa 
medians_EU <- data_Q1_Europe_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))
data_Q1_Europe_long <- data_Q1_Europe_long %>%
                  left_join(medians_EU, by = "variable")


# Preparing Oceania data
data_Q1_Oceania <- data_question1 %>%
  filter(data_question1$continent == 'Oceania') %>%
  dplyr::select(continent, overallscore, goal1, goal2, goal3, goal4, goal5,
                goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13,
                goal15, goal16, goal17)

data_Q1_Oceania_long <- melt(data_Q1_Oceania)

#median for Oceania
medians_OC <- data_Q1_Oceania_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))
data_Q1_Oceania_long <- data_Q1_Oceania_long %>%
                  left_join(medians_OC, by = "variable")


# Merge all medians
medians_all <- rbind(data_Q1_Oceania_long,
                     data_Q1_Americas_long,data_Q1_Africa_long,
                     data_Q1_Asia_long,data_Q1_Europe_long)

# Assing a color to each median group
medians_all$color <-
  ifelse(medians_all$median_value > 75, "1",
         ifelse(medians_all$median_value < 25, "3", '2'))

bandwidth_nrd <- bw.nrd(medians_all$value)


# Plot the SDG Distribution by Continent
ggplot(medians_all,
       aes(x = variable,
           y = value,
           fill = color)) +
  geom_violin(trim = FALSE,
              bw = bandwidth_nrd) +
  scale_fill_viridis_d(name = "",
                       direction = -1,
                       option = "D",
                       labels = c("High median",
                                  "Medium median",
                                  "Low median")) + 
  labs(title = "SDG Distribution by Continent",
       x = "Goals",
       y = "Scores",
       fill = "Score Category") +
  facet_grid(continent ~ .,
             scales = "free_y") +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot",
        axis.text.x = element_text(angle = 90,
                                   vjust = 0.5, hjust=1))
```

We notice that Europe is the continent with most of its goals having a median score superior to 75 (represented by the dark blue color. We notice that only two goals have a median score lower than 25, which is for goal 9 for Africa and goal 10 for America. As seen before, goal 9 is generally having lower scores than the other goals. That could mean that the access to technology and sustainable/resilient infrastructures/industrialization is harder in Africa, due to various reasons such as the economical situation of these countries, corruption,...

The goal 10 concerns the reduction of inequalities within and amongst countries. Therefore, we presume that the investments made in the Americas to implement solutions for getting better scores towards this goal is maybe less effective due to for instance culture difference with other continent, or simply less money spent for solving the issue. 

In addition, some distributions are quite dispersed, such as goal 13 in Oceania and goal 10 in Africa. That could show inequalities within countries or again less investment made to raise the scores by different countries of the same continent.

Now let's display the boxplots for the different variables of the Human Freedom Index.

```{r, echo = TRUE, message = FALSE, warning=FALSE, out.height="100%", out.width="100%"}
#### Prepare then plot the Distribution of the HFI by continent ####

# Preparing Africa data
data_Q1_Africa_HFI <- data_question1 %>%
  filter(data_question1$continent == 'Africa') %>%
  dplyr::select(continent, pf_law, pf_security, pf_movement, pf_religion,
                pf_assembly, pf_expression, pf_identity, ef_government,
                ef_legal, ef_money, ef_trade, ef_regulation)

data_Q1_Africa_HFI_long <- melt(data_Q1_Africa_HFI)

medians_AF_HFI <- data_Q1_Africa_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Africa_HFI_long <- data_Q1_Africa_HFI_long %>%
                  left_join(medians_AF_HFI, by = "variable")


# Preparing America data
data_Q1_Americas_HFI <- data_question1 %>%
  filter(data_question1$continent == 'Americas') %>%
  dplyr::select(continent, pf_law, pf_security, pf_movement, pf_religion,
                pf_assembly, pf_expression, pf_identity, ef_government,
                ef_legal, ef_money, ef_trade, ef_regulation)

data_Q1_Americas_HFI_long <- melt(data_Q1_Americas_HFI)

medians_AM_HFI <- data_Q1_Americas_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Americas_HFI_long <- data_Q1_Americas_HFI_long %>%
                  left_join(medians_AM_HFI, by = "variable")


# Preparing Asia data
data_Q1_Asia_HFI <- data_question1 %>%
  filter(data_question1$continent == 'Asia') %>%
  dplyr::select(continent, pf_law, pf_security, pf_movement, pf_religion,
                pf_assembly, pf_expression, pf_identity, ef_government,
                ef_legal, ef_money, ef_trade, ef_regulation)

data_Q1_Asia_HFI_long <- melt(data_Q1_Asia_HFI)

medians_AS_HFI <- data_Q1_Asia_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Asia_HFI_long <- data_Q1_Asia_HFI_long %>%
                  left_join(medians_AS_HFI, by = "variable")


# Preparing Europe data
data_Q1_Europe_HFI <- data_question1 %>%
  filter(data_question1$continent == 'Europe') %>%
  dplyr::select(continent, pf_law, pf_security, pf_movement, pf_religion,
                pf_assembly, pf_expression, pf_identity, ef_government,
                ef_legal, ef_money, ef_trade, ef_regulation)

data_Q1_Europe_HFI_long <- melt(data_Q1_Europe_HFI)

medians_EU_HFI <- data_Q1_Europe_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Europe_HFI_long <- data_Q1_Europe_HFI_long %>%
                  left_join(medians_EU_HFI, by = "variable")


# Preparing Oceania data
data_Q1_Oceania_HFI <- data_question1 %>%
  filter(data_question1$continent == 'Oceania') %>%
  dplyr::select(continent, pf_law, pf_security, pf_movement, pf_religion,
                pf_assembly, pf_expression, pf_identity, ef_government,
                ef_legal, ef_money, ef_trade, ef_regulation)

data_Q1_Oceania_HFI_long <- melt(data_Q1_Oceania_HFI)

medians_OC_HFI <- data_Q1_Oceania_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Oceania_HFI_long <- data_Q1_Oceania_HFI_long %>%
                  left_join(medians_OC_HFI, by = "variable")


# Merge all medians 
medians_all_HFI <- rbind(data_Q1_Oceania_HFI_long, 
                         data_Q1_Americas_HFI_long,
                         data_Q1_Africa_HFI_long,
                         data_Q1_Asia_HFI_long,
                         data_Q1_Europe_HFI_long)

# Assing a color to each median value
medians_all_HFI$color <- ifelse(medians_all_HFI$median_value > 7.5, "1", 
                        ifelse(medians_all_HFI$median_value < 2.5, "3", "2"))

bandwidth_nrd_HFI <- bw.nrd(medians_all_HFI$value)

# Plot the distribution of the HFI by continent
ggplot(medians_all_HFI,
       aes(x = variable,
           y = value,
           fill = color)) +
  geom_violin(trim = FALSE,
              bw = bandwidth_nrd_HFI) +
  scale_fill_viridis_d(name = "",
                       option = "D",
                       direction = -1,
                       labels = c(">7.5",
                                  "Between",
                                  "< 2.5")) +
  labs(title = "Human Freedom Index Scores Distribution by Continent",
       x = "Variables",
       y = "Scores",
       fill = "Score Category") +
  facet_grid(continent ~ .,
             scales = "free_y") +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
```

Here we can notice the same results, except that no score has a median below 25%. Again, Europe is the continent with most of its median scores superior to 75. 

For space reason because of the different scales, we have decided not to make violin boxplot per continent for the remaining variables. Nevertheless, their distribution can be seen in the general distribution seen prior to that.

Now, let's have a closer look to the general correlation between our variables. Using our cleaned dataset, we will use a correlation heatmap to help us vizualising the informations. Given that most of our variables are not normally distributed, we will use the Spearman method to calculate the correlation.

```{r, echo = TRUE, message = FALSE, warning=FALSE, fig.height = 2}
#### Correlations between variables Heatmap ####

# Selecting the variables to be used
Correlation_overall <-data_question1 %>%
      dplyr::select(population:ef_regulation)

# Correlation matrix calculation
cor_matrix_sper <-
  cor(Correlation_overall,
      method = "spearman",
      use = "everything")

# Wide to long
cor_melted <-
  melt(cor_matrix_sper)

# Adding a new column for hover text
cor_melted$hover_text <- paste("Variable 1: ",
                               cor_melted$Var1,
                               "\nVariable 2: ",
                               cor_melted$Var2,
                               "\nCorrelation between the variables: ",
                               round(cor_melted$value, 2))

# Plotting the heatmap
plotly_heatmap <- plot_ly(data = cor_melted,
                          x = ~Var1,
                          y = ~Var2,
                          type = "heatmap",
                          z = ~value,
                          text = ~hover_text,
                          hoverinfo = "text") %>%
  layout(title = list(text = 'Correlation Matrix Heatmap',
                      font = list(size = 17)),
         xaxis = list(title = '',
                      tickangle = -45),
         yaxis = list(title = '',
                      tickangle = 0,
                      tickfont = list(size = 7)),
         colorbar = list(title = 'Spearman\nCorrelation',
                         yanchor = "middle",
                         y = 0.5))

# Display the Plotly plot
plotly_heatmap %>%
  config(displayModeBar = FALSE)
```

By looking at our heatmap, we notice that most of our goals are strongely correlated together and that some variables amongst the Human Freedom Index scores too (strong correlation among personal freedom variables (pf), reflecting scores from the Human Freedom Index on movement, religion, assembly, and expression). This could be explained by the fact that some of these goals/scores share partially similar objectifs, which could mean that a raise in the score of one of these goals will raise positively the score of another/some other goals. In addition, we notice that goals 12 and 13 (respectively "responsible consumption & production" and "climate action", therefore climate oriented goals) are strongly negatively correlated with most of our variables. For the moment, as correlation doesn't imply causality, we cannot deduce anything from these informations. We will see more in detail the correlations between our goals and variables in the analysis part of the influence of the factors over the Sustainable Development Goals.

### Analysis: Influence of the factors over the SDG

In order to answer the first question of our work, let's start by zooming on the correlation matrix heatmap made in our EDA part. Here are the correlations between the SDG and all the other variables except the SDG.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
### Correlation Matrix Heatmap SDG/Other variables ###

# computing p-values of our interested variables
corr_matrix <- cor(data_question1[7:40], method = "spearman", use = "everything")
p_matrix2 <- matrix(nrow = ncol(data_question1[7:40]), ncol = ncol(data_question1[7:40]))
for (i in 1:ncol(data_question1[7:40])) {
  for (j in 1:ncol(data_question1[7:40])) {
    test_result <- cor.test(data_question1[7:40][, i], data_question1[7:40][, j])
    p_matrix2[i, j] <- test_result$p.value
  }
}

corr_matrix[which(p_matrix2 > p_value_threshold)] <- NA #only keeping significant pval alpha = 0.05

melted_corr_matrix_GVar <- melt(corr_matrix[19:34,1:18])

ggplot(melted_corr_matrix_GVar, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  geom_text(aes(label = ifelse(!is.na(value) & abs(value) > threshold_heatmap, sprintf("%.2f", value), '')),
            color = "black", size = 2) +
  scale_fill_viridis_c(name = "Spearman\nCorrelation",
                       na.value = "white",
                       direction = 1,
                       begin = 0.1,
                       end = 1) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        axis.text.y = element_text(angle = 45, hjust = 1),
        plot.title = element_text(hjust = 0.5), # Center the title
        plot.title.position = "plot") +
  labs(x = 'Variables', y = 'Goals',
       title = 'Correlations Heatmap between goals and our other variables')
```

For vizualization purpose, we have decided to only display the correlations bigger than `r threshold_heatmap` in absolute values. The uncolored parts are the non significant p-values.

Firstly, we can see that most of our correlations between our variables are significant. Also, GDP per capita, internet_usage, pf_law or ef_legal are strongly correlated with most of our SDG. This is mostly due to the large scope englobed in these variables. That makes them influence various sectors of our economies and thus, mostly impacting all our SDG goals. Therefore, we can think that these variables have a strong impact on the scores. Nevertheless, as correlation doesn't mean causality, we still cannot jump to conclusions.

As we can see, our goals 12 & 13 (responsible consumption & production and climate action) are negatively correlated with most of our variables, as is the economic freedom government variable to our SDG. Nevertheless, goals 12 & 13 and ef_government are positively correlated together.

Now let's zoom on the correlations between all our variables except the SDG:

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
melted_corr_matrix_Var <- melt(corr_matrix[19:34,19:34])
ggplot(melted_corr_matrix_Var, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  geom_text(aes(label = ifelse(!is.na(value) & abs(value) > threshold_heatmap, sprintf("%.2f", value), '')),
            color = "black", size = 1.7) +
  scale_fill_viridis_c(name = "Spearman\nCorrelation",
                       na.value = "white",
                       direction = 1,
                       begin = 0.1,
                       end = 1) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        axis.text.y = element_text(angle = 45, hjust = 1),
        plot.title = element_text(hjust = 0.5), # Center the title
        plot.title.position = "plot") +
  labs(x = 'Variables', y = 'Variables',
       title = 'Correlations Heatmap between other variables than SDG')
```

As noticed earlier, there is a strong correlation among personal freedom variables (pf), reflecting scores from the Human Freedom Index on movement, religion, assembly, and expression.

Again, we can see that GDP per capita, pf_law, ef_legal are highly correlated with some other variables. On another hand, we notice that pf_movement, pf_assembly, pf_expression are now also higly correlated with some of the other variables. In addition, we notice than the variables MilitaryExpenditurePercentGDP and ef_governement are negatively correlated with our other variables.

In order to have a look at the influence of our factors over our dependent variables, let's conduct a Principal Component Analysis.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE}
#### PCA and PCA Scree plot####

#Select our data and effectuate our PCA analysis
myPCA_s <- PCA(data_question1[,25:40], graph = FALSE)

#scree plot
fviz_eig(myPCA_s,
         addlabels = TRUE,
         linecolor = viridis(1,
                             option = "B",
                             begin = 0.5),
         barcolor = "black",
         barfill = viridis(10,
                           option = "D",
                           begin = 0,
                           end = 0.8)) +
  theme_minimal() + 
  ggtitle("                                          PCA - Scree plot")


summary(myPCA_s)
```

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE}
#### PCA Biplot ####

#Biplot
fviz_pca_biplot(myPCA_s,
                label="var",
                col.var = viridis(1,
                                  option = "D",
                                  begin = 0.5),
                geom="",
                pointsize = 0.05,
                labelsize = 3,
                repel = TRUE) +
  theme_minimal() + 
  ggtitle("                                          PCA - Biplot")

```

With a eigenvalue bigger than 1 for the four first components, we conclude that there are 4 dimensions to take into account. Nevertheless, again, they are explaining less than 80% of cumulated variance. Therefore, the rule of thumb would suggest us to take 6 dimensions into account.

By looking at the biplot, we notice that only some variables are not following the same trend: MilitaryExpenditurepenrcentGDP, which is negatively correlated with dim1/positively correlated to dim2, ef_government which is negatively correlated with dim1 and 2 and finally unemployment.rate which is slightly positively correlated with dim1 and dim2.

As we can see, the presence of "GDPpercapita," "Internet_usage," and "ef_money" close to the X axis suggests that Dim1 may be associated with overall economic development and prosperity, as well as the freedoms that are typically associated with more developed economies, such as freedom of expression ("pf_expression"), movement ("pf_movement"), and assembly ("pf_assembly"). Now concerning Dim2, it could be contrasting socio-economic stability with factors that often increase with instability or conflict, such as higher military expenditure or unemployment rates.

While considering our regressions, we have noticed that we had high multicollinearity between several dependent variables in our models, by conducting a VIF test. This is due to the numerous variables that we tried to take into account while computing our regressions. Therefore, we have decided to use the stepwise regression with the forward method and choose the model according to the adjusted R squared. 

Let's find the best model for each goal that does not involve severe multicollinearity (VIF > 5) and that has a variance well explained by our independent variable (an adjusted R squared over 0.7). Here are for example the selected models for the goals 12 and 17.

```{r, echo = TRUE, message = FALSE, warning=FALSE,fig.show='hide'}
reg_goal1 <-
  regsubsets(goal1 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion+ pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade+ ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal2 <-
  regsubsets(goal2 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal3 <-
  regsubsets(goal3 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal4 <-
  regsubsets(goal4 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal5 <-
  regsubsets(goal5 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal6 <-
  regsubsets(goal6 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal7 <-
  regsubsets(goal7 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal8 <-
  regsubsets(goal8 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal9 <-
  regsubsets(goal9 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal10 <-
  regsubsets(goal10 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal11 <-
  regsubsets(goal11 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal12 <-
  regsubsets(goal12 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal13 <-
  regsubsets(goal13 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal15 <-
  regsubsets(goal15 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal16 <-
  regsubsets(goal16 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal17 <-
  regsubsets(goal17 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")

plot(reg_goal1,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal1 Forward method, adj.R^2")

plot(reg_goal2,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal2 Forward method, adj.R^2")

plot(reg_goal3,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal3 Forward method, adj.R^2")

plot(reg_goal4,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal4 Forward method, adj.R^2")

plot(reg_goal5,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal5 Forward method, adj.R^2")

plot(reg_goal6,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal6 Forward method, adj.R^2")

plot(reg_goal7,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal7 Forward method, adj.R^2")

plot(reg_goal8,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal8 Forward method, adj.R^2")

plot(reg_goal9,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal9 Forward method, adj.R^2")

plot(reg_goal10,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal10 Forward method, adj.R^2")

plot(reg_goal11,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal11 Forward method, adj.R^2")

plot(reg_goal12,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal12 Forward method, adj.R^2")

plot(reg_goal13,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal13 Forward method, adj.R^2")

plot(reg_goal15,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal15 Forward method, adj.R^2")

plot(reg_goal16,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal16 Forward method, adj.R^2")

plot(reg_goal17,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal17 Forward method, adj.R^2")
```

```{r, echo = TRUE, message = FALSE, warning=FALSE, out.height="100%", out.width="100%"}
plot(reg_goal12, scale="adjr2") + theme_minimal() + title("Stepwise Regression Goal12 Forward method, adj.R^2")
```

$$
\begin{split}
Goal12\sim \beta_0 &+ GDPpercapita*\beta_1 + PFlaw*\beta_2 + PFreligion*\beta_3 + PFexpression*\beta_4 \\ &+ PFidentity*\beta_5 + EFlegal*\beta_6 + EFtrade*\beta_7 + Population*\beta_8 + ε_i
\end{split}
$$

```{r, echo = TRUE, message = FALSE, warning=FALSE, out.height="100%", out.width="100%"}
plot(reg_goal17, scale="adjr2") + theme_minimal() + title("Stepwise Regression Goal17 Forward method, adj.R^2")
```

$$
\begin{split}
Goal17\sim \beta_0 &+ unemployment.rate*\beta_1 + MilitaryExpenditurePercentGDP*\beta_2 \\  &+ InternetUsage*\beta_3 + PFlaw*\beta_4 + PFmovement*\beta_5 \\&+ EFgovernment*\beta_6 + EFlegal*\beta_7 + Population*\beta_8 + ε_i
\end{split}
$$

We can see that for goal12, the adjusted R squared of the model is good, which means that the independent variables fit well for explaining the dependent variable. Nevertheless, concerning goal17, the adjusted R squared is only equal to 0.5. Therefore, the lack of explanation of our variables can be caused by multiple factors, such as the non significant relationship between the chosen independent variables and the goal17, Omitted variable bias or overfitting.

The stepwise regression done gave us 12 models out of 17 with an adjusted R squared of 0.6 and more. Therefore, we need to be careful with our interpretation of our results for the models with lower explanated variance. 

Now that we have our optimal model for each goal, let's conduct our regressions and plot them to see the influence of each factor over our SDG.

```{r, echo = TRUE, message = FALSE, warning=FALSE, out.height="100%", out.width="100%"}

#Regressions 
Goal1lm <- lm(goal1 ~ unemployment.rate + MilitaryExpenditurePercentGDP
              + internet_usage + pf_religion + pf_assembly + pf_identity
              + ef_government + ef_trade,
              data = data_question1)

Goal2lm <- lm(goal2 ~ MilitaryExpenditurePercentGDP + internet_usage
              + pf_identity + ef_money + ef_trade + ef_regulation + population,
              data = data_question1)

Goal3lm <- lm(goal3 ~ MilitaryExpenditurePercentGDP + internet_usage
              + pf_movement + pf_religion + pf_identity + ef_legal + ef_money
              + ef_trade,
              data = data_question1)

Goal4lm <- lm(goal4 ~ GDPpercapita + internet_usage + pf_religion + pf_identity
              + ef_government + ef_legal + ef_trade + population,
              data = data_question1)

Goal5lm <- lm(goal5 ~ MilitaryExpenditurePercentGDP + internet_usage + pf_law
              + pf_security + pf_religion + pf_identity + ef_government
              + ef_legal,
              data = data_question1)

Goal6lm <- lm(goal6 ~ unemployment.rate + internet_usage + pf_identity
              + ef_legal + ef_money + ef_trade + ef_regulation + population,
              data = data_question1)

Goal7lm <- lm(goal7 ~ unemployment.rate + internet_usage + pf_religion
              + pf_assembly + pf_identity + ef_government + ef_trade
              + ef_regulation,
              data = data_question1)

Goal8lm <- lm(goal8 ~ unemployment.rate + internet_usage + pf_law
              + pf_expression + ef_legal + ef_trade + ef_regulation
              + population,
              data = data_question1)

Goal9lm <- lm(goal9 ~ + GDPpercapita + MilitaryExpenditurePercentGDP
              + internet_usage + pf_law + ef_legal + ef_trade + ef_regulation
              + population,
              data = data_question1)

Goal10lm <- lm(goal10 ~ unemployment.rate + internet_usage + pf_law
               + pf_security + pf_movement + pf_religion + pf_expression
               + population,
               data = data_question1)

Goal11lm <- lm(goal11 ~ unemployment.rate + internet_usage + pf_movement
               + pf_religion + pf_identity + ef_legal + ef_trade
               + population,
               data = data_question1)

Goal12lm <- lm(goal12 ~ + GDPpercapita + pf_law + pf_religion + pf_expression
               + pf_identity + ef_legal + ef_trade + population,
               data = data_question1)

Goal13lm <- lm(goal13 ~ unemployment.rate + GDPpercapita
               + MilitaryExpenditurePercentGDP + pf_law + pf_religion
               + pf_expression + pf_identity + ef_legal,
               data = data_question1)

Goal15lm <- lm(goal15 ~ unemployment.rate + MilitaryExpenditurePercentGDP
               + internet_usage + pf_law + pf_religion + ef_government
               + ef_money + population, data = data_question1)

Goal16lm <- lm(goal16 ~ pf_law + pf_security + pf_religion + pf_expression
               + pf_identity + ef_government + ef_legal + population,
               data = data_question1)

Goal17lm <- lm(goal17 ~ unemployment.rate + MilitaryExpenditurePercentGDP
               + internet_usage + pf_law + pf_movement + ef_government
               + ef_legal + population,
               data = data_question1)

#coefficient plot

# Create a dataframe of tidy models
model_list <- list(Goal1lm, Goal2lm, Goal3lm, Goal4lm, Goal5lm, Goal6lm,
                   Goal7lm, Goal8lm, Goal9lm, Goal10lm, Goal11lm, Goal12lm,
                   Goal13lm, Goal15lm, Goal16lm, Goal17lm)

models_tidy <- lapply(model_list, tidy)
names(models_tidy) <- paste("Goal",
                            c(1:13, 15:17),
                            "lm",
                            sep="")

# Combine into a single dataframe
df_tidy <-
  do.call(rbind,
          lapply(names(models_tidy),
                 function(x) cbind(models_tidy[[x]],
                                   Model=x)))

# Filter for significant p-values
df_tidy_significant <-
  df_tidy[df_tidy$p.value < p_value_threshold, ]
library(RColorBrewer)
model_order <- c("Goal1lm", "Goal2lm", "Goal3lm", "Goal4lm", "Goal5lm",
                 "Goal6lm", "Goal7lm", "Goal8lm","Goal9lm", "Goal10lm",
                 "Goal11lm", "Goal12lm", "Goal13lm", "Goal15lm",
                 "Goal16lm", "Goal17lm")

df_tidy_significant$Model <-
  factor(df_tidy_significant$Model, levels = model_order)

myColors <-
  colorRampPalette(brewer.pal(11, "Spectral"))(length(unique(df_tidy_significant$term)))

# All models graph
ggplot(df_tidy_significant,
       aes(y = Model,
           x = estimate,
           color = term)) +
  geom_point() +
  geom_vline(xintercept = 0,
             linetype = "solid",
             size = 0.5,
             color = viridis(1, option = "B", begin = 0.5)) +
  geom_errorbar(aes(xmin = estimate - std.error, xmax = estimate + std.error),
                width = 0.2) +
  scale_color_manual(values = myColors) + 
  theme(axis.text.y = element_text(angle = 0, hjust = 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot",
        legend.position = "bottom", 
        legend.text = element_text(size = 6), 
        legend.title = element_text(size = 7),
        legend.key.size = unit(0.4, "cm")) +
  labs(title = "Coefficient Plot of Regression Models",
       y = "Models",
       x = "Estimates")
```

Here is our general plot. For visualization purpose, let's also plot the positive and negative correlation plots

```{r, echo = TRUE, message = FALSE, warning=FALSE, out.height="100%", out.width="100%"}
#positive values only 
df_tidy_positive_p <- df_tidy_significant[df_tidy_significant$estimate > 0, ]

df_tidy_positive_p$Model <- factor(df_tidy_positive_p$Model, levels = model_order)

myColors <- colorRampPalette(brewer.pal(11, "Spectral"))(length(unique(df_tidy_positive_p$term)))
# Plot only positive coefficients
ggplot(df_tidy_positive_p,
       aes(y = Model,
           x = estimate,
           color = term)) +
  geom_point() +
  geom_vline(xintercept = 0,
             linetype = "solid",
             size = 0.5,
             color = viridis(1, option = "B", begin = 0.5)) +
  geom_errorbar(aes(xmin = estimate - std.error, xmax = estimate + std.error),
                width = 0.2) +
  scale_color_manual(values = myColors) + 
  theme(axis.text.y = element_text(angle = 0, hjust = 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot",
        legend.position = "bottom",
        legend.text = element_text(size = 6),
        legend.title = element_text(size = 7),
        legend.key.size = unit(0.4, "cm")) +
  labs(title = "Coefficient Plot of Regression Models (Positive Coefficients)",
       y = "Models",
       x = "Estimates")

#negative values only
df_tidy_positive_n <-
  df_tidy_significant[df_tidy_significant$estimate < 0, ]

df_tidy_positive_n$Model <-
  factor(df_tidy_positive_n$Model, levels = model_order)

myColors <-
  colorRampPalette(brewer.pal(11, "Spectral"))(length(unique(df_tidy_positive_n$term)))

ggplot(df_tidy_positive_n, aes(y = Model, x = estimate, color = term)) +
  geom_point() +
  geom_vline(xintercept = 0,
             linetype = "solid",
             size = 0.5,
             color = viridis(1, option = "B", begin = 0.5)) +
  geom_errorbar(aes(xmin = estimate - std.error, xmax = estimate + std.error), width = 0.2) +
  scale_color_manual(values = myColors) + 
  theme(axis.text.y = element_text(angle = 0, hjust = 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot",
        legend.position = "bottom",
        legend.text = element_text(size = 6),
        legend.title = element_text(size = 7),
        legend.key.size = unit(0.4, "cm")) +
  labs(title = "Coefficient Plot of Regression Models (Negative Coefficients)",
       y = "Models",
       x = "Estimates")
```

In these plots, we can see that most of our variables are influencing positively and negatively our goals. I.e., unemployment.rate is influencing goal 10 & 8 negatively, but positively our other goals. Nevertheless, some factors seems to influence only positively our goals. It is the case for the factors internet_usage. These results are due to the range of the objectives contained in the SDG: as each goal has a different objective, and that our factors are have also a wide range of action, we find different influence between our variables.  

In conclusion, after reviewing which variables are correlating between eachother, after taking care of our multicollinearity problems and doing our regressions on our overall SDG score, we have been finally able to get a broad picture of the influence of our factors over our SDG. Unfortunately, because of poor explanated variance for some regression models, we have to be careful while doing any conclusions from the regressions. 

