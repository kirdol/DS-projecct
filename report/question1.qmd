# EDA and Analysis of the data

## Focus on the influence of the factors over the SDG scores

**What can explain the state of the countries regarding their sustainable development?**

We will analyse different factors: scores from the Human Freedom Index, GDP per capita, military expenditures in percentage of GDP, unemployment rate and internet usage. You will find more precise information about our chosen factors in the data description section.

```{r setup, echo = FALSE, message = FALSE, warning=FALSE}
#### Initial setup ####

source(here::here("scripts/Clean/setup.R"))
source(here::here("scripts/EDA/EDA_4_SDG.R"))
data_question1 <- read.csv(here("scripts","data","data_question1.csv"))
data_question24 <- read.csv(here("scripts", "data", "data_question24.csv"))
data_question2 <- read.csv(here("scripts", "data", "data_question24.csv"))
data_question3_1 <- read.csv(here("scripts", "data", "data_question3_1.csv"))
data_question3_2 <- read.csv(here("scripts", "data", "data_question3_2.csv"))
data_question3_3 <- read.csv(here("scripts", "data", "data_question3_3.csv"))
Q3.1 <- read.csv(here("scripts", "data", "data_question3_1.csv"))
Q3.2 <- read.csv(here("scripts", "data", "data_question3_2.csv"))
Q3.3 <- read.csv(here("scripts", "data", "data_question3_3.csv"))
data <- read.csv(here("scripts", "data", "all_Merge.csv"))
Correlation_overall <- data_question1 %>%
      dplyr::select(population:ef_regulation)
```

### EDA: general exploratory data analysis

For this first part of our EDA, we check the distribution of the SDG scores. The following variables are ordered by decreasing order of the average score. The color represents the density of the observations: the more the color is bright, the more the density is high.

```{r, echo = TRUE, message = FALSE, warning=FALSE}
#### Reshape then plot the distribution of the SDG scores ####

# Reshape the data from wide to long format for our SDG and our human freedom index scores
long_df_goal_distribution <- pivot_longer(Correlation_overall,
                                          cols = starts_with("goal"),
                                          names_to = "Goal",
                                          values_to = "Value")

long_df_goal_distribution$Goal <- with(long_df_goal_distribution,
                                       reorder(Goal, Value, FUN = mean))

long_df_hfi_distribution <- pivot_longer(Correlation_overall,
                                         cols = pf_law:ef_regulation,
                                         names_to = "Category",
                                         values_to = "Value")

long_df_hfi_distribution$Goal <- with(long_df_hfi_distribution,
                                      reorder(Category, Value, FUN = mean))

# Plot the distribution of the SDG scores
ggplot(long_df_goal_distribution,
       aes(x = Value,
           y = Goal,
           fill = ..density..)) +
  geom_density_ridges_gradient(scale = 3,
                               size = 0.3,
                               rel_min_height = 0.01) +
  scale_fill_viridis_c(option = "D") +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(x = 'Score',
       y = 'Goals',
       title = 'SDG Scores Distribution')
```

As we can see, most of our goals have a left-skewed distribution, which shows that most of the countries concerned implemented good strategies for targeting the goals' objectives. Some distributions have a wider distribution than others, showing the variance of the scores between the countries, due to various reasons such as the inequality regarding the amount of money available to be invested for implementing solutions. In addition, we notice that the only right-skewed distribution is for goal 9, which is promoting infrastructures, innovation and inclusive and sustainable industrialization. Therefore, it seems like many countries are encountering difficulties for implementing good solutions regarding this goal. Furthermore, we notice that goal 1 has the highest density, which means that in general the countries tend to have good scores, but it also has a very dispersed distribution on the low score side, which reveals high inequalities when it comes to countries with low scores. Finally, we noticed that goals 12 and 13, which are climate related objectives, are the two leading SDGs in term of score. This last observation will be important for the following analysis section. 

Now let's focus on the distribution of the Human Freedom Index scores. We use the same ordering selection and color method as for the previous distribution plot. 

```{r, echo = TRUE, message = FALSE, warning=FALSE}
#### Human Freedom Index Scores Distribution plot ####

ggplot(long_df_hfi_distribution, aes(x = Value,
                                     y = Category,
                                     fill = ..density..)) +
  geom_density_ridges_gradient(scale = 3,
                               size = 0.3,
                               rel_min_height = 0.01) +
  scale_fill_viridis_c(name = "Density",
                       option = "D") +
  theme(plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot") + 
  labs(x = 'Scores',
       title = 'Human Freedom Index Scores Distribution')
```

The distribution of the Human Freedom Index Score follows the same trend as the SDG goaes. Most of the scores are left-skewed, which means that countries tend to have good scores. The only scores not following this trend are pf_law and ef_legal, which tend to have in average lower scores. There could be multiple reasons why it is the case. One could be, i.e., that the legal system for civilians and countries is evolving slowly, because it has a lot of implications over the situation within a country/between countries, and because of the divergence of opinions. Therefore, investing money for raising these variables could be more difficult than raising the scores of other goals. Furthermore, the highest density is contained in the factor pf_movement, which means that in general the countries have good and similar scores. 

Now let's consider the remaining variables of the dataset dedicated to answering our question about the influence of factors over our SDG scores. 

```{r, echo = TRUE, message = FALSE, warning=FALSE}
#### Distribution of the remaining variables ####

# Unemployment rate plot
unempl_d <- ggplot(Correlation_overall,
                   aes(x = unemployment.rate,
                       y = 1, # set y = 1 to visualize the distribution of a single variable without categorizing it by another variable.
                       fill = ..density..)) +
  geom_density_ridges_gradient(scale = 3,
                               size = 0.3,
                               rel_min_height = 0.01) +
  scale_fill_viridis_c(name = "Density",
                       option = "D") +
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 10),
        plot.title.position = "plot") + 
  labs(y = 'Density',
       x = 'Percentage',
       title = 'Distribution of Unemployment Rate')

# GDP per capita plot
gdp_d <- ggplot(Correlation_overall,
                aes(x = GDPpercapita,
                    y = 1,
                    fill = ..density..)) +
  geom_density_ridges_gradient(scale = 3,
                               size = 0.3,
                               rel_min_height = 0.01) +
  scale_fill_viridis_c(name = "Density",
                       option = "D") +
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 10),
        plot.title.position = "plot") + 
  labs(y = 'Density',
       x = 'Values',
       title = 'Distribution of GDP per Capita')

# Military expenditure plot
milit_d <- ggplot(Correlation_overall,
                  aes(x = MilitaryExpenditurePercentGDP,
                      y = 1,
                      fill = ..density..)) +
  geom_density_ridges_gradient(scale = 3,
                               size = 0.3,
                               rel_min_height = 0.01) +
  scale_fill_viridis_c(name = "Density",
                       option = "D") +
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 10), # Center the title
        plot.title.position = "plot") + 
  labs(y = 'Density',
       x = 'Percentage',
       title = 'Distribution of Military Expenditure (% of GDP)')

# Internet usage plot
internet_d <- ggplot(Correlation_overall,
                     aes(x = internet_usage,
                         y = 1,
                         fill = ..density..)) +
  geom_density_ridges_gradient(scale = 3,
                               size = 0.3,
                               rel_min_height = 0.01) +
  scale_fill_viridis_c(name = "Density",
                       option = "D") + 
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 10),
        plot.title.position = "plot") + 
  labs(y = 'Density',
       x = 'Values',
       title = 'Distribution of Internet Usage')

# Arrange the plots in a 2x2 grid
grid.arrange(unempl_d,
             gdp_d,
             milit_d,
             internet_d,
             ncol = 2,
             nrow = 2)
```

Due to density calculations and normalization, some densities exceed 1, because they are not probabilities themselves but rather rates at which probability is accumulating at each point.

All these variables have a right-skewed distribution. Taking the mode into account, most of the concerned countries in our database have an unemployment rate between 2 and 7%, a distribution of GDP per capita between $1'000-\$10'000, a distribution of military expenditure in percentage of the GDP from 10% to 20% and finally a internet usage between 0 and 10%.

These variables show us even more inequalities between the countries in our dataset. While most of our countries have low internet usage or/and a low GDP per capita, few countries are more developed, thus probably more wealthy, and therefore have better chances of getting higher scores.

Now, let's display the distribution of the different SDG achievement scores per continent, using violin boxplots to have an overview of the mods, the range and the outliers. To do so, we use the median of each goal per continent.

```{r, echo = TRUE, message = FALSE, warning=FALSE, out.height="100%", out.width="100%"}
#### Prepare then plot the Distribution of the SDG by continent ####

# Preparing Africa data
data_Q1_Africa <- data_question1 %>%
  filter(data_question1$continent == 'Africa') %>%
  dplyr::select(continent, overallscore, goal1, goal2, goal3, goal4, goal5,
                goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13,
                goal15, goal16, goal17)

data_Q1_Africa_long <- melt(data_Q1_Africa)

#median for Africa
medians_AF <- data_Q1_Africa_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))
data_Q1_Africa_long <- data_Q1_Africa_long %>%
                  left_join(medians_AF, by = "variable")


# Preparing America data
data_Q1_Americas <- data_question1 %>%
  filter(data_question1$continent == 'Americas') %>%
  dplyr::select(continent, overallscore, goal1, goal2, goal3, goal4, goal5,
                goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13,
                goal15, goal16, goal17)

data_Q1_Americas_long <- melt(data_Q1_Americas)

#median for Americas
medians_AM <- data_Q1_Americas_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))
data_Q1_Americas_long <- data_Q1_Americas_long %>%
                  left_join(medians_AM, by = "variable")


# Preparing Asia data
data_Q1_Asia <- data_question1 %>%
  filter(data_question1$continent == 'Asia') %>%#filtering Asia as continent
  dplyr::select(continent, overallscore, goal1, goal2, goal3, goal4, goal5,
                goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13,
                goal15, goal16, goal17)

data_Q1_Asia_long <- melt(data_Q1_Asia)

#median for Asia
medians_AS <- data_Q1_Asia_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))
data_Q1_Asia_long <- data_Q1_Asia_long %>%
                  left_join(medians_AS, by = "variable")


# Preparing Europe data
data_Q1_Europe <- data_question1 %>%
  filter(data_question1$continent == 'Europe') %>% #filtering Europe as continent
  dplyr::select(continent, overallscore, goal1, goal2, goal3, goal4, goal5,
                goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13,
                goal15, goal16, goal17)

data_Q1_Europe_long <- melt(data_Q1_Europe)

#median for Europa 
medians_EU <- data_Q1_Europe_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))
data_Q1_Europe_long <- data_Q1_Europe_long %>%
                  left_join(medians_EU, by = "variable")


# Preparing Oceania data
data_Q1_Oceania <- data_question1 %>%
  filter(data_question1$continent == 'Oceania') %>%
  dplyr::select(continent, overallscore, goal1, goal2, goal3, goal4, goal5,
                goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13,
                goal15, goal16, goal17)

data_Q1_Oceania_long <- melt(data_Q1_Oceania)

#median for Oceania
medians_OC <- data_Q1_Oceania_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))
data_Q1_Oceania_long <- data_Q1_Oceania_long %>%
                  left_join(medians_OC, by = "variable")


# Merge all medians
medians_all <- rbind(data_Q1_Oceania_long,
                     data_Q1_Americas_long,data_Q1_Africa_long,
                     data_Q1_Asia_long,data_Q1_Europe_long)

# Assing a color to each median group
medians_all$color <-
  ifelse(medians_all$median_value > 75, "1",
         ifelse(medians_all$median_value < 25, "3", '2'))

bandwidth_nrd <- bw.nrd(medians_all$value)


# Plot the SDG Distribution by Continent
ggplot(medians_all,
       aes(x = variable,
           y = value,
           fill = color)) +
  geom_violin(trim = FALSE,
              bw = bandwidth_nrd) +
  scale_fill_viridis_d(name = "",
                       direction = -1,
                       option = "D",
                       labels = c("High median",
                                  "Medium median",
                                  "Low median")) + 
  labs(title = "SDG Distribution by Continent",
       x = "Goals",
       y = "Scores",
       fill = "Score Category") +
  facet_grid(continent ~ .,
             scales = "free_y") +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot",
        axis.text.x = element_text(angle = 90,
                                   vjust = 0.5, hjust=1))
```

We notice that Europe is the continent with most of its goals having a median score superior to 75 (represented by the yellow color). We notice that only two goals have a median score lower than 25, which are goal 9 for Africa and goal 10 for America. As seen before, goal 9 is generally having lower scores than the other goals. It could mean that access to technology and sustainable/resilient infrastructures/industrialization is harder in Africa, due to various reasons such as the economical situation of these countries, corruption,...

Goal 10 is about the reduction of inequalities within and among countries. Therefore, we presume that the investments made in the Americas to implement solutions for getting better scores towards this goal is maybe less effective due to for instance culture difference with other continent, or simply less money spent for solving the issue. 

In addition, some distributions are quite dispersed, such as goal 13 in Oceania and goal 10 in Africa. That could show inequalities within countries or again less investments made to raise the scores by different countries of the same continent.

Now let's display the boxplots for the different variables of the Human Freedom Index.

```{r, echo = TRUE, message = FALSE, warning=FALSE, out.height="100%", out.width="100%"}
#### Prepare then plot the Distribution of the HFI by continent ####

# Preparing Africa data
data_Q1_Africa_HFI <- data_question1 %>%
  filter(data_question1$continent == 'Africa') %>%
  dplyr::select(continent, pf_law, pf_security, pf_movement, pf_religion,
                pf_assembly, pf_expression, pf_identity, ef_government,
                ef_legal, ef_money, ef_trade, ef_regulation)

data_Q1_Africa_HFI_long <- melt(data_Q1_Africa_HFI)

medians_AF_HFI <- data_Q1_Africa_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Africa_HFI_long <- data_Q1_Africa_HFI_long %>%
                  left_join(medians_AF_HFI, by = "variable")


# Preparing America data
data_Q1_Americas_HFI <- data_question1 %>%
  filter(data_question1$continent == 'Americas') %>%
  dplyr::select(continent, pf_law, pf_security, pf_movement, pf_religion,
                pf_assembly, pf_expression, pf_identity, ef_government,
                ef_legal, ef_money, ef_trade, ef_regulation)

data_Q1_Americas_HFI_long <- melt(data_Q1_Americas_HFI)

medians_AM_HFI <- data_Q1_Americas_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Americas_HFI_long <- data_Q1_Americas_HFI_long %>%
                  left_join(medians_AM_HFI, by = "variable")


# Preparing Asia data
data_Q1_Asia_HFI <- data_question1 %>%
  filter(data_question1$continent == 'Asia') %>%
  dplyr::select(continent, pf_law, pf_security, pf_movement, pf_religion,
                pf_assembly, pf_expression, pf_identity, ef_government,
                ef_legal, ef_money, ef_trade, ef_regulation)

data_Q1_Asia_HFI_long <- melt(data_Q1_Asia_HFI)

medians_AS_HFI <- data_Q1_Asia_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Asia_HFI_long <- data_Q1_Asia_HFI_long %>%
                  left_join(medians_AS_HFI, by = "variable")


# Preparing Europe data
data_Q1_Europe_HFI <- data_question1 %>%
  filter(data_question1$continent == 'Europe') %>%
  dplyr::select(continent, pf_law, pf_security, pf_movement, pf_religion,
                pf_assembly, pf_expression, pf_identity, ef_government,
                ef_legal, ef_money, ef_trade, ef_regulation)

data_Q1_Europe_HFI_long <- melt(data_Q1_Europe_HFI)

medians_EU_HFI <- data_Q1_Europe_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Europe_HFI_long <- data_Q1_Europe_HFI_long %>%
                  left_join(medians_EU_HFI, by = "variable")


# Preparing Oceania data
data_Q1_Oceania_HFI <- data_question1 %>%
  filter(data_question1$continent == 'Oceania') %>%
  dplyr::select(continent, pf_law, pf_security, pf_movement, pf_religion,
                pf_assembly, pf_expression, pf_identity, ef_government,
                ef_legal, ef_money, ef_trade, ef_regulation)

data_Q1_Oceania_HFI_long <- melt(data_Q1_Oceania_HFI)

medians_OC_HFI <- data_Q1_Oceania_HFI_long %>%
  group_by(variable) %>%
  summarize(median_value = median(value))

data_Q1_Oceania_HFI_long <- data_Q1_Oceania_HFI_long %>%
                  left_join(medians_OC_HFI, by = "variable")


# Merge all medians 
medians_all_HFI <- rbind(data_Q1_Oceania_HFI_long, 
                         data_Q1_Americas_HFI_long,
                         data_Q1_Africa_HFI_long,
                         data_Q1_Asia_HFI_long,
                         data_Q1_Europe_HFI_long)

# Assing a color to each median value
medians_all_HFI$color <- ifelse(medians_all_HFI$median_value > 7.5, "1", 
                        ifelse(medians_all_HFI$median_value < 2.5, "3", "2"))

bandwidth_nrd_HFI <- bw.nrd(medians_all_HFI$value)

# Plot the distribution of the HFI by continent
ggplot(medians_all_HFI,
       aes(x = variable,
           y = value,
           fill = color)) +
  geom_violin(trim = FALSE,
              bw = bandwidth_nrd_HFI) +
  scale_fill_viridis_d(name = "",
                       option = "D",
                       direction = -1,
                       labels = c(">7.5",
                                  "Between",
                                  "< 2.5")) +
  labs(title = "Human Freedom Index Scores Distribution by Continent",
       x = "Variables",
       y = "Scores",
       fill = "Score Category") +
  facet_grid(continent ~ .,
             scales = "free_y") +
  scale_y_continuous(labels = scales::label_number()) +
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
```

Here we notice the same results, except that no score has a median below 25%. Again, Europe is the continent with most of its median scores superior to 75. 

For space reasons, because of the different scales, we decided not to make violin boxplots per continent for the remaining variables. Nevertheless, their distributions can be seen in the general distribution displayed above.

Now, let's have a closer look at the general correlation between our variables. Using our cleaned dataset, we will use a correlation heatmap to help us visualize the information. Given that most of our variables are not normally distributed, we will use the Spearman method to calculate the correlations.

```{r, echo = TRUE, message = FALSE, warning=FALSE, fig.height = 2}
#### Correlations between variables Heatmap ####

# Selecting the variables to be used
Correlation_overall <-data_question1 %>%
      dplyr::select(population:ef_regulation)

# Correlation matrix calculation
cor_matrix_sper <-
  cor(Correlation_overall,
      method = "spearman",
      use = "everything")

# Wide to long
cor_melted <-
  melt(cor_matrix_sper)

# Adding a new column for hover text
cor_melted$hover_text <- paste("Variable 1: ",
                               cor_melted$Var1,
                               "\nVariable 2: ",
                               cor_melted$Var2,
                               "\nCorrelation between the variables: ",
                               round(cor_melted$value, 2))

# Plotting the heatmap
plotly_heatmap <- plot_ly(data = cor_melted,
                          x = ~Var1,
                          y = ~Var2,
                          type = "heatmap",
                          z = ~value,
                          text = ~hover_text,
                          hoverinfo = "text") %>%
  layout(title = list(text = 'Correlation Matrix Heatmap',
                      font = list(size = 17)),
         xaxis = list(title = '',
                      tickangle = -45),
         yaxis = list(title = '',
                      tickangle = 0,
                      tickfont = list(size = 7)),
         colorbar = list(title = 'Spearman\nCorrelation',
                         yanchor = "middle",
                         y = 0.5))

# Display the Plotly plot
plotly_heatmap %>%
  config(displayModeBar = FALSE)
```

By looking at our heatmap, we notice that most of our goals are strongly correlated together and that some variables among the Human Freedom Index scores too (strong correlation among personal freedom variables (pf), reflecting scores from the Human Freedom Index on movement, religion, assembly, and expression). This could be explained by the fact that some of these goals/scores share partially similar objectives, which could mean that a raise in the score of one of these goals will raise the score of another/some other goals. In addition, we notice that goals 12 and 13 (respectively "responsible consumption & production" and "climate action", therefore climate oriented goals) are strongly negatively correlated with most of our variables. For the moment, as correlation does not imply causality, we cannot deduce anything from this information. We will see more in details the correlations between our goals and variables in the analysis part of the influence of the factors over the Sustainable Development Goals.

### Analysis: Influence of the factors over the SDG scores

In order to answer the first question of our work, let's start by zooming on the correlation matrix heatmap made in our EDA section. Here are the correlations between the SDG scores and all the other variables except the SDGs.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
### Correlation Matrix Heatmap SDG/Other variables ###

# computing p-values of our interested variables
corr_matrix <- cor(data_question1[7:40], method = "spearman", use = "everything")
p_matrix2 <- matrix(nrow = ncol(data_question1[7:40]), ncol = ncol(data_question1[7:40]))
for (i in 1:ncol(data_question1[7:40])) {
  for (j in 1:ncol(data_question1[7:40])) {
    test_result <- cor.test(data_question1[7:40][, i], data_question1[7:40][, j])
    p_matrix2[i, j] <- test_result$p.value
  }
}

corr_matrix[which(p_matrix2 > p_value_threshold)] <- NA #only keeping significant pval alpha = 0.05

melted_corr_matrix_GVar <- melt(corr_matrix[19:34,1:18])

ggplot(melted_corr_matrix_GVar, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  geom_text(aes(label = ifelse(!is.na(value) & abs(value) > threshold_heatmap, sprintf("%.2f", value), '')),
            color = "black", size = 2) +
  scale_fill_viridis_c(name = "Spearman\nCorrelation",
                       na.value = "white",
                       direction = 1,
                       begin = 0.1,
                       end = 1) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        axis.text.y = element_text(angle = 45, hjust = 1),
        plot.title = element_text(hjust = 0.5), # Center the title
        plot.title.position = "plot") +
  labs(x = 'Variables', y = 'Goals',
       title = 'Correlations Heatmap between goals and our other variables')
```

For visualization purpose, we decided to only display the correlations bigger than `r threshold_heatmap` in absolute values. The uncolored parts are the non significant p-values.

Firstly, we can see that most of the correlations between the variables are significant. Also, GDP per capita, internet_usage, pf_law or ef_legal are strongly correlated with most of the SDGs. This is mostly due to the large scope of these variables. It makes them influence various sectors of our economies and thus, mostly impacting all the SDG scores. Therefore, we can think that these variables have a strong impact on the scores. Nevertheless, as correlation does not mean causality, we still can not jump to conclusions.

As we can see, goals 12 and 13 (responsible consumption & production and climate action) are negatively correlated with most of our variables, as is the economic freedom government variable to the SDGs. Nevertheless, goals 12 and 13 and ef_government are positively correlated together.

Now, let's zoom on the correlations between all our variables except the SDG:

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
melted_corr_matrix_Var <- melt(corr_matrix[19:34,19:34])
ggplot(melted_corr_matrix_Var, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  geom_text(aes(label = ifelse(!is.na(value) & abs(value) > threshold_heatmap, sprintf("%.2f", value), '')),
            color = "black", size = 1.7) +
  scale_fill_viridis_c(name = "Spearman\nCorrelation",
                       na.value = "white",
                       direction = 1,
                       begin = 0.1,
                       end = 1) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        axis.text.y = element_text(angle = 45, hjust = 1),
        plot.title = element_text(hjust = 0.5), # Center the title
        plot.title.position = "plot") +
  labs(x = 'Variables', y = 'Variables',
       title = 'Correlations Heatmap between other variables than SDG')
```

As noticed earlier, there is a strong correlation among personal freedom variables (pf), reflecting scores from the Human Freedom Index on movement, religion, assembly, and expression.

Again, we can see that GDP per capita, pf_law and ef_legal are highly correlated with some other variables. On another hand, we notice that pf_movement, pf_assembly and pf_expression are now also highly correlated with some of the other variables. In addition, we notice that MilitaryExpenditurePercentGDP and ef_governement are negatively correlated with the other variables.

In order to have a look at the influence of our factors over our dependent variables, let's conduct a Principal Component Analysis.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE}
#### PCA and PCA Scree plot####

#Select our data and effectuate our PCA analysis
myPCA_s <- PCA(data_question1[,25:40], graph = FALSE)

#scree plot
fviz_eig(myPCA_s,
         addlabels = TRUE,
         linecolor = viridis(1,
                             option = "B",
                             begin = 0.5),
         barcolor = "black",
         barfill = viridis(10,
                           option = "D",
                           begin = 0,
                           end = 0.8)) +
  theme_minimal() + 
  ggtitle("                                          PCA - Scree plot")


summary(myPCA_s)
```

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE}
#### PCA Biplot ####

#Biplot
fviz_pca_biplot(myPCA_s,
                label="var",
                col.var = viridis(1,
                                  option = "D",
                                  begin = 0.5),
                geom="",
                pointsize = 0.05,
                labelsize = 3,
                repel = TRUE) +
  theme_minimal() + 
  ggtitle("                                          PCA - Biplot")

```

With an eigenvalue bigger than 1 for the four first components, we conclude that there are 4 dimensions to take into account. Nevertheless, they are only explaining less than 80% of the variance. Therefore, the rule of thumb would suggest us to take 6 dimensions into account.

By looking at the biplot, we notice that only some variables are not following the same trend: MilitaryExpenditurepenrcentGDP, which is negatively correlated with dimension 1/positively correlated to dimension 2, ef_government which is negatively correlated with dimensions 1 and 2 and finally unemployment.rate, which is slightly positively correlated with dimensions 1 and 2.

The presence of "GDPpercapita," "Internet_usage," and "ef_money" close to the X axis suggests that the first dimension may be associated with overall economic development and prosperity, as well as the freedom that is typically associated with more developed economies, such as freedom of expression ("pf_expression"), movement ("pf_movement"), and assembly ("pf_assembly"). Now concerning the second dimension, it could be contrasting socio-economic stability with factors that often increase with instability or conflict, such as higher military expenditure or unemployment rates.

While considering our regressions, we noticed that there was high multicollinearity between several dependent variables in our models, by conducting a VIF test. This is due to the numerous variables that we tried to take into account while computing our regressions. Therefore, we decided to use the stepwise regression with the forward method and chose the models according to the adjusted R squared. 

Let's find the best model for each goal that does not involve severe multicollinearity (VIF > 5) and that has a variance well explained by our independent variable (an adjusted R squared over 0.7). Here are for example the selected models for goals 12 and 17.

```{r, echo = TRUE, message = FALSE, warning=FALSE,fig.show='hide'}
reg_goal1 <-
  regsubsets(goal1 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion+ pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade+ ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal2 <-
  regsubsets(goal2 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal3 <-
  regsubsets(goal3 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal4 <-
  regsubsets(goal4 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal5 <-
  regsubsets(goal5 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal6 <-
  regsubsets(goal6 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal7 <-
  regsubsets(goal7 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal8 <-
  regsubsets(goal8 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal9 <-
  regsubsets(goal9 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal10 <-
  regsubsets(goal10 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal11 <-
  regsubsets(goal11 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal12 <-
  regsubsets(goal12 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal13 <-
  regsubsets(goal13 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal15 <-
  regsubsets(goal15 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal16 <-
  regsubsets(goal16 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")
reg_goal17 <-
  regsubsets(goal17 ~ unemployment.rate + GDPpercapita +
               MilitaryExpenditurePercentGDP + internet_usage + pf_law +
               pf_security + pf_movement + pf_religion + pf_assembly +
               pf_expression + pf_identity + ef_government + ef_legal +
               ef_money + ef_trade + ef_regulation + population,
             data = data_question1,
             nbest=10,
             method="forward")

plot(reg_goal1,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal1 Forward method, adj.R^2")

plot(reg_goal2,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal2 Forward method, adj.R^2")

plot(reg_goal3,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal3 Forward method, adj.R^2")

plot(reg_goal4,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal4 Forward method, adj.R^2")

plot(reg_goal5,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal5 Forward method, adj.R^2")

plot(reg_goal6,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal6 Forward method, adj.R^2")

plot(reg_goal7,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal7 Forward method, adj.R^2")

plot(reg_goal8,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal8 Forward method, adj.R^2")

plot(reg_goal9,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal9 Forward method, adj.R^2")

plot(reg_goal10,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal10 Forward method, adj.R^2")

plot(reg_goal11,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal11 Forward method, adj.R^2")

plot(reg_goal12,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal12 Forward method, adj.R^2")

plot(reg_goal13,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal13 Forward method, adj.R^2")

plot(reg_goal15,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal15 Forward method, adj.R^2")

plot(reg_goal16,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal16 Forward method, adj.R^2")

plot(reg_goal17,
     scale="adjr2") +
  theme_minimal() +
  title("Stepwise Regression Goal17 Forward method, adj.R^2")
```

```{r, echo = TRUE, message = FALSE, warning=FALSE, out.height="100%", out.width="100%"}
plot(reg_goal12, scale="adjr2") + theme_minimal() + title("Stepwise Regression Goal12 Forward method, adj.R^2")
```

$$
\begin{split}
Goal12\sim \beta_0 &+ GDPpercapita*\beta_1 + PFlaw*\beta_2 + PFreligion*\beta_3 + PFexpression*\beta_4 \\ &+ PFidentity*\beta_5 + EFlegal*\beta_6 + EFtrade*\beta_7 + Population*\beta_8 + ε_i
\end{split}
$$

```{r, echo = TRUE, message = FALSE, warning=FALSE, out.height="100%", out.width="100%"}
plot(reg_goal17, scale="adjr2") + theme_minimal() + title("Stepwise Regression Goal17 Forward method, adj.R^2")
```

$$
\begin{split}
Goal17\sim \beta_0 &+ unemployment.rate*\beta_1 + MilitaryExpenditurePercentGDP*\beta_2 \\  &+ InternetUsage*\beta_3 + PFlaw*\beta_4 + PFmovement*\beta_5 \\&+ EFgovernment*\beta_6 + EFlegal*\beta_7 + Population*\beta_8 + ε_i
\end{split}
$$

We see that for goal 12, the adjusted R squared of the model is good, which means that the independent variables explain well the dependent variable. Nevertheless, for goal 17, the adjusted R squared is only equal to 0.5. Therefore, the lack of explanation of our variables can be caused by multiple factors, such as the non significant relationship between the chosen independent variables and goal 17, Omitted variable bias or overfitting.

The stepwise regressions gave us 12 models out of 17 with an adjusted R squared of 0.6 and more. Therefore, we need to be careful with our interpretation of the results for the models with lower explained variance. 

Now that we have our optimal model for each goal, let's conduct our regressions and plot them to see the influence of each factor over the SDG scores.

```{r, echo = TRUE, message = FALSE, warning=FALSE, out.height="100%", out.width="100%"}

#Regressions 
Goal1lm <- lm(goal1 ~ unemployment.rate + MilitaryExpenditurePercentGDP
              + internet_usage + pf_religion + pf_assembly + pf_identity
              + ef_government + ef_trade,
              data = data_question1)

Goal2lm <- lm(goal2 ~ MilitaryExpenditurePercentGDP + internet_usage
              + pf_identity + ef_money + ef_trade + ef_regulation + population,
              data = data_question1)

Goal3lm <- lm(goal3 ~ MilitaryExpenditurePercentGDP + internet_usage
              + pf_movement + pf_religion + pf_identity + ef_legal + ef_money
              + ef_trade,
              data = data_question1)

Goal4lm <- lm(goal4 ~ GDPpercapita + internet_usage + pf_religion + pf_identity
              + ef_government + ef_legal + ef_trade + population,
              data = data_question1)

Goal5lm <- lm(goal5 ~ MilitaryExpenditurePercentGDP + internet_usage + pf_law
              + pf_security + pf_religion + pf_identity + ef_government
              + ef_legal,
              data = data_question1)

Goal6lm <- lm(goal6 ~ unemployment.rate + internet_usage + pf_identity
              + ef_legal + ef_money + ef_trade + ef_regulation + population,
              data = data_question1)

Goal7lm <- lm(goal7 ~ unemployment.rate + internet_usage + pf_religion
              + pf_assembly + pf_identity + ef_government + ef_trade
              + ef_regulation,
              data = data_question1)

Goal8lm <- lm(goal8 ~ unemployment.rate + internet_usage + pf_law
              + pf_expression + ef_legal + ef_trade + ef_regulation
              + population,
              data = data_question1)

Goal9lm <- lm(goal9 ~ + GDPpercapita + MilitaryExpenditurePercentGDP
              + internet_usage + pf_law + ef_legal + ef_trade + ef_regulation
              + population,
              data = data_question1)

Goal10lm <- lm(goal10 ~ unemployment.rate + internet_usage + pf_law
               + pf_security + pf_movement + pf_religion + pf_expression
               + population,
               data = data_question1)

Goal11lm <- lm(goal11 ~ unemployment.rate + internet_usage + pf_movement
               + pf_religion + pf_identity + ef_legal + ef_trade
               + population,
               data = data_question1)

Goal12lm <- lm(goal12 ~ + GDPpercapita + pf_law + pf_religion + pf_expression
               + pf_identity + ef_legal + ef_trade + population,
               data = data_question1)

Goal13lm <- lm(goal13 ~ unemployment.rate + GDPpercapita
               + MilitaryExpenditurePercentGDP + pf_law + pf_religion
               + pf_expression + pf_identity + ef_legal,
               data = data_question1)

Goal15lm <- lm(goal15 ~ unemployment.rate + MilitaryExpenditurePercentGDP
               + internet_usage + pf_law + pf_religion + ef_government
               + ef_money + population, data = data_question1)

Goal16lm <- lm(goal16 ~ pf_law + pf_security + pf_religion + pf_expression
               + pf_identity + ef_government + ef_legal + population,
               data = data_question1)

Goal17lm <- lm(goal17 ~ unemployment.rate + MilitaryExpenditurePercentGDP
               + internet_usage + pf_law + pf_movement + ef_government
               + ef_legal + population,
               data = data_question1)

#coefficient plot

# Create a dataframe of tidy models
model_list <- list(Goal1lm, Goal2lm, Goal3lm, Goal4lm, Goal5lm, Goal6lm,
                   Goal7lm, Goal8lm, Goal9lm, Goal10lm, Goal11lm, Goal12lm,
                   Goal13lm, Goal15lm, Goal16lm, Goal17lm)

models_tidy <- lapply(model_list, tidy)
names(models_tidy) <- paste("Goal",
                            c(1:13, 15:17),
                            "lm",
                            sep="")

# Combine into a single dataframe
df_tidy <-
  do.call(rbind,
          lapply(names(models_tidy),
                 function(x) cbind(models_tidy[[x]],
                                   Model=x)))

# Filter for significant p-values
df_tidy_significant <-
  df_tidy[df_tidy$p.value < p_value_threshold, ]
library(RColorBrewer)
model_order <- c("Goal1lm", "Goal2lm", "Goal3lm", "Goal4lm", "Goal5lm",
                 "Goal6lm", "Goal7lm", "Goal8lm","Goal9lm", "Goal10lm",
                 "Goal11lm", "Goal12lm", "Goal13lm", "Goal15lm",
                 "Goal16lm", "Goal17lm")

df_tidy_significant$Model <-
  factor(df_tidy_significant$Model, levels = model_order)

myColors <-
  colorRampPalette(brewer.pal(11, "Spectral"))(length(unique(df_tidy_significant$term)))

# All models graph
ggplot(df_tidy_significant,
       aes(y = Model,
           x = estimate,
           color = term)) +
  geom_point() +
  geom_vline(xintercept = 0,
             linetype = "solid",
             size = 0.5,
             color = viridis(1, option = "B", begin = 0.5)) +
  geom_errorbar(aes(xmin = estimate - std.error, xmax = estimate + std.error),
                width = 0.2) +
  scale_color_manual(values = myColors) + 
  theme(axis.text.y = element_text(angle = 0, hjust = 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot",
        legend.position = "bottom", 
        legend.text = element_text(size = 6), 
        legend.title = element_text(size = 7),
        legend.key.size = unit(0.4, "cm")) +
  labs(title = "Coefficient Plot of Regression Models",
       y = "Models",
       x = "Estimates")
```

Here is our general plot. For visualization purpose, let's also plot the positive and negative correlation plots.

```{r, echo = TRUE, message = FALSE, warning=FALSE, out.height="100%", out.width="100%"}
#positive values only 
df_tidy_positive_p <- df_tidy_significant[df_tidy_significant$estimate > 0, ]

df_tidy_positive_p$Model <- factor(df_tidy_positive_p$Model, levels = model_order)

myColors <- colorRampPalette(brewer.pal(11, "Spectral"))(length(unique(df_tidy_positive_p$term)))
# Plot only positive coefficients
ggplot(df_tidy_positive_p,
       aes(y = Model,
           x = estimate,
           color = term)) +
  geom_point() +
  geom_vline(xintercept = 0,
             linetype = "solid",
             size = 0.5,
             color = viridis(1, option = "B", begin = 0.5)) +
  geom_errorbar(aes(xmin = estimate - std.error, xmax = estimate + std.error),
                width = 0.2) +
  scale_color_manual(values = myColors) + 
  theme(axis.text.y = element_text(angle = 0, hjust = 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot",
        legend.position = "bottom",
        legend.text = element_text(size = 6),
        legend.title = element_text(size = 7),
        legend.key.size = unit(0.4, "cm")) +
  labs(title = "Coefficient Plot of Regression Models (Positive Coefficients)",
       y = "Models",
       x = "Estimates")

#negative values only
df_tidy_positive_n <-
  df_tidy_significant[df_tidy_significant$estimate < 0, ]

df_tidy_positive_n$Model <-
  factor(df_tidy_positive_n$Model, levels = model_order)

myColors <-
  colorRampPalette(brewer.pal(11, "Spectral"))(length(unique(df_tidy_positive_n$term)))

ggplot(df_tidy_positive_n, aes(y = Model, x = estimate, color = term)) +
  geom_point() +
  geom_vline(xintercept = 0,
             linetype = "solid",
             size = 0.5,
             color = viridis(1, option = "B", begin = 0.5)) +
  geom_errorbar(aes(xmin = estimate - std.error, xmax = estimate + std.error), width = 0.2) +
  scale_color_manual(values = myColors) + 
  theme(axis.text.y = element_text(angle = 0, hjust = 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot",
        legend.position = "bottom",
        legend.text = element_text(size = 6),
        legend.title = element_text(size = 7),
        legend.key.size = unit(0.4, "cm")) +
  labs(title = "Coefficient Plot of Regression Models (Negative Coefficients)",
       y = "Models",
       x = "Estimates")
```

In these plots, we can see that most of our variables are influencing positively and negatively our goals. I.e., unemployment.rate is influencing goals 10 and 8 negatively, but positively other goals. Nevertheless, some factors seem to influence only positively our goals. It is the case for internet_usage. These results are due to the range of the objectives contained in the SDGs: as each goal has a different objective, and that our factors also have a wide range of action, we find different impacts between our variables.  

Earlier in our study, we noticed a negative correlation between goals 12 and 13 with the rest of the selected factors. Now that we have selected our models for these SDGs, we can see that most of their dependent factors are influencing negatively their scores, which is the opposite trend of the remaining goals. Without taking into account the intercept, only pf_religion and population is influencing positively goal 12, and pf_religion and unemployment.rate for goal 13. Therefore, with the selected factors of our two models and their adjusted R squared both superior to 0.75, we can show that the influence of *GDPpercapita*, *PFlaw*, *PFexpression*, *PFidentity*, *EFlegal* and *EFtrade* will influence negatively goal 12 (Responsible consumption and production) and that *GDPpercapita*, *MilitaryExpenditurePercentGDP*, *pf_law*, *pf_expression*, *pf_identity* and *ef_legal* will influence negatively goal 13. 

Nevertheless, we had also noticed in the distribution of the SDGs 12 and 13 that they had the best average score among all the goals. This divergence may be due to the awareness contributed by the 
recent movements, the political actions and the medias about the urge against climate change. Therefore, with more visibility, more investment and actions have been made for trying to implement better solutions for fighting global warming. On another hand, the other SDGs objectives may have receive less attention, which results in lower scores. 

In conclusion, after reviewing which variables are correlated with each other, after taking care of our multicollinearity problems and doing our regressions on our overall SDG scores, we have finally been able to get a broad picture of the influence of our factors over the SDGs. Unfortunately, because of poor explained variance for some regression models (Goals 2/10/15/17), we have to be careful while drawing any conclusions from the regressions. In addition, the lack of climate oriented factors may be the reason why we don't have many positive coefficient in our regression models concerning goals 12 and 13. 
