# Analysis

```{r test, echo = FALSE, message = FALSE}
source(here::here("scripts/Clean/setup.R"))
```

## Answers to the research questions

### Focus on relationship between SDGs
**How are the different SDGs linked? (We want to see if some SDGs are linked in the fact that a high score on one implies a high score on the other, and thus if we can make groups of SDGs that are comparable in that way).**

Let's explore how the different SDG are correlated together by creating a heatmap of the correlation between our variables. We added a script to check whether the correlations are significantly different from 0. First, let's select the SDGs scores.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
sdg_scores <- Q4[, c('goal1', 'goal2', 'goal3', 'goal4', 'goal5', 'goal6',
                     'goal7', 'goal8', 'goal9', 'goal10', 'goal11', 'goal12',
                     'goal13', 'goal15', 'goal16', 'goal17')]
```

We then, initialize the matrices and calculate the correlation, and p-values of each combination of SDGs scores

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
cor_matrix <- matrix(nrow = ncol(sdg_scores), ncol = ncol(sdg_scores))
p_matrix <- matrix(nrow = ncol(sdg_scores), ncol = ncol(sdg_scores))
rownames(cor_matrix) <- colnames(sdg_scores)
rownames(p_matrix) <- colnames(sdg_scores)
colnames(cor_matrix) <- colnames(sdg_scores)
colnames(p_matrix) <- colnames(sdg_scores)

# Calculate correlation and p-values
for (i in 1:ncol(sdg_scores)) {
  for (j in 1:ncol(sdg_scores)) {
    test_result <- cor.test(sdg_scores[, i], sdg_scores[, j])
    cor_matrix[i, j] <- test_result$estimate
    p_matrix[i, j] <- test_result$p.value}}
```

We then reshape our data to be able to use the `ggplot2` package to create our heatmap.

```{r, echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE, out.width="100%"}
melted_cor_matrix <-
  melt(cor_matrix)
melted_p_matrix <-
  melt(matrix(as.vector(p_matrix), nrow = ncol(sdg_scores)))

plot_data <- # Combine the datasets
  cbind(melted_cor_matrix, p_value = melted_p_matrix$value)

ggplot(plot_data, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  geom_text(aes(label = sprintf("%.2f", value), color = p_value < 0.05),
            vjust = 1) +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", 
                       midpoint = 0, limit = c(-1,1), space = "Lab", 
                       name="Pearson\nCorrelation") +
  scale_color_manual(values = c("black", "yellow")) + # black when significant, yellow if not
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        axis.text.y = element_text(angle = 45, hjust = 1),
        legend.position = "none") +
  labs(x = 'SDG Goals', y = 'SDG Goals',
       title = 'Correlation Matrix with Significance Indicator')
```

Note that as said previously, we assessed the correlations to ascertain if they substantially deviated from zero, setting the significance level at an alpha of 5%. To aid in visualization, we marked any correlations that did not meet this level of significance with a yellow highlight in our graphical representation. The absence of yellow markings on our plot suggests that all Sustainable Development Goal (SDG) scores demonstrate a statistically significant correlation.

We can have a look at the shape of the corelation between the SDGs with the plot function.

```{r, echo = TRUE, message = FALSE, warning=FALSE, cache = TRUE, out.width="100%"}
plot(sdg_scores)
```



## Different methods considered

## Competing approaches

## Justifications
